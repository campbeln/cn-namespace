<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cn</name>
    </assembly>
    <members>
        <member name="T:Cn.Data.MetaData">
            ########################################################################################################################
             <summary>
             Represents a datasource's metadata description (names, data types, etc.).
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>September 12, 2005</LastFullCodeReview>
        </member>
        <member name="M:Cn.Data.MetaData.#ctor(Cn.Collections.MultiArray,Cn.Data.enumDataSource)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oDataSourceMetaData">MultiArray representing the entire metadata structure.</param>
             <param name="eDataSource">Enumeration representing the source the <paramref>oDataSourceMetaData</paramref> was generated from.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eDataSource</paramref> is unreconized.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oDataSourceMetaData</paramref> is null or contains no <c>Rows</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oDataSourceMetaData</paramref> does not contain the required column names as defined by <c>GetColumnNames</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oDataSourceMetaData</paramref> contains one or more <c>Rows</c> with a non-boolean value in 'Is_Nullable'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oDataSourceMetaData</paramref> contains one or more <c>Rows</c> with a null-string value in 'Table_Name' or 'Column_Name'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oDataSourceMetaData</paramref> contains one or more <c>Rows</c> with a non-numeric, non null-string value in 'MinimumNumericValue' or 'MamimumNumericValue'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oDataSourceMetaData</paramref> contains one or more <c>Rows</c> with a mismatched pair of MinimumNumericValue/MamimumNumericValue (a pair must both be numeric or both be null-strings).</exception>
            ############################################################
             <LastUpdated>May 9, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.Reset(Cn.Collections.MultiArray,Cn.Data.enumDataSource)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="oDataSourceMetaData">MultiArray representing the entire metadata structure.</param>
             <param name="eDataSource">Enumeration representing the source the <paramref>oDataSourceMetaData</paramref> was generated from.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eDataSource</paramref> is unreconized.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oDataSourceMetaData</paramref> is null or contains no <c>Rows</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oDataSourceMetaData</paramref> does not contain the required column names as defined by <c>GetColumnNames</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oDataSourceMetaData</paramref> contains one or more <c>Rows</c> with a non-boolean value in 'Is_Nullable'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oDataSourceMetaData</paramref> contains one or more <c>Rows</c> with a null-string value in 'Table_Name' or 'Column_Name'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oDataSourceMetaData</paramref> contains one or more <c>Rows</c> with a non-numeric, non null-string value in 'MinimumNumericValue' or 'MamimumNumericValue'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oDataSourceMetaData</paramref> contains one or more <c>Rows</c> with a mismatched pair of MinimumNumericValue/MamimumNumericValue (a pair must both be numeric or both be null-strings).</exception>
            ############################################################
             <LastUpdated>May 9, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.DoReset(System.String,Cn.Collections.MultiArray,Cn.Data.enumDataSource)">
            ############################################################
             <summary>
             Resets the class to its initilized state while loading the provided metadata into this instance.
             </summary>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="oDataSourceMetaData">MultiArray representing the entire metadata structure.</param>
             <param name="eDataSource">Enumeration representing the source the <paramref>oDataSourceMetaData</paramref> was generated from.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eDataSource</paramref> is unreconized.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oDataSourceMetaData</paramref> is null or contains no <c>Rows</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oDataSourceMetaData</paramref> does not contain the required column names as defined by <c>GetColumnNames</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oDataSourceMetaData</paramref> contains one or more <c>Rows</c> with a non-boolean value in 'Is_Nullable'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oDataSourceMetaData</paramref> contains one or more <c>Rows</c> with a null-string value in 'Table_Name' or 'Column_Name'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oDataSourceMetaData</paramref> contains one or more <c>Rows</c> with a non-numeric, non null-string value in 'MinimumNumericValue' or 'MamimumNumericValue'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oDataSourceMetaData</paramref> contains one or more <c>Rows</c> with a mismatched pair of MinimumNumericValue/MamimumNumericValue (a pair must both be numeric or both be null-strings).</exception>
            ############################################################
             <LastUpdated>January 25, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.Exists(System.String)">
            ############################################################
             <summary>
             Determines if this instance contains the referenced table.
             </summary>
             <param name="sTableName">String representing the table name to locate.</param>
             <returns>Boolean value signaling the existance of the passed <paramref>sTableName</paramref>.<para/>Returns true if the passed <paramref>sTableName</paramref> is present within this instance, or false if it is not present.</returns>
            ############################################################
             <LastUpdated>May 9, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.Exists(System.String,System.String)">
            ############################################################
             <summary>
             Determines if this instance contains the referenced table/column name pair.
             </summary>
             <param name="sTableName">String representing the table name to locate.</param>
             <param name="sColumnNames">String representing the comma delimited column names to locate.</param>
             <returns>Boolean value signaling the existance of the passed <paramref>sTableName</paramref>/<paramref>sColumnNames</paramref> pair.<para/>Returns true if the <paramref>sTableName</paramref>/<paramref>sColumnNames</paramref> pair is defined within this instance, or false if it is not present.</returns>
            ############################################################
             <LastUpdated>May 28, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.Exists(Cn.Collections.MultiArray,System.String)">
            ############################################################
             <summary>
             Determines if the passed structure contains the referenced column names.
             </summary>
             <param name="oTable">MultiArray representing the single table to search.</param>
             <param name="sColumnNames">String representing the comma delimited column names to locate.</param>
             <returns>Boolean value signaling the existance of the passed <paramref>sColumnName</paramref> within the passed <paramref>oTable</paramref>.<para/>Returns true if all the <paramref>sColumnNames</paramref> are defined within <paramref>oTable</paramref>, or false if they are not all present.</returns>
            ############################################################
             <LastUpdated>September 12, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.Value(System.String,System.String,Cn.Data.MetaData.enumMetaDataTypes)">
            ############################################################
             <summary>
             Gets the requested metadata value for the referenced table/column name pair.
             </summary>
             <param name="sTableName">String representing the table name to locate.</param>
             <param name="sColumnName">String representing the column name to locate.</param>
             <param name="eMetaDataValue">Enumeration representing the required metadata value.</param>
             <returns>String representing the requested metadata value.</returns>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eMetaDataValue</paramref> is unreconized.</exception>
            ############################################################
             <LastUpdated>May 28, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.Value(System.String,System.String,Cn.Data.MetaData.enumMetaDataTypes,System.String)">
            ############################################################
             <summary>
             Sets the requested metadata value for the referenced table/column name pair with the new value.
             </summary>
             <param name="sTableName">String representing the table name to locate.</param>
             <param name="sColumnName">String representing the column name to locate.</param>
             <param name="eMetaDataValue">Enumeration representing the required metadata value.</param>
             <param name="sNewValue">String representing the new value for the referenced index.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eMetaDataValue</paramref> is unreconized.</exception>
            ############################################################
             <LastUpdated>May 28, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.Validate(System.String,System.String,System.String)">
            ############################################################
             <summary>
             Determines if the provided values are valid for the referenced table/column name pair.
             </summary>
             <param name="sTableName">String representing the table name to locate.</param>
             <param name="sColumnName">String representing the column name to locate.</param>
             <param name="sValue">String representing a value to validate.</param>
             <returns>Boolean value indicating if the provided values are valid for the referenced table/column name pair.</returns>
            ############################################################
             <LastUpdated>December 18, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.Validate(System.String,System.String,System.String[])">
            ############################################################
             <summary>
             Determines if the provided values are valid for the referenced table/column name pair.
             </summary>
             <param name="sTableName">String representing the table name to locate.</param>
             <param name="sColumnName">String representing the column name to locate.</param>
             <param name="a_sValues">String array where each index represents a value to validate.</param>
             <returns>Boolean value indicating if the provided values are valid for the referenced table/column name pair.</returns>
            ############################################################
             <LastUpdated>December 18, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.Validate(Cn.Collections.MultiArray,System.String,System.String,Cn.Data.Picklists)">
            ############################################################
             <summary>
             Determines if the provided values are valid for the referenced table/column name pair.
             </summary>
             <param name="oTable">MultiArray representing the single table to search.</param>
             <param name="sColumnName">String representing the column name to locate.</param>
             <param name="sValue">String representing a value to validate.</param>
             <param name="oPicklists">Picklists instance representing the picklists related to this instance.</param>
             <returns>Boolean value indicating if the provided values are valid for the referenced table/column name pair.</returns>
            ############################################################
             <LastUpdated>December 18, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.Validate(Cn.Collections.MultiArray,System.String,System.String[],Cn.Data.Picklists)">
            ############################################################
             <summary>
             Determines if the provided values are valid for the referenced table/column name pair.
             </summary>
             <param name="oTable">MultiArray representing the single table to search.</param>
             <param name="sColumnName">String representing the column name to locate.</param>
             <param name="a_sValues">String array where each index represents a value to validate.</param>
             <param name="oPicklists">Picklists instance representing the picklists related to this instance.</param>
             <returns>Boolean value indicating if the provided values are valid for the referenced table/column name pair.</returns>
            ############################################################
             <LastUpdated>December 18, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.SetRelatedPicklists(Cn.Data.Picklists)">
            ############################################################
             <summary>
             Sets the picklist names related to table/column name pairs within this instance as defined by the referenced <c>Picklists</c>.
             </summary>
             <param name="oPicklists">Picklists instance representing the picklists related to this instance.</param>
            ############################################################
             <LastUpdated>December 17, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.Table(System.String)">
            ############################################################
             <summary>
             Retrieves a structure containing the entries for the referenced table.
             </summary>
             <param name="sTableName">String representing the table name to locate.</param>
             <returns>MultiArray containing all the entries for the passed <paramref>sTableName</paramref> defined within this instance, or null if it was not defined.</returns>
            ############################################################
             <LastUpdated>December 24, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.Column(System.String,System.String)">
            ############################################################
             <summary>
             Retrieves a structure containing the single entry for a specific column name within the referenced table.
             </summary>
             <param name="sTableName">String representing the table name to locate.</param>
             <param name="sColumnName">String representing the column name to locate.</param>
             <returns>MultiArray containing the single entry for the passed <paramref>sColumnName</paramref> within the passed <paramref>sTableName</paramref> defined within this instance, or null if it was not defined.</returns>
            ############################################################
             <LastUpdated>February 1, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.Column(Cn.Collections.MultiArray,System.String)">
            ############################################################
             <summary>
             Retrieves a structure containing the single entry for a specific column name within the referenced table.
             </summary>
             <param name="oTable">MultiArray representing the single table to search.</param>
             <param name="sColumnName">String representing the column name to locate.</param>
             <returns>MultiArray containing the single entry for the passed <paramref>sColumnName</paramref> within the passed <paramref>oTable</paramref>, or null if it was not defined.</returns>
            ############################################################
             <LastUpdated>February 1, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.ColumnsInTable(System.String,System.String)">
            ############################################################
             <summary>
             Retrieves the column names present within the referenced table.
             </summary>
             <param name="sTableName">String representing the table name to locate.</param>
             <param name="sColumnNames">String representing the comma delimited column names to locate.</param>
             <returns>String value containing a comma delimited list of <paramref>sColumnNames</paramref> present within the passed <paramref>sTableName</paramref>.</returns>
            ############################################################
             <LastUpdated>January 4, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.ColumnsInTable(Cn.Collections.MultiArray,System.String)">
            ############################################################
             <summary>
             Retrieves the column names present within the referenced table.
             </summary>
             <param name="oTable">MultiArray representing the single table to search.</param>
             <param name="sColumnNames">String representing the comma delimited column names to locate.</param>
             <returns>String value containing a comma delimited list of <paramref>sColumnNames</paramref> present within the passed <paramref>oTable</paramref>.</returns>
            ############################################################
             <LastUpdated>January 4, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.DoValue(System.String,System.String,System.String,Cn.Data.MetaData.enumMetaDataTypes,System.Boolean,System.String)">
            ############################################################
             <summary>
             Get/sets the requested meta data value for the referenced table/column name pair.
             </summary>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="sTableName">String representing the table name to locate.</param>
             <param name="sColumnName">String representing the column name to locate.</param>
             <param name="eMetaDataValue">Enumeration representing the required metadata value.</param>
             <param name="bSetNewValue">Boolean value signaling if a new value is to be set.</param>
             <param name="sNewValue">String representing the new value for the referenced index.</param>
             <returns>String representing the requested metadata value.</returns>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eMetaDataValue</paramref> is unreconized.</exception>
            ############################################################
             <LastUpdated>May 28, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.DoValidate(Cn.Collections.MultiArray,System.String[],Cn.Data.Picklists)">
            ############################################################
             <summary>
             Gets a value indicating if the provided values are valid for the referenced column definition.
             </summary>
             <param name="oColumn">MultiArray representing the single column to use as the datatype definition.</param>
             <param name="a_sValues">String array where each index represents a value to validate.</param>
             <param name="oPicklists">Picklists instance representing the picklists related to this instance.</param>
             <returns>Boolean value indicating if the provided values are valid for the referenced column defintion.</returns>
            ############################################################
             <LastUpdated>January 8, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.SearchMetaData(Cn.Collections.MultiArray,System.String,System.String,System.Boolean,System.Int32@)">
            ############################################################
             <summary>
             Searches the passed MultiArray for the referenced table/column name pair.
             </summary>
             <param name="oMetaData">MultiArray representing the metadata to search.</param>
             <param name="sTableName">String representing the table name to locate.</param>
             <param name="sColumnName">String representing the column name to locate.</param>
             <param name="bReturnTable">Boolean value signaling if we are to return a single column entry or an entire table.</param>
             <param name="iRowIndex">0-based by reference integer representing the desired row index.</param>
             <returns>MultiArray containing the entries for the passed <paramref>sTableName</paramref> or <paramref>sTableName</paramref>/<paramref>sColumnName</paramref> pair (as defined by <paramref>bReturnTable</paramref>) as defined within the passed <paramref>oMetaData</paramref>.</returns>
            ############################################################
             <LastUpdated>January 28, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.FindPresentColumns(Cn.Collections.MultiArray,System.String,System.String,System.Boolean)">
            ############################################################
             <summary>
             Determines which of the referenced column names are present within the referenced table/structure. 
             </summary>
             <param name="oMetaData">MultiArray representing the metadata to search</param>
             <param name="sTableName">String representing the table name to locate.</param>
             <param name="sColumnNames">String representing the column name to locate.</param>
             <param name="bReturnPresentColumns"></param>
             <returns>String optionally containing the <paramref>sColumnNames</paramref> present within the passed <paramref>oMetaData</paramref> or a MakeBoolean-able value representing the presence of all of the passed <paramref>sColumnNames</paramref> (as defined by <paramref>bReturnPresentColumns</paramref>).</returns>
            ############################################################
             <LastUpdated>September 12, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.DetermineMinMaxDataType(System.String,System.String,System.String,Cn.Data.enumDataSource)">
            ############################################################
             <summary>
             Determines the generalized data type, minimum and maximum numeric values for the referenced database data type.
             </summary>
             <remarks>
             NOTE: Code snipit to test numeric column width's: "select [test1] = convert(decimal(18,0),999999999999999999+0)", "...+1)", etc.
             </remarks>
             <param name="sDataType">String representing the columns data type.</param>
             <param name="sNumericPrecision">String representing the columns numeric precision.</param>
             <param name="sNumericScale">String representing the columns numeric scale.</param>
             <param name="eDataSource">Enumeration representing the source the <paramref>oDataSourceMetaData</paramref> was generated from.</param>
             <returns>structMinMaxDataType containing the generalized data type, minimum and maximum numeric values.</returns>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eDataSource</paramref> is unreconized.</exception>
            ############################################################
             <LastUpdated>September 15, 2005</LastUpdated>
        </member>
        <member name="P:Cn.Data.MetaData.GetData">
            ############################################################
             <summary>
             Assists in the collection of the underlying structure which defines this instance.
             </summary>
             <value>MetaDataCollectionHelper instance configured to collect the underlying structure which defines this instance.</value>
            ############################################################
             <LastUpdated>January 14, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Data.MetaData.Data">
            ############################################################
             <summary>
             Gets a deep copy of the underlying structure which defines this instance.
             </summary>
             <value>Deep copy of the MultiArray which defines the metadata of this instance.</value>
            ############################################################
             <LastUpdated>December 18, 2009</LastUpdated>
        </member>
        <member name="T:Cn.Data.MetaData.enumDataTypes">
            <summary>Generalized metadata types.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumDataTypes.cnUnknown">
            <summary>Unknown data type.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumDataTypes.cnBoolean">
            <summary>Boolean data type.</summary>
            <remarks>
            NOTE: <c>Input</c>s defined as <c>cnBoolean</c>s always return values based on <see cref="M:Cn.Data.Tools.MakeBooleanInteger(System.Object,System.Boolean)">MakeBooleanInteger</see>, where zero equates to false and non-zero equates to true.
            </remarks>
        </member>
        <member name="F:Cn.Data.MetaData.enumDataTypes.cnInteger">
            <summary>Integer (whole number) data type.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumDataTypes.cnFloat">
            <summary>Floating point data type.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumDataTypes.cnCurrency">
            <summary>Floating point currency data type.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumDataTypes.cnChar">
            <summary>"Short" character data type.<para/>"Short" character types are defined as character types where the data source allows "equal to" and "not equal to" comparisons on the columns.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumDataTypes.cnLongChar">
            <summary>"Long" character data type.<para/>"Long" character types are defined as character types where the data source does not allow "equal to" and "not equal to" comparisons on the columns.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumDataTypes.cnDateTime">
            <summary>Date/time data type.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumDataTypes.cnBinary">
            <summary>Binary (file-based) data type.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumDataTypes.cnGUID">
            <summary>GUID (global unique identifier) data type.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumDataTypes.cnUnsupported">
            <summary>Currently unsupported data type.</summary>
        </member>
        <member name="T:Cn.Data.MetaData.enumMetaDataTypes">
            <summary>Tracked metadata descriptions.</summary>
            <seealso cref="T:Cn.Data.MetaData.enumDataTypes"/>
        </member>
        <member name="F:Cn.Data.MetaData.enumMetaDataTypes.cnTable_Name">
            <summary>Table name.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumMetaDataTypes.cnColumn_Name">
            <summary>Column name.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumMetaDataTypes.cnColumn_Default">
            <summary>Default column value.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumMetaDataTypes.cnIs_Nullable">
            <summary>Column can contain NULL.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumMetaDataTypes.cnData_Type">
            <summary>Generalized column data type as defined within enumDataTypes.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumMetaDataTypes.cnCharacter_Maximum_Length">
            <summary>Maximum number of characters allowed.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumMetaDataTypes.cnNumeric_Precision">
            <summary>Maximum number of significant digits allowed.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumMetaDataTypes.cnNumeric_Scale">
            <summary>Numeric scale (number of digits the decimal point has been shifted).</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumMetaDataTypes.cnMinimumNumericValue">
            <summary>String representing the minimum allowed numeric value.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumMetaDataTypes.cnMamimumNumericValue">
            <summary>String representing the maximum allowed numeric value.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumMetaDataTypes.cnRelatedPicklist">
            <summary>String representing the name of the <c>Picklist</c> related to the column.</summary>
        </member>
        <member name="T:Cn.Data.MetaData.enumValueTypes">
            <summary>Value types.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumValueTypes.cnSingleValue">
            <summary>Single value.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumValueTypes.cnVerbatum">
            <summary>Verbatum type.<para/>Value is not automaticially validated for range, length or data type.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumValueTypes.cnSingleValueFromPicklist">
            <summary>Single value from picklist.<para/>Value refers to a single related enumerated value.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumValueTypes.cnMultiValuesFromPicklist">
            <summary>Multiple values from picklist.<para/>Common delimited value refers to one or more related enumerated values.</summary>
        </member>
        <member name="T:Cn.Data.MetaData.enumValueErrorTypes">
            <summary>Form input errors.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumValueErrorTypes.cnNoError">
            <summary>No errors have occured.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumValueErrorTypes.cnIncorrectLength">
            <summary>Submitted value is too long.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumValueErrorTypes.cnIncorrectDataType">
            <summary>Submitted value is of an incorrect type.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumValueErrorTypes.cnValueIsRequired">
            <summary>A value is required for this input.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumValueErrorTypes.cnNotWithinPicklist">
            <summary>Submitted value is not within the picklist.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumValueErrorTypes.cnUnknownOrUnsupportedType">
            <summary>Input data type is of an unknown or unsupported type (so Renderer cannot validate its value).</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumValueErrorTypes.cnCustom">
            <summary>Custom error (developer should define their own error message).</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumValueErrorTypes.cnMissingInput">
            <summary>A defined input is missing from the HTML form.</summary>
        </member>
        <member name="F:Cn.Data.MetaData.enumValueErrorTypes.cnMultipleValuesSubmittedForSingleValue">
            <summary>Multiple values were submitted for an input defined as a single value.</summary>
        </member>
        <member name="T:Cn.Data.MetaData.Values">
            ########################################################################################################################
             <summary>
             A collection of functions to determine the validity of values based on their related datatype descriptions.
             </summary>
            ########################################################################################################################
        </member>
        <member name="M:Cn.Data.MetaData.Values.Validate(System.String[],Cn.Data.MetaData.enumDataTypes,Cn.Data.MetaData.enumValueTypes,System.Boolean,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Boolean,Cn.Data.Picklists,System.String,System.Boolean)">
            ############################################################
             <summary>
             Determines if all of the provided values are valid based on the provided datatype description. 
             </summary>
             <param name="a_sValues">String array where each index represents a value to validate.</param>
             <param name="eDataType">Enumerated value representing the column's datatype.</param>
             <param name="eValueType">Enumerated value representing the column's stored value type.</param>
             <param name="bIsNullable">Boolean value indicating if the column is permitted to hold a null value.</param>
             <param name="iMaximumCharacterLength">Integer representing the column's maximum character length.</param>
             <param name="sMinimumNumericValue">String representing the column's minimum numeric value.</param>
             <param name="sMaximumNumericValue">String representing the column's maximum numeric value.</param>
             <param name="iNumericPrecision">Integer representing the column's numeric precision.</param>
             <param name="iNumericScale">Integer representing the column's numeric scale.</param>
             <param name="bIsIDColumnForNewRecord">Boolean value indicating if this is an ID column and a new record (used by Renderer.Form).</param>
             <param name="oPicklists">Picklists instance representing the picklists related to this instance.</param>
             <param name="sPicklistName">String representing the picklist name.</param>
             <param name="bPicklistIsAdHoc">Boolean value representing if the picklist associated with the input will be defined at runtime by the developer (used by Renderer.Form).</param>
             <returns>Enumeration representing the error message for the first invalid value within the provided values.</returns>
            ############################################################
             <LastUpdated>March 26, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Data.MetaData.MetaDataCollectionHelper">
            ########################################################################################################################
             <summary>
             Assists in the collection of <c>MetaData</c> data.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview></LastFullCodeReview>
        </member>
        <member name="T:Cn.Data.CollectionHelper">
            ########################################################################################################################
             <summary>
             Assists in the collection of <c>MultiArray</c>-based data that requires a paticular structure.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>December 24, 2009</LastFullCodeReview>
        </member>
        <member name="M:Cn.Data.CollectionHelper.#ctor(System.String[],System.String,System.String)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
            ############################################################
             <LastUpdated>December 24, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.CollectionHelper.SQLStatement">
            ############################################################
             <summary>
             Retrieves a properly formatted SQL query to collect the data from a data source.
             </summary>
             <returns>String containing a SQL query referencing the passed <paramref>sTableName</paramref> to collect the data for the parent type.</returns>
            ############################################################
             <LastUpdated>January 14, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.CollectionHelper.SQLStatement(System.String)">
            ############################################################
             <summary>
             Retrieves a properly formatted SQL query to collect the data from a data source.
             </summary>
             <param name="sTableName">String representing the table name containing the data.</param>
             <returns>String containing a SQL query referencing the passed <paramref>sTableName</paramref> to collect the data for the parent type.</returns>
            ############################################################
             <LastUpdated>January 14, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.CollectionHelper.Data(Cn.Data.DBMS)">
            ############################################################
             <summary>
             Retrieves the data for the parent type based on the provided information and data source.
             </summary>
             <param name="oDBMS"><c>DBMS</c> instance representing an active connection to the related data source.</param>
             <returns><c>MultiArray</c> instance based on the provided information and data source.</returns>
            ############################################################
             <LastUpdated>December 24, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.CollectionHelper.Data(Cn.Data.DBMS,System.String)">
            ############################################################
             <summary>
             Retrieves the data for the parent type based on the provided information and data source.
             </summary>
             <param name="oDBMS"><c>DBMS</c> instance representing an active connection to the related data source.</param>
             <param name="sTableName">String representing the table name containing the data.</param>
             <returns><c>MultiArray</c> instance based on the provided information and data source.</returns>
            ############################################################
             <LastUpdated>December 24, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Data.CollectionHelper.RequiredColumns">
            ############################################################
             <summary>
             Retrieves the column names required to be present within a MultiArray structure that defines the parent type.
             </summary>
             <returns>String array where each index represents a MultiArray column name required by the parent type.</returns>
            ############################################################
             <LastUpdated>December 24, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Data.CollectionHelper.BaseSQLStatement">
            ############################################################
             <summary>
             Gets the unmodified base SQL.
             </summary>
             <value>String representing the unmodified base SQL.</value>
            ############################################################
             <LastUpdated>January 14, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.MetaDataCollectionHelper.#ctor">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
            ############################################################
             <LastUpdated>January 25, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.MetaDataCollectionHelper.SQLStatement(System.String,Cn.Data.enumDataSource)">
            ############################################################
             <summary>
             Retrieves a properly formatted SQL query to collect the data from a data source.
             </summary>
             <remarks>
             For SQL*Server, the <paramref>sTableName</paramref> is as follows - "[DatabaseName].INFORMATION_SCHEMA.COLUMNS".
             </remarks>
             <param name="sTableName">String representing the table name containing the data.</param>
             <param name="eDataSource">Enumeration representing the source the <paramref>oDataSourceMetaData</paramref> was generated from.</param>
             <returns>String containing a SQL query referencing the passed <paramref>sTableName</paramref> to collect the data for the parent type.</returns>
            ############################################################
             <LastUpdated>January 25, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.MetaData.MetaDataCollectionHelper.Data(Cn.Data.DBMS,System.String,Cn.Data.enumDataSource)">
            ############################################################
             <summary>
             Retrieves the data for the parent type based on the provided information and data source.
             </summary>
             <remarks>
             For SQL*Server, the <paramref>sTableName</paramref> is as follows - "[DatabaseName].INFORMATION_SCHEMA.COLUMNS".
             </remarks>
             <param name="oDBMS"><c>DBMS</c> instance representing an active connection to the related data source.</param>
             <param name="sTableName">String representing the table name containing the data.</param>
             <param name="eDataSource">Enumeration representing the data source type.</param>
             <returns><c>MultiArray</c> instance based on the provided information and data source.</returns>
            ############################################################
             <LastUpdated>January 25, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Data.MetaData.MetaDataCollectionHelper.OptionalColummns">
            ############################################################
             <summary>
             Retrieves the optionally definable column names present within a MultiArray structure that defines the parent type.
             </summary>
             <returns>String array where each index represents a MultiArray column name optionally definable by the parent type.</returns>
            ############################################################
             <LastUpdated>January 25, 2009</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.Form">
            ########################################################################################################################
             <summary>
             Controls.Form class wraps the functionality of Renderer.Form into a WebControl.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview></LastFullCodeReview>
        </member>
        <member name="T:Cn.Web.Controls.List">
            ########################################################################################################################
             <summary>
             Controls.List class wraps the functionality of Renderer.List into a WebControl.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview></LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Controls.List.#ctor">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
            ############################################################
             <LastUpdated>February 9, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.List.DoReset(System.Boolean)">
            ############################################################
             <summary>
             Resets the class to its initialized state.
             </summary>
             <param name="bSetListOrForm"></param>
            ############################################################
             <LastUpdated>March 19, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.List.DataBind">
            ############################################################
             <summary>
             Binds a data source to the invoked server control and all its child controls.
             </summary>
            ############################################################
             <LastUpdated>March 22, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.List.Render(System.Web.UI.HtmlTextWriter)">
            ############################################################
             <summary>
             Renders the control to the specified HTML writer.
             </summary>
             <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the control content.</param>
            ############################################################
             <LastUpdated>May 31, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.List.DoCollectPageResults">
            ############################################################
             <summary>
             Collects the value of the <c>g_oPageResults</c> variable.
             </summary>
            ############################################################
             <LastUpdated>March 22, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.List.CreateChildControls">
            ############################################################
             <summary>
             Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preperation for posting back or rendering.
             </summary>
            ############################################################
             <LastUpdated>June 2, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.List.DoCreateChildControl(Cn.Web.Renderer.enumPageSections,System.Int32,System.Object)">
            ############################################################
             <summary>
             Creates the control(s) for the specified page section of the WebControl.
             </summary>
             <param name="ePageSection">Enumeration representing the referenced page section.</param>
             <param name="iExistingRecordIndex">Integer representing the index of the data item in the data source.</param>
             <param name="oDataItem">Object representing the value to use when data-binding operations are preformed.</param>
            ############################################################
             <LastUpdated>June 2, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.List.DoRenderChildControl(Cn.Web.Renderer.enumPageSections)">
            ############################################################
             <summary>
             Renders the control(s) for the specified page section of the WebControl.
             </summary>
             <param name="ePageSection">Enumeration representing the referenced page section.</param>
            ############################################################
             <LastUpdated>June 28, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.List.GetTemplate(Cn.Web.Renderer.enumPageSections)">
            ############################################################
             <summary>
             Translates the provided page section into it's related template.
             </summary>
             <param name="ePageSection">Enumeration representing the referenced page section.</param>
             <returns>ITemplate object representing the related template.</returns>
            ############################################################
             <LastUpdated>May 31, 2010</LastUpdated>
        </member>
        <member name="E:Cn.Web.Controls.List.GenerateResults">
            ############################################################
             <summary>
             Collects/reorders the entire results set.
             </summary>
             <remarks>
             A delegate definition is required for this event.
             </remarks>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="E:Cn.Web.Controls.List.CollectPageResults">
            ############################################################
             <summary>
             Collects the provided page results.
             </summary>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="E:Cn.Web.Controls.List.PrintLength">
            ############################################################
             <summary>
             Returns the length the passed page section crawls down a printed page.
             </summary>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.List.DataSource">
            ############################################################
             <summary>
             Gets/sets the data source that is provided to the items within the control.
             </summary>
             <value>Object (optonally containing a list of values) that is provided to the items within the control.</value>
            ############################################################
             <LastUpdated>February 11, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.List.Header">
            ############################################################
             <summary>
             Gets/sets the Template representing the header section of the rendered page.
             </summary>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.List.NoResults">
            ############################################################
             <summary>
             Gets/sets the Template representing the no results section of the rendered page.
             </summary>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.List.DetailHeader">
            ############################################################
             <summary>
             Gets/sets the Template representing the detail header section of the rendered page.
             </summary>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.List.Detail">
            ############################################################
             <summary>
             Gets/sets the Template representing the detail section of the rendered page.
             </summary>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.List.MissingRecord">
            ############################################################
             <summary>
             Gets/sets the Template representing the missing record section of the rendered page.
             </summary>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.List.DetailFooter">
            ############################################################
             <summary>
             Gets/sets the Template representing the detail footer section of the rendered page.
             </summary>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.List.Footer">
            ############################################################
             <summary>
             Gets/sets the Template representing the footer section of the rendered page.
             </summary>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.List.Results">
            ############################################################
             <summary>
             Gets/sets the results set related to this instance.
             </summary>
             <remarks>
             <para/>NOTE: If a <c>Parent</c> Report has been defined, this call is forwarded onto it's own <c>Results</c> property (as it is the <c>Report</c> that is responsible for the rendering of the <c>List</c> or <c>Form</c>).
             </remarks>
             <value>String representation of a Pagination object that represents this instance's results set.</value>
            ############################################################
             <LastUpdated>February 8, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.List.RecordsPerPage">
            ############################################################
             <summary>
             Gets/sets the count of records per rendered page (not including new records).
             </summary>
             <remarks>
             <para/>NOTE: If a <c>Parent</c> Report has been defined, this call is forwarded onto it's own <c>RecordsPerPage</c> property (as it is the <c>Report</c> that is responsible for the rendering of the <c>List</c> or <c>Form</c>).
             <para/>NOTE: This property does not make much sense for <c>Report</c>s as <c>Report</c>s would generally represent the entire set of results (i.e. a <c>RecordsPerPage</c> value of "0"). But if you choose to only represent X records on a given report, you can utilize this property. Do note however that <c>RecordsPerPage</c> refers to records rendered per page load, *NOT* per phisically printed page!
             </remarks>
             <value>1-based integer representing the count of records per rendered page (not including new records).</value>
            ############################################################
             <LastUpdated>February 8, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.List.DefaultOrderBy">
            ############################################################
             <summary>
             Gets/sets a value representing the default SQL Order By Clause for the current instance.
             </summary>
             <remarks>
             The <c>OrderBy</c> clause is set by default based on the following order of prescience:
             <para/>1) <c>OrderBy</c> equals the querystring's "OrderBy" field, as defined by the end-user (as long as it's safe).
             <para/>2) Failing 1, <c>OrderBy</c> equals this instance's Results' "OrderedBy" field, as defined by the end-user (as long as it's safe).
             <para/>3) Failing 1 and 2, <c>OrderBy</c> equals the <c>DefaultOrderBy</c>, as defined by the developer (as long as it's safe).
             <para/>4) Failing 1, 2 and 3, <c>OrderBy</c> equals a null-string.
             <para/><c>OrderBy</c> clause values set via the <c>OrderBy</c> property overwrite this default value.
             <para/>
             <para/>NOTE: This value is meaningless for <c>Report</c>s as the value is always sourced from the underlying <c>List</c> or <c>Form</c>.
             </remarks>
             <value>String representing the default SQL order by clause for the current instance.</value>
            ############################################################
             <LastUpdated>February 8, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.List.PageLength">
            ############################################################
             <summary>
             Get/sets a value indicating the total height of a printed page.
             </summary>
             <remarks>
             Due to the web's poor ability to format pages for printing, this method of counting the current number of units (inches, cm, mm, etc.) the current text would be on a printed page was devised. For example - if one record occupys approximately 1 inch of vertical page space, the top of the forth record would start at approximately 3 inches down the page. Though not perfect, this method allows the developer to better accommodate the printed page by controlling where page breaks occur.
             <para/>NOTE: The units you choose to return from this function (inches, cm, mm, etc.) are irrelevant, so long as they agree with the units returned by the <c>PageLength</c> functions in the related <c>List</c>, <c>Form</c> and/or <c>Report</c>.
             <para/>NOTE: If a <c>Parent</c> Report has been defined, this call is forwarded onto it's own <c>PageLength</c> property (as it is the <c>Report</c> that is responsible for the rendering of the <c>List</c> or <c>Form</c>).
             </remarks>
             <value>1-based integer representing the total height of a printed page in a unit of measure.</value>
            ############################################################
             <LastUpdated>February 8, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.List.Printable">
            ############################################################
             <summary>
             Gets/sets a value indicating if we are in printable mode.
             </summary>
             <remarks>
             <para/>NOTE: If a <c>Parent</c> Report has been defined, this call is forwarded onto it's own <c>Printable</c> property (as it is the <c>Report</c> that is responsible for the rendering of the <c>List</c> or <c>Form</c>).
             </remarks>
             <value>Boolean value indicating if we are in printable mode.</value>
            ############################################################
             <LastUpdated>February 8, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.List.Debug">
            ############################################################
             <summary>
             Gets/sets a value indicating if we are in debug mode.
             </summary>
             <remarks>
             When enabled, this functionality utilizes carrage return/line feed character(s) during rendering, as well as the non-compresssed JavaScript oFiles in order to ease debugging.
             <para/>NOTE: If a <c>Parent</c> Report has been defined, this call is forwarded onto it's own <c>Debug</c> property (as it is the <c>Report</c> that is responsible for the rendering of the <c>List</c> or <c>Form</c>).
             </remarks>
             <value>Boolean value indicating if we are in debug mode.</value>
            ############################################################
             <LastUpdated>February 8, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.List.ControlManager">
            ############################################################
             <summary>
             Gets the base control class related to this instance.
             </summary>
             <value>Renderer.List object that manages this instance.</value>
            ############################################################
             <LastUpdated>February 9, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.List.Controls">
            ############################################################
             <summary>
             Gets a System.Web.UI.ControlCollection object that represents the child controls for a specified server control in the UI hierarchy.
             </summary>
             <value>System.Web.UI.ControlCollection object that represents the child controls for a specified server control in the UI hierarchy.</value>
            ############################################################
             <LastUpdated>June 1, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.List.IsDataBound">
            ############################################################
             <summary>
             Gets a value representing if this instance has been data bound.
             </summary>
             <value>Boolean value representing if this instance has been data bound.</value>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.List.GenerateResultsEventHandler">
            ############################################################
             <summary>
             Delegate signature defintion for the <c>Form.GenerateResults</c> events.
             </summary>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.List.CollectPageResultsEventHandler">
            ############################################################
             <summary>
             Delegate signature defintion for the <c>Form.CollectPageResults</c> events.
             </summary>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.List.PrintLengthEventHandler">
            ############################################################
             <summary>
             Delegate signature defintion for the <c>Form.PrintLength</c> events.
             </summary>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.List.Control_List">
            ########################################################################################################################
             <summary>
             Renderer.List class implementation for the Control.List WebControl.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview></LastFullCodeReview>
        </member>
        <member name="T:Cn.Web.Renderer.List">
            ########################################################################################################################
             <summary>
             Renderer.List class.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>May 16, 2007</LastFullCodeReview>
        </member>
        <member name="T:Cn.Web.Renderer.Base">
            ########################################################################################################################
             <summary>
             A web presentation layer for the output of data from any data source (DBMS, XML, flat-file, etc.).
             </summary>
             <remarks>
             NOTE: This class is only used internally by Renderer.
             </remarks>
            ########################################################################################################################
             <LastFullCodeReview>May 22, 2007</LastFullCodeReview>
        </member>
        <member name="F:Cn.Web.Renderer.Base.Response">
            <summary>Gets/sets the current enviroment's HttpResponse object.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.Base.Request">
            <summary>Gets/sets the current enviroment's HttpRequest object.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.Base.g_oSettings">
            <summary>Gets/sets the current enviroment's Web.Settings.Current object.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.Base.g_iTableRecordIndex">
            <summary>Gets/sets the current record's 0-based index within the current table (only includes existing records).</summary>
        </member>
        <member name="F:Cn.Web.Renderer.Base.g_iTableIndex">
            <summary>Gets/sets the results stack's 0-based current table index.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.Base.g_iRecordsPerPage">
            <summary>Gets/sets the 1-based count of records per rendered page (not including new records).</summary>
        </member>
        <member name="F:Cn.Web.Renderer.Base.g_iRecordCount">
            <summary>Gets/sets the current record's 1-based index (includes existing and missing records).</summary>
        </member>
        <member name="F:Cn.Web.Renderer.Base.g_iPageCount">
            <summary>Gets/sets a value indicating the current page number.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.Base.g_iPageLength">
            <summary>Get/sets a value indicating the total height of a printed page.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.Base.g_iPageCrawl">
            <summary>Gets/sets a value indicating the unit of measure crawl down the current page.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.Base.g_bAllowResponseWrite">
            <summary>Gets/sets a value indicating if we are permitted to utilize Response.Write.</summary>
        </member>
        <member name="M:Cn.Web.Renderer.Base.#ctor(Cn.Web.Renderer.Base.enumRendererObjectTypes,System.String)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="eType">Enumeration representing the object type of this instance.</param>
             <param name="sClassPath">String representing the class path of this instance.</param>
             <seealso cref="M:Cn.Web.Renderer.Base.Reset"/>
            ############################################################
             <LastUpdated>March 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.Reset">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
            ############################################################
             <LastUpdated>November 6, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.Reset(Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
            ############################################################
             <LastUpdated>June 1, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.DoResetIndexes">
            ############################################################
             <summary>
             Resets the class's indexes to their pre-loop state.
             </summary>
            ############################################################
             <LastUpdated>March 22, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.GenerateHTMLInput(Cn.Web.Renderer.enumGeneralInputTypes,System.String,System.Object)">
            ############################################################
             <summary>
             Renders the requested general input.
             </summary>
             <remarks>
             NOTE: <c>cnComplexSorter</c> is not yet implemented.
             <para/>For a <c>cnQuickSearch</c> type, <paramref>sAdditionalData</paramref> equates to the quicksearch form's initial search criteria. <paramref>oAdditionalData</paramref> equates to a string representing the quicksearch form text input's additional attributes.
             <para/>For a <c>cnUserSelectedStackCheckbox</c> type, <paramref>sAdditionalData</paramref> equates to the current record's ID. <paramref>oAdditionalData</paramref> equates to a Hashtable of string containing values for the "FormName" (required), "TableName", "IDColumn", "UserSelectedStack" and the checkbox's additional "Attributes".
             </remarks>
             <param name="eGeneralInputType">Enumeration representing the general input type to render.</param>
             <param name="sAdditionalData">String representing the additional data required by the general input.</param>
             <param name="oAdditionalData">Object representing the additional data required by the general input.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eGeneralInputType</paramref> is unreconized.</exception>
             <exception cref="T:Cn.CnException">Thrown when a <paramref>eGeneralInputType</paramref> of cnUserSelectedStackCheckbox is requested and the passed <paramref>oAdditionalData</paramref>'s (casted as a Hashtable of strings) key "FormName" contains a null-string.</exception>
             <returns>String representing the requested XHTML/DHTML control.</returns>
            ############################################################
             <LastUpdated>January 8, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.GenerateResults(Cn.Data.Pagination,System.Boolean)">
            ############################################################
             <summary>
             Collects/reorders the entire results set.
             </summary>
             <remarks>
             Required function overload to collect the entire results set of relevant record IDs.
             <para/>If the page has no results or results that need to be re-ordered, this function is called by the <c>Class Constructor</c>. This function is not called if there are results that are properly ordered.
             </remarks>
             <param name="oResults">Pagination object representing entire result set's record IDs.</param>
             <param name="bReorderExistingResults">Boolean value indicating if the entire results set requires re-ordering.</param>
            ############################################################
             <LastUpdated>June 2, 2004</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.CollectPageResults(Cn.Data.Pagination)">
            ############################################################
             <summary>
             Collects the provided page results.
             </summary>
             <remarks>
             Required function overload to collect a page's relevant records as referenced within the passed <paramref>rPageResults</paramref>.
             <para/>If the page has results, this function is called after <c>GenerateResults</c> or the <c>Class Constructor</c> (depending on the state of the provided <paramref>sResultsStack</paramref>). This function is not called if there are no records to render.
             <para/>NOTE: The <paramref>rPageResults</paramref> parameter is equivalent to this code snipit: <code>rPageResults = Renderer.Results.getRange(Renderer.Index, Renderer.List.RecordsPerPage)</code>
             </remarks>
             <param name="oPageResults">Pagination object representing this page's relevant record IDs.</param>
            ############################################################
             <LastUpdated>May 30, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.PrintLength(Cn.Web.Renderer.enumPageSections)">
            ############################################################
             <summary>
             Returns the length the passed page section crawls down a printed page.
             </summary>
             <remarks>
             Optionally overload this function to define your own print length definition.
             <para/>This function is called once per page section when a <c>Renderer.Report</c> is being rendered in print mode. This means that you can calculate the page crawl on a per record basis if need be.
             <para/>Due to the web's poor ability to format pages for printing, this method of counting the current number of units (inches, cm, mm, etc.) the current text would be on a printed page was devised. For example - if one record occupies approximately 1 inch of vertical page space, the top of the forth record would start at approximately 3 inches down the page. Though not perfect, this method allows the developer to better accommodate the printed page by controlling where page breaks occur.
             <para/>NOTE: The units you choose to return from this function (inches, cm, mm, etc.) are irrelevant, so long as they agree with the units returned by the <c>PageLength</c> functions in the related <c>RendererList</c>, <c>RendererForm</c> and/or <c>RendererReport</c>.
             </remarks>
             <returns>Integer representing the page crawl in units for the referenced <paramref>ePageSection</paramref>.</returns>
            ############################################################
             <LastUpdated>May 22, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.Header">
            ############################################################
             <summary>
             Outputs the header section of the rendered page.
             </summary>
             <remarks>
             Optionally overload this function to define your own page section.
             <para/>If the page has results, this function is called after <c>CollectPageResults</c>. If the page has no results, this function is called after <c>GenerateResults</c> or the <c>Class Constructor</c> (depending on the state of the provided <paramref>sResultsStack</paramref>). This function is called for every page render.
             </remarks>
            ############################################################
             <LastUpdated>May 19, 2004</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.NoResults">
            ############################################################
             <summary>
             Outputs the no results section of the rendered page.
             </summary>
             <remarks>
             Optionally overload this function to define your own page section.
             <para/>If the page has no results, this function is called after <c>Header</c>. This function is not called if there are records to render.
             </remarks>
            ############################################################
             <LastUpdated>May 19, 2004</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.Footer">
            ############################################################
             <summary>
             Outputs the footer section of the rendered page.
             </summary>
             <remarks>
             Optionally overload this function to define your own page section.
             <para/>If the page has results, this function is called after <c>DetailFooter</c>. If the page has no results, this function is called after <c>NoResults</c>. This function is called for every page render.
             </remarks>
            ############################################################
             <LastUpdated>May 19, 2004</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.Render(System.Int32,System.String)">
            ############################################################
             <summary>
             Renders the revelent section of the provided list.
             </summary>
             <remarks>
             Required function overload to render the revelent section of the provided list.
             </remarks>
             <param name="iRecordsPerPage">1-based integer representing the maximum number of records so show per rendered page (does not include new records).</param>
             <param name="sResultsStack">String representing the related Data.Pagination instance.</param>
            ############################################################
             <LastUpdated>May 21, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.Render(System.Int32,System.String[],System.String)">
            ############################################################
             <summary>
             Renders the revelent section of the provided list.
             </summary>
             <remarks>
             Required function overload to render the revelent section of the provided list.
             </remarks>
             <param name="iRecordsPerPage">1-based integer representing the maximum number of records so show per rendered page (does not include new records).</param>
             <param name="a_sIDs">Array of strings representing all the expected IDs to render (including IDs that may no longer be available).</param>
             <param name="sIDsOrderedBy">String representing the order the passed <paramref>sIDsOrderedBy</paramref> is in.</param>
            ############################################################
             <LastUpdated>November 19, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.Render(Cn.Data.Pagination.PaginationTable)">
            ############################################################
             <summary>
             Renders the provided list.
             </summary>
             <param name="oCurrentTable">PaginationTable object representing the relevant record IDs for the current table index.</param>
            ############################################################
             <LastUpdated>April 21, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.DoRenderNoResults">
            ############################################################
             <summary>
             Outputs the no results section (surrounded by the header and footer) of the rendered page.
             </summary>
            ############################################################
             <LastUpdated>May 21, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.DoRenderHeaders">
            ############################################################
             <summary>
             Outputs the header and detail header sections of the rendered page.
             </summary>
            ############################################################
             <LastUpdated>March 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.DoRenderBody(Cn.Data.Pagination.PaginationTable)">
            ############################################################
             <summary>
             Outputs the detail and missing record sections (as required) of the rendered page.
             </summary>
             <param name="oCurrentTable">PaginationTable object representing the relevant record IDs for the current table index.</param>
            ############################################################
             <LastUpdated>March 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.DoRenderFooters">
            ############################################################
             <summary>
             Outputs the footer and detail footer sections of the rendered page.
             </summary>
            ############################################################
             <LastUpdated>March 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.DoRenderPageBreak">
            ############################################################
             <summary>
             Inserts a page break.
             </summary>
            ############################################################
             <LastUpdated>June 1, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.CalculatePageCrawl(System.Int32)">
            ############################################################
             <summary>
             Calculates the unit of measure crawl down the current page.
             </summary>
             <remarks>
             NOTE: If the passed <paramref>iSectionLength</paramref> does not fit on the current page, an implicit page break is inserted.
             </remarks>
             <param name="iSectionLength">1-based integer representing the length of the current section.</param>
            ############################################################
             <LastUpdated>August 31, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.CalculatePageCrawl(Cn.Web.Renderer.Base,System.Boolean@,System.Int32)">
            ############################################################
             <summary>
             Calculates the unit of measure crawl down the current page for a <c>Detail</c> or <c>MissingRecord</c> section.
             </summary>
             <remarks>
             NOTE: If v1.x of C# supported Templates (or, in C# vanicular: Generics) this could be implemented with a single definition. But since dotNet 1.x does not support Templates (Generics) we do it in 2 definitions below which differ only in their signatures ("List oListForm" -vs- "Form oListForm").
             </remarks>
             <param name="oListForm"><c>List</c> or <c>Form</c> object reference to the list/form class to render.</param>
             <param name="bInitialCall">Reference to a boolean value indicating if this is the initial or a subsequent function call (value is updated by reference).</param>
             <param name="iDetailSectionLength">1-based integer representing the length of the current list/form's <c>Detail</c> section.</param>
            ############################################################
             <LastUpdated>March 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.FixLength(System.Int32)">
            ############################################################
             <summary>
             Ensures that the provided section length is a positive number less then or equal to the <c>PageLength</c>.
             </summary>
             <param name="iSectionLength">1-based integer representing the length of the current section.</param>
             <returns>1-based integer representing the single page remainder length of the current section.</returns>
            ############################################################
             <LastUpdated>August 31, 2004</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Base.SectionFitsOnCurrentPage(System.Int32)">
            ############################################################
             <summary>
             Determines if the provided section length fits on the current page.
             </summary>
             <param name="iSectionLength">1-based integer representing the length of the current section.</param>
             <returns>Boolean value indicating if the passed <paramref>iSectionLength</paramref> fits on the current page.</returns>
            ############################################################
             <LastUpdated>May 22, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Base.Parent">
            ############################################################
             <summary>
             Gets/sets the parent <c>Report</c> class related to this instance (if any).
             </summary>
             <remarks>
             <para/>NOTE: <c>Report</c>s are not permitted to have a <c>Parent</c> defined. Only <c>List</c>s and <c>Form</c>s are permitted to have a non-null <c>Parent</c>.
             </remarks>
             <value>Report object that represents the instance's related <c>Report</c> class (if any).</value>
            ############################################################
             <LastUpdated>January 10, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Base.Settings">
            ############################################################
             <summary>
             Gets/sets the settings for this instance.
             </summary>
             <remarks>
             <para/>NOTE: If a <c>Parent</c> Report has been defined, this call is forwarded onto it's own <c>Settings</c> property (as it is the <c>Report</c> that is responsible for the rendering of the <c>List</c> or <c>Form</c>).
             </remarks>
             <value>Cn.Web.Settings.Current instance representing the current enviroment.</value>
            ############################################################
             <LastUpdated>March 4, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Base.DefaultOrderBy">
            ############################################################
             <summary>
             Gets/sets a value representing the default SQL Order By Clause for the current instance.
             </summary>
             <remarks>
             The <c>OrderBy</c> clause is set by default based on the following order of prescience:
             <para/>1) <c>OrderBy</c> equals the querystring's "OrderBy" field, as defined by the end-user (as long as it's safe).
             <para/>2) Failing 1, <c>OrderBy</c> equals this instance's Results' "OrderedBy" field, as defined by the end-user (as long as it's safe).
             <para/>3) Failing 1 and 2, <c>OrderBy</c> equals the <c>DefaultOrderBy</c>, as defined by the developer (as long as it's safe).
             <para/>4) Failing 1, 2 and 3, <c>OrderBy</c> equals a null-string.
             <para/><c>OrderBy</c> clause values set via the <c>OrderBy</c> property overwrite this default value.
             <para/>
             <para/>NOTE: This value is meaningless for <c>Report</c>s as the value is always sourced from the underlying <c>List</c> or <c>Form</c>.
             </remarks>
             <value>String representing the default SQL order by clause for the current instance.</value>
            ############################################################
             <LastUpdated>May 22, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Base.PageLength">
            ############################################################
             <summary>
             Get/sets a value indicating the total height of a printed page.
             </summary>
             <remarks>
             Due to the web's poor ability to format pages for printing, this method of counting the current number of units (inches, cm, mm, etc.) the current text would be on a printed page was devised. For example - if one record occupys approximately 1 inch of vertical page space, the top of the forth record would start at approximately 3 inches down the page. Though not perfect, this method allows the developer to better accommodate the printed page by controlling where page breaks occur.
             <para/>NOTE: The units you choose to return from this function (inches, cm, mm, etc.) are irrelevant, so long as they agree with the units returned by the <c>PageLength</c> functions in the related <c>List</c>, <c>Form</c> and/or <c>Report</c>.
             <para/>NOTE: If a <c>Parent</c> Report has been defined, this call is forwarded onto it's own <c>PageLength</c> property (as it is the <c>Report</c> that is responsible for the rendering of the <c>List</c> or <c>Form</c>).
             </remarks>
             <value>1-based integer representing the total height of a printed page in a unit of measure.</value>
            ############################################################
             <LastUpdated>May 22, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Base.AllowResponseWrite">
            ############################################################
             <summary>
             Gets/sets a value indicating if we are permitted to utilize Response.Write.
             </summary>
             <remarks>
             This is primarly in place to allow for "pseudo-renders" like that required during the CreateChildControl period of WebControls (as no rendering is actually done by the initial call). This can also be used by developers who choose to handle the rendering of their own page breaks and record trackers, should such a need arise.
             <para/>NOTE: If a <c>Parent</c> Report has been defined, this call is forwarded onto it's own <c>AllowResponseWrite</c> property (as it is the <c>Report</c> that is responsible for the rendering of the <c>List</c> or <c>Form</c>).
             </remarks>
             <value>Boolean value indicating if we are permitted to utilize Response.Write.</value>
            ############################################################
             <LastUpdated>June 1, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Base.Printable">
            ############################################################
             <summary>
             Gets/sets a value indicating if we are in printable mode.
             </summary>
             <remarks>
             <para/>NOTE: If a <c>Parent</c> Report has been defined, this call is forwarded onto it's own <c>Printable</c> property (as it is the <c>Report</c> that is responsible for the rendering of the <c>List</c> or <c>Form</c>).
             </remarks>
             <value>Boolean value indicating if we are in printable mode.</value>
            ############################################################
             <LastUpdated>May 22, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Base.Debug">
            ############################################################
             <summary>
             Gets/sets a value indicating if we are in debug mode.
             </summary>
             <remarks>
             When enabled, this functionality utilizes carrage return/line feed character(s) during rendering, as well as the non-compresssed JavaScript oFiles in order to ease debugging.
             <para/>NOTE: If a <c>Parent</c> Report has been defined, this call is forwarded onto it's own <c>Debug</c> property (as it is the <c>Report</c> that is responsible for the rendering of the <c>List</c> or <c>Form</c>).
             </remarks>
             <value>Boolean value indicating if we are in debug mode.</value>
            ############################################################
             <LastUpdated>May 22, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Base.Breadcrumb">
            ############################################################
             <summary>
             Gets the <c>Breadcrumb</c> trail related to this instance.
             </summary>
             <remarks>
             <para/>NOTE: If a <c>Parent</c> Report has been defined, this call is forwarded onto it's own <c>Breadcrumb</c> property (as it is the <c>Report</c> that is responsible for the rendering of the <c>List</c> or <c>Form</c>).
             </remarks>
             <value>Breadcrumb object that represents this instance's Breadcrumb trail.</value>
            ############################################################
             <LastUpdated>November 9, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Base.Results">
            ############################################################
             <summary>
             Gets the results set related to this instance.
             </summary>
             <remarks>
             <para/>NOTE: If a <c>Parent</c> Report has been defined, this call is forwarded onto it's own <c>Results</c> property (as it is the <c>Report</c> that is responsible for the rendering of the <c>List</c> or <c>Form</c>).
             </remarks>
             <value>Pagination object that represents this instance's results set.</value>
            ############################################################
             <LastUpdated>May 22, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Base.UserSelectedStack">
            ############################################################
             <summary>
             Gets the user selected stack related to this instance.
             </summary>
             <value>String representing the related Data.Pagination instance for this instance's user selected stack.</value>
            ############################################################
             <LastUpdated>May 16, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Base.CRLF">
            ############################################################
             <summary>
             Gets the carrage return/line feed character(s) utilized by this instance.
             </summary>
             <value>String representing the carrage return/line feed character(s) utilized by this instance.</value>
            ############################################################
             <LastUpdated>May 22, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Base.RecordsPerPage">
            ############################################################
             <summary>
             Gets the count of records per rendered page (not including new records).
             </summary>
             <remarks>
             <para/>NOTE: If a <c>Parent</c> Report has been defined, this call is forwarded onto it's own <c>RecordsPerPage</c> property (as it is the <c>Report</c> that is responsible for the rendering of the <c>List</c> or <c>Form</c>).
             <para/>NOTE: This property does not make much sense for <c>Report</c>s as <c>Report</c>s would generally represent the entire set of results (i.e. a <c>RecordsPerPage</c> value of "0"). But if you choose to only represent X records on a given report, you can utilize this property. Do note however that <c>RecordsPerPage</c> refers to records rendered per page load, *NOT* per phisically printed page!
             </remarks>
             <value>1-based integer representing the count of records per rendered page (not including new records).</value>
            ############################################################
             <LastUpdated>May 22, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Base.RecordCount">
            ############################################################
             <summary>
             Gets the current record's number (includes both existing and missing records).
             </summary>
             <remarks>
             <para/>NOTE: If a <c>Parent</c> Report has been defined, this call is forwarded onto it's own <c>RenderedRecordCount</c> property (as it is the <c>Report</c> that is responsible for the rendering of the <c>List</c> or <c>Form</c>).
             </remarks>
             <value>1-based integer representing the current record's number (includes both existing and missing records).</value>
            ############################################################
             <LastUpdated>June 1, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Base.TableRecordIndex">
            ############################################################
             <summary>
             Gets the current record's index (only includes existing records).
             </summary>
             <remarks>
             <para/>NOTE: If a <c>Parent</c> Report has been defined, this call is forwarded onto it's own <c>TableRecordIndex</c> property (as it is the <c>Report</c> that is responsible for the rendering of the <c>List</c> or <c>Form</c>).
             </remarks>
             <value>0-based integer representing the current record's index (only includes existing records).</value>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Base.TableIndex">
            ############################################################
             <summary>
             Gets the results stack's current table index.
             </summary>
             <remarks>
             <para/>NOTE: If a <c>Parent</c> Report has been defined, this call is forwarded onto it's own <c>TableIndex</c> property (as it is the <c>Report</c> that is responsible for the rendering of the <c>List</c> or <c>Form</c>).
             </remarks>
             <value>0-based integer representing the current table's index.</value>
            ############################################################
             <LastUpdated>June 1, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Base.PageCount">
            ############################################################
             <summary>
             Gets a value indicating the current page number.
             </summary>
             <remarks>
             <para/>NOTE: If a <c>Parent</c> Report has been defined, this call is forwarded onto it's own <c>PageCount</c> property (as it is the <c>Report</c> that is responsible for the rendering of the <c>List</c> or <c>Form</c>).
             </remarks>
             <value>1-based integer representing the current page number.</value>
            ############################################################
             <LastUpdated>January 4, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Base.PageCrawl">
            ############################################################
             <summary>
             Gets a value indicating the unit of measure crawl down the current page.
             </summary>
             <remarks>
             Due to the web's poor ability to format pages for printing, this method of counting the current number of units (inches, cm, mm, etc.) the current text would be on a printed page was devised. For example - if one record occupies approximately 1 inch of vertical page space, the top of the forth record would start at approximately 3 inches down the page. Though not perfect, this method allows the developer to better accommodate the printed page by controlling where page breaks occur.
             <para/>NOTE: The units returned from this function (inches, cm, mm, etc.) are irrelevant, as they are based on the units returned by the <c>PageLength</c> functions in the related <c>RendererList</c>, <c>RendererForm</c> and/or <c>RendererReport</c>.
             <para/>NOTE: If a <c>Parent</c> Report has been defined, this call is forwarded onto it's own <c>PageCrawl</c> property (as it is the <c>Report</c> that is responsible for the rendering of the <c>List</c> or <c>Form</c>).
             </remarks>
             <value>1-based integer representing the unit of measure crawl down the current page.</value>
            ############################################################
             <LastUpdated>May 22, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Base.Type">
            ############################################################
             <summary>
             Gets a value representing the object type of this instance.
             </summary>
             <value>Enumeration representing the object type of this instance.</value>
            ############################################################
             <LastUpdated>May 22, 2007</LastUpdated>
        </member>
        <member name="T:Cn.Web.Renderer.Base.enumRendererObjectTypes">
            <summary>Enumeration representing the reconized <c>Renderer</c> object types.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.Base.enumRendererObjectTypes.cnUnknown">
            <summary>Unknown object type.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.Base.enumRendererObjectTypes.cnReport">
            <summary>Renderer Report.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.Base.enumRendererObjectTypes.cnList">
            <summary>Renderer List.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.Base.enumRendererObjectTypes.cnForm">
            <summary>Renderer Form.</summary>
        </member>
        <member name="M:Cn.Web.Renderer.List.#ctor">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <seealso cref="!:Cn.Web.Renderer.List.Reset()"/>
            ############################################################
             <LastUpdated>November 6, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.List.#ctor(Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <seealso cref="!:Cn.Web.Renderer.List.Reset(Web.Settings.Current)"/>
            ############################################################
             <LastUpdated>November 6, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.List.#ctor(Cn.Web.Renderer.Base.enumRendererObjectTypes,System.String)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <remarks>
             NOTE: This protected interface is provided as a pass-thru for derived types (specificially Renderer.Form's)
             </remarks>
             <param name="eType">Enumeration representing the object type of this instance.</param>
             <param name="sClassPath">String representing the class path of this instance.</param>
             <seealso cref="M:Cn.Web.Renderer.Base.Reset"/>
            ############################################################
             <LastUpdated>March 19, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.List.Render(System.Int32,System.String)">
            ############################################################
             <summary>
             Renders the revelent section of the provided list.
             </summary>
             <param name="iRecordsPerPage">1-based integer representing the maximum number of records so show per rendered page (does not include new records).</param>
             <param name="sResultsStack">String representing the related <c>Pagination</c> instance.</param>
            ############################################################
             <LastUpdated>May 31, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.List.Render(System.Int32,System.String[],System.String)">
            ############################################################
             <summary>
             Renders the revelent section of the provided list.
             </summary>
             <remarks>
             Required function overload to render the revelent section of the provided list.
             </remarks>
             <param name="iRecordsPerPage">1-based integer representing the maximum number of records so show per rendered page (does not include new records).</param>
             <param name="a_sIDs">Array of strings representing all the expected IDs to render (including IDs that may no longer be available).</param>
             <param name="sIDsOrderedBy">String representing the order the passed <paramref>sIDsOrderedBy</paramref> is in.</param>
            ############################################################
             <LastUpdated>May 31, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.List.DoCollectResults(System.Int32,System.String,System.String[],System.String)">
            ############################################################
             <summary>
             Collects the page results in preperation for rendering.
             </summary>
             <remarks>
             NOTE: This function resets RecordsPerPage, TableRecordIndex, TableIndex, and RenderedRecordCount, loads the sResultsStack and returns the page ResultsStack in preperation for the List or Form render.
             <para/>
             <para/>The <c>OrderBy</c> clause is set by default based on the following order of prescience:
             <para/>1) <c>OrderBy</c> equals the querystring's "OrderBy" field, as defined by the end-user (as long as it's safe).
             <para/>2) Failing 1, <c>OrderBy</c> equals this instance's Results' "OrderedBy" field, as defined by the end-user (as long as it's safe).
             <para/>3) Failing 1 and 2, <c>OrderBy</c> equals the <c>DefaultOrderBy</c>, as defined by the developer (as long as it's safe).
             <para/>4) Failing 1, 2 and 3, <c>OrderBy</c> equals a null-string.
             <para/><c>OrderBy</c> clause values set via the <c>OrderBy</c> property overwrite this default value.
             </remarks>
             <param name="iRecordsPerPage">1-based integer representing the maximum number of records so show per rendered page (does not include new records).</param>
             <param name="sResultsStack">String representing the related Data.Pagination instance.</param>
             <param name="a_sIDs">Array of strings representing all the expected IDs to render (including IDs that may no longer be available).</param>
             <param name="sIDsOrderedBy">String representing the order the passed <paramref>sIDsOrderedBy</paramref> is in.</param>
             <returns>Pagination object representing the revelent section of the provided List or Form.</returns>
            ############################################################
             <LastUpdated>March 19, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.List.DoRender(Cn.Data.Pagination,System.Boolean)">
            ############################################################
             <summary>
             Renders the <c>List</c>/<c>Form</c>.
             </summary>
             <param name="oPageResults">Pagination object representing this page's relevant record IDs.</param>
             <param name="bResetAfterRender">Boolean value representing if we are supposed to Reset the class with the current Settings after the render.</param>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.List.DoRenderNoResults">
            ############################################################
             <summary>
             Outputs the no results section (surrounded by the header and footer) of the rendered page.
             </summary>
            ############################################################
             <LastUpdated>June 1, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.List.DoRenderHeaders">
            ############################################################
             <summary>
             Outputs the header and detail header sections of the rendered page.
             </summary>
             <remarks>
             NOTE: We can get away with the get to inline cast of this into an IListForm because .cnReport's must override these virtual functions
             </remarks>
            ############################################################
             <LastUpdated>June 1, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.List.DoRenderBody(Cn.Data.Pagination.PaginationTable)">
            ############################################################
             <summary>
             Outputs the detail and missing record sections (as required) of the rendered page.
             </summary>
             <param name="oCurrentTable">PaginationTable object representing the relevant record IDs for the current table index.</param>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.List.DoRenderFooters">
            ############################################################
             <summary>
             Outputs the footer and detail footer sections of the rendered page.
             </summary>
            ############################################################
             <LastUpdated>June 1, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.List.DetailHeader">
            ############################################################
             <summary>
             Outputs the detail header section of the rendered page.
             </summary>
             <remarks>
             Optionally overload this function to define your own page section.
             <para/>If the page has results, this function is called after <c>Header</c> and before any records are rendered via the <c>Detail</c> and/or <c>MissingRecord</c> functions. This function is not called if there are no records to render.
             <para/>If a printable <c>Renderer.Report</c> is being rendered, this function is called after each <c>Report.PageHeader</c>.
             </remarks>
            ############################################################
             <LastUpdated>May 19, 2004</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.List.Detail">
            ############################################################
             <summary>
             Outputs a detail section of the rendered page.
             </summary>
             <remarks>
             Optionally overload this function to define your own page section.
             <para/>This function is called once per successfully collected record. This function is not called if there are no successfully collected records to render.
             </remarks>
            ############################################################
             <LastUpdated>June 21, 2004</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.List.MissingRecord(System.String,System.String)">
            ############################################################
             <summary>
             Outputs a missing record section of the rendered page.
             </summary>
             <remarks>
             Optionally overload this function to define your own page section.
             <para/>This function is called once per missing record. This function is not called if there are no missing records to render.
             </remarks>
            ############################################################
             <LastUpdated>May 19, 2004</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.List.DetailFooter">
            ############################################################
             <summary>
             Outputs the detail footer section of the rendered page.
             </summary>
             <remarks>
             Optionally overload this function to define your own page section.
             <para/>If the page has results, this function is called after the last record is rendered via the <c>Detail</c> or <c>MissingRecord</c> function. This function is not called if there are no records to render.
             <para/>If a printable <c>Renderer.Report</c> is being rendered, this function is called before each <c>Report.PageFooter</c>.
             </remarks>
            ############################################################
             <LastUpdated>May 19, 2004</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.Control_ListOrForm">
            ########################################################################################################################
             <summary>
             Extends a <c>Renderer.List</c> or <c>Renderer.Form</c> instance for use within their related WebControls.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview></LastFullCodeReview>
        </member>
        <member name="P:Cn.Web.Controls.Control_ListOrForm.DataSourceEnumerator">
            ############################################################
            <summary>
            Gets/sets a IEnumerator object representing the data bound data source.
            </summary>
            ############################################################
        </member>
        <member name="P:Cn.Web.Controls.Control_ListOrForm.CreateChildControls">
            ############################################################
            <summary>
            Gets/sets a boolean value representing if we are supposed to create the child controls of our parent webcontrol.
            </summary>
            ############################################################
        </member>
        <member name="M:Cn.Web.Controls.List.Control_List.#ctor(Cn.Web.Settings.Current,Cn.Web.Controls.List)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <param name="oWebControl">List object representing the parent WebControl.</param>
             <seealso cref="M:Cn.Web.Renderer.Form.Reset(Cn.Web.Settings.Current)"/>
            ############################################################
             <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.List.Control_List.GenerateResults(Cn.Data.Pagination,System.Boolean)">
            ############################################################
            <summary>
            Collects/reorders the entire results set.
            </summary>
            <remarks>
            Required function overload to collect the entire results set of relevant record IDs.
            <para/>If the page has no results or results that need to be re-ordered, this function is called by the <c>Class Constructor</c>. This function is not called if there are results that are properly ordered.
            </remarks>
            <param name="oResults">Pagination object representing entire result set's record IDs.</param>
            <param name="bReorderExistingResults">Boolean value indicating if the entire results set requires re-ordering.</param>
            ############################################################
            <LastUpdated>February 5, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.List.Control_List.CollectPageResults(Cn.Data.Pagination)">
            ############################################################
            <summary>
            Collects the provided page results.
            </summary>
            <remarks>
            Required function overload to collect a page's relevant records as referenced within the passed <paramref>rPageResults</paramref>.
            <para/>If the page has results, this function is called after <c>GenerateResults</c> or the <c>Class Constructor</c> (depending on the state of the provided <paramref>sResultsStack</paramref>). This function is not called if there are no records to render.
            <para/>NOTE: The <paramref>rPageResults</paramref> parameter is equivalent to this code snipit: <code>rPageResults = Renderer.Results.getRange(Renderer.Index, Renderer.List.RecordsPerPage)</code>
            </remarks>
            <param name="oPageResults">Pagination object representing this page's relevant record IDs.</param>
            ############################################################
            <LastUpdated>February 5, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.List.Control_List.PrintLength(Cn.Web.Renderer.enumPageSections)">
            ############################################################
            <summary>
            Returns the length the passed page section crawls down a printed page.
            </summary>
            <remarks>
            <para/>This function is called once per page section when a <c>Renderer.Report</c> is being rendered in print mode. This means that you can calculate the page crawl on a per record basis if need be.
            <para/>Due to the web's poor ability to format pages for printing, this method of counting the current number of units (inches, cm, mm, etc.) the current text would be on a printed page was devised. For example - if one record occupies approximately 1 inch of vertical page space, the top of the forth record would start at approximately 3 inches down the page. Though not perfect, this method allows the developer to better accommodate the printed page by controlling where page breaks occur.
            <para/>NOTE: The units you choose to return from this function (inches, cm, mm, etc.) are irrelevant, so long as they agree with the units returned by the <c>PageLength</c> functions in the related <c>RendererList</c>, <c>RendererForm</c> and/or <c>RendererReport</c>.
            </remarks>
            <param name="ePageSection">Enumeration representing the referenced page section.</param>
            <returns>
            Integer representing the page crawl in units for the referenced <paramref>ePageSection</paramref>.
            </returns>
            ############################################################
            <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.List.Control_List.Header">
            ############################################################
            <summary>
            Outputs the header section of the rendered page.
            </summary>
            <remarks>
            If the page has results, this function is called after <c>CollectPageResults</c>. If the page has no results, this function is called after <c>GenerateResults</c> or the <c>Class Constructor</c> (depending on the state of the provided <paramref>sResultsStack</paramref>). This function is called for every page render.
            </remarks>
            ############################################################
            <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.List.Control_List.NoResults">
            ############################################################
            <summary>
            Outputs the no results section of the rendered page.
            </summary>
            <remarks>
            If the page has no results, this function is called after <c>Header</c>. This function is not called if there are records to render.
            </remarks>
            ############################################################
            <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.List.Control_List.DetailHeader">
            ############################################################
            <summary>
            Outputs the detail header section of the rendered page.
            </summary>
            <remarks>
            If the page has results, this function is called after <c>Header</c> and before any records are rendered via the <c>Detail</c> and/or <c>MissingRecord</c> functions. This function is not called if there are no records to render.
            <para/>If a printable <c>Renderer.Report</c> is being rendered, this function is called after each <c>Report.PageHeader</c>.
            </remarks>
            ############################################################
            <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.List.Control_List.Detail">
            ############################################################
            <summary>
            Outputs a detail section of the rendered page.
            </summary>
            <remarks>
            This function is called once per successfully collected record. This function is not called if there are no successfully collected records to render.
            </remarks>
            ############################################################
            <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.List.Control_List.MissingRecord(System.String,System.String)">
            ############################################################
            <summary>
            Outputs a missing record section of the rendered page.
            </summary>
            <remarks>
            This function is called once per missing record. This function is not called if there are no missing records to render.
            </remarks>
            <param name="sTableName"></param>
            <param name="sID"></param>
            ############################################################
            <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.List.Control_List.DetailFooter">
            ############################################################
            <summary>
            Outputs the detail footer section of the rendered page.
            </summary>
            <remarks>
            If the page has results, this function is called after the last record is rendered via the <c>Detail</c> or <c>MissingRecord</c> function. This function is not called if there are no records to render.
            <para/>If a printable <c>Renderer.Report</c> is being rendered, this function is called before each <c>Report.PageFooter</c>.
            </remarks>
            ############################################################
            <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.List.Control_List.Footer">
            ############################################################
            <summary>
            Outputs the footer section of the rendered page.
            </summary>
            <remarks>
            If the page has results, this function is called after <c>DetailFooter</c>. If the page has no results, this function is called after <c>NoResults</c>. This function is called for every page render.
            </remarks>
            ############################################################
            <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.List.Control_List.DataSourceEnumerator">
            ############################################################
            <summary>
            Gets/sets a IEnumerator object representing the data bound data source.
            </summary>
            ############################################################
            <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.List.Control_List.CreateChildControls">
            ############################################################
            <summary>
            Gets/sets a boolean value representing if we are supposed to create the child controls of our parent webcontrol.
            </summary>
            ############################################################
            <LastUpdated>June 1, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.IInputCollectionControl">
            ########################################################################################################################
             <summary>
             Identifies a container that encompases the functionality of an InputCollectionControl.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>February 9, 2010</LastFullCodeReview>
        </member>
        <member name="P:Cn.Web.Controls.IInputCollectionControl.DataSource">
            ############################################################
             <summary>
             Gets/sets the data source that is provided to the items within the control.
             </summary>
             <value>Object that is provided to the items within the control.</value>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.IInputCollectionControl.InputControls">
            ############################################################
             <summary>
             Gets a collection of inputs associated with this instance.
             </summary>
             <value>List of Controls.Input objects that represent the collection of inputs associated with this instance.</value>
            ############################################################
             <LastUpdated>April 7, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.IInputCollectionControl.Inputs">
            ############################################################
             <summary>
             Gets the base Input Collection class related to this instance.
             </summary>
             <value>InputCollection object that manages this instance.</value>
            ############################################################
             <LastUpdated>April 7, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.IInputCollectionControl.IsDataBound">
            ############################################################
             <summary>
             Gets a value representing if this instance has been data bound.
             </summary>
             <value>Boolean value representing if this instance has been data bound.</value>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Form.#ctor">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
            ############################################################
             <LastUpdated>May 31, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Form.DataBind">
            ############################################################
             <summary>
             Binds a data source to the invoked server control and all its child controls.
             </summary>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Form.CreateChildControls">
            ############################################################
             <summary>
             Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preperation for posting back or rendering.
             </summary>
            ############################################################
             <LastUpdated>May 31, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Form.Add(Cn.Web.Controls.Input)">
            ############################################################
             <summary>
             Adds an input into the collection.
             </summary>
             <remarks>
             <para/>NOTE: <c>Input</c>s defined as <c>cnBoolean</c>s always return values based on <see cref="M:Cn.Data.Tools.MakeBooleanInteger(System.Object,System.Boolean)">MakeBooleanInteger</see>, where zero equates to false and non-zero equates to true.
             <para/>NOTE: If you request that SQL statements be auto-generated in the return value for <see cref="M:Cn.Web.Renderer.Form.ValidateRecord(System.Boolean,System.Boolean,System.Boolean)">ValidateRecord</see>, you are not permitted to define an input alias that contains the <see cref="P:Cn.Configuration.Settings.PrimaryDelimiter">PrimaryDelimiter</see>.
             </remarks>
             <param name="oInputControl">Controls.Input representing the Input control to add into this instance.</param>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Form.RenderInput(System.String,Cn.Web.Inputs.enumInputTypes,System.String,System.String[],System.Boolean,System.String,System.Web.UI.HtmlTextWriter)">
            ############################################################
             <summary>
             Renders the control to the specified HTML writer.
             </summary>
             <remarks>
             NOTE: This function will ignore any non-existant <c>sInputAlias</c>'s.
             </remarks>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <param name="eInputType">Enumeration representing the input type to render.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="a_sInitialValues">Array of strings where each element represents an initial value of the input.</param>
             <param name="bForceInitialValue">Boolean value representing if the value of the input is always to be set to <paramref name="sInitialValue"/>/<paramref name="a_sInitialValues"/>.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="writer">HtmlTextWriter object as automatically provided by the host ASPX page.</param>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="E:Cn.Web.Controls.Form.GenerateHTML">
            ############################################################
             <summary>
             Enables the generation of custom HTML controls.
             </summary>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="E:Cn.Web.Controls.Form.ValidateRecord">
            ############################################################
             <summary>
             Validates the current record during form processing.
             </summary>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="E:Cn.Web.Controls.Form.SubmitResults">
            ############################################################
             <summary>
             Submits the successfully collected and validated data into the data source.
             </summary>
             <remarks>
             A delegate definition is required for this event.
             </remarks>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Form.ID">
            ############################################################
             <summary>
             Gets/sets a value representing the unique ID of this instance.
             </summary>
             <remarks>
             This value is copied into the underlying <c>Renderer.Form</c>'s <c>Name</c> property which is used to ensure that any rendered record tracker names are themselves unique.
             </remarks>
             <value>String representing the unique ID of this instance.</value>
            ############################################################
             <LastUpdated>June 1, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Form.NewRecords">
            ############################################################
             <summary>
             Gets/sets a value representing the number of new record forms to render.
             </summary>
             <value>Integer representing the number of new record forms to render.</value>
            ############################################################
             <LastUpdated>June 24, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Form.NewRecordsRenderedFirst">
            ############################################################
             <summary>
             Gets/sets a value indicating if new records are to be rendered before existing records.
             </summary>
             <value>Boolean value indicating if new records are to be rendered before existing records.</value>
            ############################################################
             <LastUpdated>February 9, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Form.TrackRecordChanges">
            ############################################################
             <summary>
             Gets/sets a value indicating if we are to track record changes.
             </summary>
             <remarks>
             This function signals the <c>Form</c> to calculate MD5 hashs of the original and submitted records. If the hashs differ, then the end user made changes to the record and it therefore needs to be updated. If the hases match, then the end user didn't make any changes to the record, so there is no need to update the record.
             <para/>This calculation's results are made available to the developer via the <c>bRecordHasChanged</c> argument of the <c>RendererForm</c>'s <c>ValidateRecord</c> function. If this functionality is not enabled (i.e. - the value of this property is "false"), then the <c>bRecordHasChanged</c> argument of the <c>RendererForm</c>'s <c>ValidateRecord</c> function is always "true".
             </remarks>
             <value>Boolean value indicating if we are to track record changes.</value>
            ############################################################
             <LastUpdated>February 9, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Form.IsPostBack">
            ############################################################
             <summary>
             Gets/sets a value indicating if we are to process the current form.
             </summary>
             <value>Boolean value indicating if we are to process the current form.</value>
            ############################################################
             <LastUpdated>February 9, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Form.IsReadOnly">
            ############################################################
             <summary>
             Gets/sets a value indicating if the <c>Form</c> is to be rendered as read only.
             </summary>
             <value>Boolean value indicating if the <c>Form</c> is to be rendered as read only.</value>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Form.DisplayErrorMessagesViaJavaScript">
            ############################################################
             <summary>
             Gets/sets a value indicating we are to display error messages via JavaScript.
             </summary>
             <remarks>
             In order to utilize this functionality, the developer must initilize the JavaScript error messages via <c>UIHook</c>.
             </remarks>
             <value>Boolean value indicating if we are to display error messages via JavaScript.</value>
            ############################################################
             <LastUpdated>February 11, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Form.ControlManager">
            ############################################################
             <summary>
             Gets the base control class related to this instance.
             </summary>
             <value>Renderer.Form object that manages this instance.</value>
            ############################################################
             <LastUpdated>February 9, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Form.InputControls">
            ############################################################
             <summary>
             Gets a collection of inputs associated with this instance.
             </summary>
             <value>List of Controls.Input objects that represent the collection of inputs associated with this instance.</value>
            ############################################################
             <LastUpdated>April 7, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Form.Inputs">
            ############################################################
             <summary>
             Gets the base Input Collection class related to this instance.
             </summary>
             <value>InputCollection object that manages this instance.</value>
            ############################################################
             <LastUpdated>April 7, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.Form.ValidateRecordEventHandler">
            ############################################################
             <summary>
             Delegate signature defintion for the <c>Form.ValidateRecord</c> events.
             </summary>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.Form.SubmitResultsEventHandler">
            ############################################################
             <summary>
             Delegate signature defintion for the <c>Form.SubmitResults</c> events.
             </summary>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.Form.Control_Form">
            ########################################################################################################################
             <summary>
             Renderer.Form class implementation for the Control.Form WebControl.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview></LastFullCodeReview>
        </member>
        <member name="T:Cn.Web.Renderer.Form">
            ########################################################################################################################
             <summary>
             Renderer.Form class.
             </summary>
             <remarks>
             Fun fact: This was the last VB.Net module to be converted to C# in the version 3.x to 4.0 code conversion.
             </remarks>
            ########################################################################################################################
             <LastFullCodeReview>September 6, 2005</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Renderer.Form.#ctor">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <seealso cref="M:Cn.Web.Renderer.Form.Reset"/>
            ############################################################
             <LastUpdated>March 4, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.#ctor(Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <seealso cref="M:Cn.Web.Renderer.Form.Reset(Cn.Web.Settings.Current)"/>
            ############################################################
             <LastUpdated>March 4, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.Reset">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
            ############################################################
             <LastUpdated>March 4, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.Reset(Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
            ############################################################
             <LastUpdated>March 4, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.DoReset">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <remarks>
             NOTE: This *MUST* be called *AFTER* base.Reset as this function requires that oSettings has been set/defined.
             </remarks>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.DoResetIndexes">
            ############################################################
             <summary>
             Resets the class's indexes to their pre-loop state.
             </summary>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.Render(System.Int32,System.String)">
            ############################################################
             <summary>
             Renders the revelent section of the provided <c>Form</c>.
             </summary>
             <remarks>
             NOTE: Since we need to call our own DoCollectResults, DoRender and Reset function, we must override this implementation from List even though the code matches.
             </remarks>
             <param name="iRecordsPerPage">1-based integer representing the maximum number of records so show per rendered page (does not include new records).</param>
             <param name="sResultsStack">String representing the related Data.Pagination instance.</param>
             <exception cref="T:Cn.CnException">Thrown when there are no defined <c>Inputs</c> for this instance.</exception>
             <exception cref="T:Cn.CnException">If auto-generated SQL statements were requested by <see cref="M:Cn.Web.Renderer.Form.ValidateRecord(System.Boolean,System.Boolean,System.Boolean)">ValidateRecord</see>'s return value: Thrown when one of the defined <c>Inputs</c> has an input alias containing the <see cref="P:Cn.Configuration.Settings.PrimaryDelimiter">PrimaryDelimiter</see>.</exception>
            ############################################################
             <LastUpdated>May 31, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.Render(System.Int32,System.String[],System.String)">
            ############################################################
             <summary>
             Renders the revelent section of the provided list.
             </summary>
             <remarks>
             NOTE: Since we need to call our own DoCollectResults, DoRender and Reset function, we must override this implementation from List even though the code matches.
             </remarks>
             <param name="iRecordsPerPage">1-based integer representing the maximum number of records so show per rendered page (does not include new records).</param>
             <param name="a_sIDs">Array of strings representing all the expected IDs to render (including IDs that may no longer be available).</param>
             <param name="sIDsOrderedBy">String representing the order the passed <paramref>sIDsOrderedBy</paramref> is in.</param>
             <exception cref="T:Cn.CnException">Thrown when there are no defined <c>Inputs</c> for this instance.</exception>
             <exception cref="T:Cn.CnException">If auto-generated SQL statements were requested by <see cref="M:Cn.Web.Renderer.Form.ValidateRecord(System.Boolean,System.Boolean,System.Boolean)">ValidateRecord</see>'s return value: Thrown when one of the defined <c>Inputs</c> has an input alias containing the <see cref="P:Cn.Configuration.Settings.PrimaryDelimiter">PrimaryDelimiter</see>.</exception>
            ############################################################
             <LastUpdated>May 31, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.Render(Cn.Data.Pagination.PaginationTable)">
            ############################################################
             <summary>
             Renders the provided list.
             </summary>
             <param name="oCurrentTable">PaginationTable object representing the relevant record IDs for the current table index.</param>
            ############################################################
             <LastUpdated>June 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.DoCollectResults(System.Int32,System.String,System.String[],System.String)">
            ############################################################
             <summary>
             Collects the page results in preperation for rendering.
             </summary>
             <param name="iRecordsPerPage">1-based integer representing the maximum number of records so show per rendered page (does not include new records).</param>
             <param name="sResultsStack">String representing the related Data.Pagination instance.</param>
             <param name="a_sIDs">Array of strings representing all the expected IDs to render (including IDs that may no longer be available).</param>
             <param name="sIDsOrderedBy">String representing the order the passed <paramref>sIDsOrderedBy</paramref> is in.</param>
             <returns>Pagination object representing the revelent section of the provided List or Form.</returns>
             <exception cref="T:Cn.CnException">If auto-generated SQL statements were requested by <see cref="M:Cn.Web.Renderer.Form.ValidateRecord(System.Boolean,System.Boolean,System.Boolean)">ValidateRecord</see>'s return value: Thrown when one of the defined <c>Inputs</c> has an input alias containing the <see cref="P:Cn.Configuration.Settings.PrimaryDelimiter">PrimaryDelimiter</see>.</exception>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.DoRenderNoResults">
            ############################################################
             <summary>
             Outputs the no results section (surrounded by the header and footer) of the rendered page.
             </summary>
            ############################################################
             <LastUpdated>March 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.DoRenderBody(Cn.Data.Pagination.PaginationTable)">
            ############################################################
             <summary>
             Outputs the detail and missing record sections (as required) of the rendered page.
             </summary>
             <param name="oCurrentTable">PaginationTable object representing the relevant record IDs for the current table index.</param>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.RenderNewRecords(System.Boolean,System.Boolean)">
            ############################################################
             <summary>
             Renders the required new forms for the provided <c>Form</c>.
             </summary>
             <param name="bRenderNewRecordsFirst">Boolean value representing if we are to render new records before or after existing records.</param>
             <param name="bRenderHeaderFooter">Boolean value representing if we are to render the headers and footers.</param>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.ValidateRecord(System.Boolean,System.Boolean,System.Boolean)">
            ############################################################
             <summary>
             Validates the current record during form processing.
             </summary>
             <remarks>
             Optionally overload this function to define your own record validation.
             <para/>This function is called after the <c>Class Constructor</c> once per submitted record when processing the form. This function is not called if there are no submitted records to validate.
             <para/>NOTE: This function is only utilized when processing a <c>Renderer.Form</c>. It is not utilized if we are rendering a <c>Renderer.Form</c>.
             </remarks>
             <param name="bRecordDataIsValid">Boolean value indicating if the all of the record's data successfully passed 'simple' validation (datatype, length, etc.).</param>
             <param name="bRecordIsLogiciallyValid">Boolean value indicating if the record is logicially valid.</param>
             <param name="bRecordHasChanged">Boolean value indicating if the record was changed/updated by the end user.</param>
             <returns>RecordValidater object that represents the records validity, if SQL statements are to be generated and any developer generated SQL statements.</returns>
            ############################################################
             <LastUpdated>March 26, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.SubmitResults(System.String[])">
            ############################################################
             <summary>
             Submits the successfully collected and validated data into the data source.
             </summary>
             <remarks>
             Required function overload to process a page's submitted records.
             <para/>This function is called after the last <c>ValidateRecord</c>, or after the <c>Class Constructor</c> if there are no records to submit.
             <para/>NOTE: This function is only utilized when processing a <c>Renderer.Form</c>. It is not utilized if we are rendering a <c>Renderer.Form</c>.
             </remarks>
             <param name="a_sSQL">String array where each index represents a developer provided or system generated SQL statement.</param>
            ############################################################
             <LastUpdated>April 19, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.DoValidation">
            ############################################################
             <summary>
             Validates the user submitted data.
             </summary>
             <exception cref="T:Cn.CnException">Thrown when there are no defined <c>Inputs</c> for this instance.</exception>
             <exception cref="T:Cn.CnException">If auto-generated SQL statements were requested by <see cref="M:Cn.Web.Renderer.Form.ValidateRecord(System.Boolean,System.Boolean,System.Boolean)">ValidateRecord</see>'s return value: Thrown when one of the defined <c>Inputs</c> has an input alias containing the <see cref="P:Cn.Configuration.Settings.PrimaryDelimiter">PrimaryDelimiter</see>.</exception>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.GetColumnCollection(System.String)">
            ############################################################
             <summary>
             Splits the defined <c>Inputs</c> into table-specific groupings.
             </summary>
             <remarks>
             NOTE: If you request that SQL statements be auto-generated in the return value for <see cref="M:Cn.Web.Renderer.Form.ValidateRecord(System.Boolean,System.Boolean,System.Boolean)">ValidateRecord</see>, you are not permitted to define an input alias that contains the <see cref="P:Cn.Configuration.Settings.PrimaryDelimiter">PrimaryDelimiter</see>.
             </remarks>
             <param name="sFunction">String representing the calling function's name.</param>
             <returns>Array of structColumnCollections where each element represents a table-specific grouping of <c>Inputs</c>.</returns>
             <exception cref="T:Cn.CnException">Thrown when one of the defined <c>Inputs</c> has an input alias containing the <see cref="P:Cn.Configuration.Settings.PrimaryDelimiter">PrimaryDelimiter</see>.</exception>
             <exception cref="T:Cn.CnException">Thrown when there are no defined <c>Inputs</c> for this instance.</exception>
            ############################################################
             <LastUpdated>February 10, 2006</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.CalculateCurrentMD5(Cn.Web.Renderer.Form.FormInputCollection)">
            ############################################################
             <summary>
             Calculates the MD5 for the current record.
             </summary>
             <param name="oInputCollection">Form.InputCollection object reference to the related <c>Form</c>'s <c>Inputs</c> object.</param>
             <returns>String representing the MD5 hash for the current record.</returns>
            ############################################################
             <LastUpdated>May 22, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.CalculateCurrentMD5AndValidate(System.String[],System.Boolean@,Cn.Web.Renderer.Form.FormInputCollection)">
            ############################################################
             <summary>
             Calculates the MD5 for the current record while also determining if simple errors have occured.
             </summary>
             <param name="a_sInputAliases">Array of strings representing the input aliases to utilize.</param>
             <param name="oInputCollection">Form.InputCollection object reference to the related <c>Form</c>'s <c>Inputs</c> object.</param>
             <param name="bSimpleErrorsOccured">Reference to a boolean value indicating if errors occured during validation (updated by reference).</param>
             <returns>String representing the MD5 hash for the current record.</returns>
            ############################################################
             <LastUpdated>March 24, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.RenderHiddenRecordTracker(System.String,Cn.Web.Renderer.Form.enumRecordTrackerModes,Cn.Web.Renderer.Form)">
            ############################################################
             <summary>
             Renders the hidden record tracker form element for the current.
             </summary>
             <remarks>
             NOTE: This MUST be called after the Detail has been called (else the .Values won't be set)!
             </remarks>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="eRecordType">Enumeration representing the type of the current record.</param>
             <param name="oForm">Form object reference to the related <c>Form</c> object.</param>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.RenderHiddenRecordTracker(System.String,Cn.Web.Renderer.Form.enumRecordTrackerModes,System.String)">
            ############################################################
             <summary>
             Renders the hidden record tracker form element for the current.
             </summary>
             <remarks>
             NOTE: This MUST be called after the Detail has been called (else the .Values won't be set)!
             </remarks>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="eRecordType">Enumeration representing the type of the current record.</param>
             <param name="sRecordsMD5">String representing the MD5 hash for the current record.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eRecordType</paramref> is unreconized or unknown.</exception>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.ParseRecordTracker(System.Int32)">
            ############################################################
             <summary>
             Parses the record tracker form element for the provided record number.
             </summary>
             <remarks>
             RecordTracker Example: "RecordType|TableIndex|TableRecordIndex|OriginalRecordMD5"
             <para/>NOTE: This function is only utilized by Renderer.Form's and was only moved here to keep the RecordTracker functionality in a single place.
             </remarks>
             <param name="iRecordNumber">Integer representing the record number of the tracker to parse.</param>
             <returns>Array of three strings where the first element represents the record's type as an integer, the second element represents the table index and the third element represents the original record's MD5 hash.</returns>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Form.Settings">
            ############################################################
             <summary>
             Gets/sets the settings for this instance.
             </summary>
             <remarks>
             <para/>NOTE: If a <c>Parent</c> Report has been defined, this call is forwarded onto it's own <c>Settings</c> property (as it is the <c>Report</c> that is responsible for the rendering of the <c>List</c> or <c>Form</c>).
             </remarks>
             <value>Cn.Web.Settings.Current instance representing the current enviroment.</value>
            ############################################################
             <LastUpdated>March 4, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Form.Name">
            ############################################################
             <summary>
             Gets/sets a value representing the unique name of the form.
             </summary>
             <remarks>
             This is provided to allow multiple forms to be present on a single page. The <c>Name</c> is prefixed onto the record trackers for each form and therefore must be unique across a page's forms so as to ensure that multiple values are not present for each form's record trackers.
             </remarks>
             <value>String representing the unique name of the form.</value>
            ############################################################
             <LastUpdated>April 21, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Form.NewRecords">
            ############################################################
             <summary>
             Gets/sets a value representing the number of new record forms to render.
             </summary>
             <value>Integer representing the number of new record forms to render.</value>
            ############################################################
             <LastUpdated>June 24, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Form.OnErrorRerenderAllRecords">
            ############################################################
             <summary>
             Gets/sets a value indicating if all records are to be re-rendered when errors occur on post-back.
             </summary>
             <value>Boolean value indicating if all records are to be re-rendered when errors occur on post-back.</value>
            ############################################################
             <LastUpdated>March 30, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Form.NewRecordsRenderedFirst">
            ############################################################
             <summary>
             Gets/sets a value indicating if new records are to be rendered before existing records.
             </summary>
             <value>Boolean value indicating if new records are to be rendered before existing records.</value>
            ############################################################
             <LastUpdated>February 8, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Form.TrackRecordChanges">
            ############################################################
             <summary>
             Gets/sets a value indicating if we are to track record changes.
             </summary>
             <remarks>
             This function signals the <c>Form</c> to calculate MD5 hashs of the original and submitted records. If the hashs differ, then the end user made changes to the record and it therefore needs to be updated. If the hases match, then the end user didn't make any changes to the record, so there is no need to update the record.
             <para/>This calculation's results are made available to the developer via the <c>bRecordHasChanged</c> argument of the <c>RendererForm</c>'s <c>ValidateRecord</c> function. If this functionality is not enabled (i.e. - the value of this property is "false"), then the <c>bRecordHasChanged</c> argument of the <c>RendererForm</c>'s <c>ValidateRecord</c> function is always "true".
             </remarks>
             <value>Boolean value indicating if we are to track record changes.</value>
            ############################################################
             <LastUpdated>May 21, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Form.IsPostBack">
            ############################################################
             <summary>
             Gets/sets a value indicating if we are to process the current form.
             </summary>
             <value>Boolean value indicating if we are to process the current form.</value>
            ############################################################
             <LastUpdated>August 9, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Form.IsReadOnly">
            ############################################################
             <summary>
             Gets/sets a value indicating if the <c>Form</c> is to be rendered as read only.
             </summary>
             <value>Boolean value indicating if the <c>Form</c> is to be rendered as read only.</value>
            ############################################################
             <LastUpdated>May 21, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Form.InputCollection">
            ############################################################
             <summary>
             Gets the input's tools and management class related to this instance.
             </summary>
             <returns>InputCollection object representing the input collection class related to this instance.</returns>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Form.RecordCount">
            ############################################################
             <summary>
             Gets the current input record's number (based on rendered records).
             </summary>
             <value>1-based integer for the current input records number.</value>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Form.SubmittedRecordCount">
            ############################################################
             <summary>
             Gets the count of records submitted to this instance.
             </summary>
             <value>1-based integer representing the count of records submitted to this instance.</value>
            ############################################################
             <LastUpdated>April 21, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Form.ErroredRecordCount">
            ############################################################
             <summary>
             Gets a value representing the current count of errored records.
             </summary>
             <value>1-based integer for the current count of errored records.</value>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Form.NewRecordCount">
            ############################################################
             <summary>
             Gets a value representing the current count of new record forms.
             </summary>
             <value>Integer representing the current count of new record forms.</value>
            ############################################################
             <LastUpdated>June 24, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Form.ErrorsOccured">
            ############################################################
             <summary>
             Gets a value indicating if errors have occured during the validation of the user submitted data.
             </summary>
             <value>Boolean value indicating if errors have occured during the validation of the user submitted data.</value>
            ############################################################
             <LastUpdated>June 21, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Form.IsNewRecord">
            ############################################################
             <summary>
             Gets a value indicating if the current record is a new record.
             </summary>
             <value>Boolean value indicating if the current record is a new record.</value>
            ############################################################
             <LastUpdated>April 23, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Form.IsErroredRecord">
            ############################################################
             <summary>
             Gets a value indicating if the current record contains errors.
             </summary>
             <value>Boolean value indicating if the current record contains errors.</value>
            ############################################################
             <LastUpdated>April 23, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.Renderer.Form.enumRecordTrackerModes">
            <summary><c>Form</c> record tracker modes.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.Form.enumRecordTrackerModes.cnUnknown">
            <summary>Unknown/unreconized record mode.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.Form.enumRecordTrackerModes.cnNew">
            <summary>New record mode.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.Form.enumRecordTrackerModes.cnMissing">
            <summary>Missing record mode</summary>
        </member>
        <member name="F:Cn.Web.Renderer.Form.enumRecordTrackerModes.cnExisting">
            <summary>Existing record mode.</summary>
        </member>
        <member name="T:Cn.Web.Renderer.Form.RecordValidater">
            ########################################################################################################################
             <summary>
             Return value structure for <c>Form.ValidateRecord</c> to define a records validity and SQL statements.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>May 16, 2007</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Renderer.Form.RecordValidater.#ctor">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <remarks>
             This default constructor initilizes the class defining the record as valid, SQL will be automaticially generated and no custom SQL statements have been defined. In other words, <c>IsValid</c> == true, <c>GenerateSQL</c> == true and <c>SQLStatements</c> == null.
             </remarks>
            ############################################################
             <LastUpdated>January 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.RecordValidater.Reset">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
            ############################################################
             <LastUpdated>January 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.RecordValidater.#ctor(System.Boolean,System.Boolean,System.String[])">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <remarks>
             Any SQL statements included within the <paramref>a_sSQLStatements</paramref> are returned to the developer in the order provided within the <c>a_sSQL</c> argument of <c>SubmitResults</c> in record order. These are followed by any SQL statements that were auto-generated based on the value of <paramref>bGenerateSQL</paramref>. For example, if the developer returned 2 SQL statements within the <paramref>a_sSQLStatements</paramref> for each record and requested that statements be auto-generated via <paramref>bGenerateSQL</paramref>, the <c>a_sSQL</c> argument of <c>SubmitResults</c> would be in the following order (assuming 2 records were submitted):
             <param/>     Record1_SQLArrayStatement1, Record1_SQLArrayStatement2, Record1_GenerateSQLStatement1, Record2_SQLArrayStatement1, Record2_SQLArrayStatement2, Record2_GenerateSQLStatement1
             <param/>NOTE: SQL statements (either provided via <paramref>a_sSQLStatements</paramref> or auto-generated) are only placed within the <c>a_sSQL</c> argument of <c>SubmitResults</c> if the record <paramref>bIsValid</paramref>. SQL statements for records with a <paramref>bIsValid</paramref> value of false are not included within the <c>a_sSQL</c> argument of <c>SubmitResults</c>.
             </remarks>
             <param name="bIsValid">Boolean value indicating if the record is valid.</param>
             <param name="bGenerateSQLStatements">Boolean value indicating if the system is to automatically generate SQL queries for this record.</param>
             <param name="a_sSQLStatements">String array where each element represents one developer defined SQL statement.</param>
            ############################################################
             <LastUpdated>January 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.RecordValidater.Reset(System.Boolean,System.Boolean,System.String[])">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <remarks>
             Any SQL statements included within the <paramref>a_sSQLStatements</paramref> are returned to the developer in the order provided within the <c>a_sSQL</c> argument of <c>SubmitResults</c> in record order. These are followed by any SQL statements that were auto-generated based on the value of <paramref>bGenerateSQL</paramref>. For example, if the developer returned 2 SQL statements within the <paramref>a_sSQLStatements</paramref> for each record and requested that statements be auto-generated via <paramref>bGenerateSQL</paramref>, the <c>a_sSQL</c> argument of <c>SubmitResults</c> would be in the following order (assuming 2 records were submitted):
             <param/>     Record1_SQLArrayStatement1, Record1_SQLArrayStatement2, Record1_GenerateSQLStatement1, Record2_SQLArrayStatement1, Record2_SQLArrayStatement2, Record2_GenerateSQLStatement1
             <param/>NOTE: SQL statements (either provided via <paramref>a_sSQLStatements</paramref> or auto-generated) are only placed within the <c>a_sSQL</c> argument of <c>SubmitResults</c> if the record <paramref>bIsValid</paramref>. SQL statements for records with a <paramref>bIsValid</paramref> value of false are not included within the <c>a_sSQL</c> argument of <c>SubmitResults</c>.
             </remarks>
             <param name="bIsValid">Boolean value indicating if the record is valid.</param>
             <param name="bGenerateSQLStatements">Boolean value indicating if the system is to automatically generate SQL queries for this record.</param>
             <param name="a_sSQLStatements">String array where each element represents one developer defined SQL statement.</param>
            ############################################################
             <LastUpdated>January 11, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Form.RecordValidater.SQLStatements">
            ############################################################
             <summary>
             Gets/sets a value where each element represents one developer defined SQL statement.
             </summary>
             <remarks>
             Any SQL statements included within the <c>SQLStatements</c> are returned to the developer in the order provided within the <c>a_sSQL</c> argument of <c>SubmitResults</c> in record order. These are followed by any SQL statements that were auto-generated based on the value of <c>GenerateSQL</c>. For example, if the developer returned 2 SQL statements within the <c>SQLStatements</c> for each record and requested that statements be auto-generated via <c>GenerateSQL</c>, the <c>a_sSQL</c> argument of <c>SubmitResults</c> would be in the following order (assuming 2 records were submitted):
             <param/>     Record1_SQLArrayStatement1, Record1_SQLArrayStatement2, Record1_GenerateSQLStatement1, Record2_SQLArrayStatement1, Record2_SQLArrayStatement2, Record2_GenerateSQLStatement1
             <param/>NOTE: SQL statements (either provided via <c>SQLStatements</c> or auto-generated) are only placed within the <c>a_sSQL</c> argument of <c>SubmitResults</c> if the record <c>IsValid</c>. SQL statements for records with a <c>IsValid</c> value of false are not included within the <c>a_sSQL</c> argument of <c>SubmitResults</c>.
             </remarks>
             <value>String array where each element represents a developer defined SQL statement associated with the current record.</value>
            ############################################################
             <LastUpdated>January 16, 2006</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Form.RecordValidater.GenerateSQLStatements">
            ############################################################
             <summary>Gets/sets a value indicating if the system is to automatically generate SQL Insert/Update statements for this record.</summary>
             <remarks>
             Any SQL statements included within the <c>SQLStatements</c> are returned to the developer in the order provided within the <c>a_sSQL</c> argument of <c>SubmitResults</c> in record order. These are followed by any SQL statements that were auto-generated based on the value of <c>GenerateSQL</c>. For example, if the developer returned 2 SQL statements within the <c>SQLStatements</c> for each record and requested that statements be auto-generated via <c>GenerateSQL</c>, the <c>a_sSQL</c> argument of <c>SubmitResults</c> would be in the following order (assuming 2 records were submitted):
             <param/>     Record1_SQLArrayStatement1, Record1_SQLArrayStatement2, Record1_GenerateSQLStatement1, Record2_SQLArrayStatement1, Record2_SQLArrayStatement2, Record2_GenerateSQLStatement1
             <param/>NOTE: SQL statements (either provided via <c>SQLStatements</c> or auto-generated) are only placed within the <c>a_sSQL</c> argument of <c>SubmitResults</c> if the record <c>IsValid</c>. SQL statements for records with a <c>IsValid</c> value of false are not included within the <c>a_sSQL</c> argument of <c>SubmitResults</c>.
             </remarks>
             <value>Boolean value indicating if the system is to automatically generate SQL Insert/Update statements for this record.</value>
            ############################################################
             <LastUpdated>January 16, 2006</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Form.RecordValidater.IsValid">
            ############################################################
             <summary>Gets/sets a value indicating if the record is valid.</summary>
             <remarks>
             Any SQL statements included within the <c>SQLStatements</c> are returned to the developer in the order provided within the <c>a_sSQL</c> argument of <c>SubmitResults</c> in record order. These are followed by any SQL statements that were auto-generated based on the value of <c>GenerateSQL</c>. For example, if the developer returned 2 SQL statements within the <c>SQLStatements</c> for each record and requested that statements be auto-generated via <c>GenerateSQL</c>, the <c>a_sSQL</c> argument of <c>SubmitResults</c> would be in the following order (assuming 2 records were submitted):
             <param/>     Record1_SQLArrayStatement1, Record1_SQLArrayStatement2, Record1_GenerateSQLStatement1, Record2_SQLArrayStatement1, Record2_SQLArrayStatement2, Record2_GenerateSQLStatement1
             <param/>NOTE: SQL statements (either provided via <c>SQLStatements</c> or auto-generated) are only placed within the <c>a_sSQL</c> argument of <c>SubmitResults</c> if the record <c>IsValid</c>. SQL statements for records with a <c>IsValid</c> value of false are not included within the <c>a_sSQL</c> argument of <c>SubmitResults</c>.
             </remarks>
             <value>Boolean value indicating if the record is valid.</value>
            ############################################################
             <LastUpdated>January 16, 2006</LastUpdated>
        </member>
        <member name="T:Cn.Web.Renderer.Form.FormInputCollection">
            ########################################################################################################################
             <summary>
             
             </summary>
            ########################################################################################################################
             <LastFullCodeReview></LastFullCodeReview>
        </member>
        <member name="T:Cn.Web.Inputs.InputCollectionBase">
            ########################################################################################################################
             <summary>
             Represents the collection of defined <c>Form</c> Inputs.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>November 26, 2009</LastFullCodeReview>
        </member>
        <member name="T:Cn.Web.Inputs.IInputCollection">
            ########################################################################################################################
             <summary>
             Identifies a container that encompases the functionality of an InputCollection.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>February 9, 2010</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.DoReset(Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
            ############################################################
             <LastUpdated>March 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.Add(System.String,System.String,System.String,Cn.Web.Inputs.enumSaveTypes,Cn.Data.MetaData.enumValueTypes,Cn.Web.Inputs.AdditionalData)">
            ############################################################
             <summary>
             Adds an input into the collection that is assoicated with a Table/Column pair defined within the <c>MetaData</c>.
             </summary>
             <remarks>
             <para/>NOTE: <c>Input</c>s defined as <c>cnBoolean</c>s always return values based on <see cref="M:Cn.Data.Tools.MakeBooleanInteger(System.Object,System.Boolean)">MakeBooleanInteger</see>, where zero equates to false and non-zero equates to true.
             <para/>NOTE: If you request that SQL statements be auto-generated in the return value for <see cref="M:Cn.Web.Renderer.Form.ValidateRecord(System.Boolean,System.Boolean,System.Boolean)">ValidateRecord</see>, you are not permitted to define an input alias that contains the <see cref="P:Cn.Configuration.Settings.PrimaryDelimiter">PrimaryDelimiter</see>.
             </remarks>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <param name="sTableName">String representing the column's source table name.</param>
             <param name="sColumnName">String representing the column name.</param>
             <param name="eSaveType">Enumeration representing the HTML input's form processing requirements.</param>
             <param name="eValueType"></param>
             <param name="oAdditionalData">AdditionalData representing the additionally definable properties of the input.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sInputAlias</paramref> is null or a null-string.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sInputAlias</paramref> is already defined.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eSaveType</paramref> is set as <c>cnInsertNull</c> while also defind as not IsNullable.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sTableName</paramref>/<paramref>sColumnName</paramref> pair does not exist within the <c>MetaData</c>.</exception>
             <seealso cref="!:Cn.Web.Renderer.SearchForm.Add"/>
            ############################################################
             <LastUpdated>November 26, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.Add(System.String,Cn.Web.Inputs.enumSaveTypes,Cn.Data.MetaData.enumDataTypes,Cn.Data.MetaData.enumValueTypes,System.String,System.Boolean,System.Int32,System.String,System.String,System.Int32,System.Int32,Cn.Web.Inputs.AdditionalData)">
            ############################################################
             <summary>
             Adds an input into the collection.
             </summary>
             <remarks>
             <para/>NOTE: <c>Input</c>s defined as <c>cnBoolean</c>s always return values based on <see cref="M:Cn.Data.Tools.MakeBooleanInteger(System.Object,System.Boolean)">MakeBooleanInteger</see>, where zero equates to false and non-zero equates to true.
             <para/>NOTE: If you request that SQL statements be auto-generated in the return value for <see cref="M:Cn.Web.Renderer.Form.ValidateRecord(System.Boolean,System.Boolean,System.Boolean)">ValidateRecord</see>, you are not permitted to define an input alias that contains the <see cref="P:Cn.Configuration.Settings.PrimaryDelimiter">PrimaryDelimiter</see>.
             </remarks>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <param name="eSaveType">Enumeration representing the HTML input's form processing requirements.</param>
             <param name="eDataType">Enumerated value representing the column's datatype.</param>
             <param name="eValueType">Enumerated value representing the column's stored value type.</param>
             <param name="sDefaultValue">String representing the column's default value.</param>
             <param name="bIsNullable">Boolean value indicating if the column is permitted to hold a null value.</param>
             <param name="iMaximumCharacterLength">Integer representing the column's maximum character length.</param>
             <param name="sMinimumNumericValue">String representing the column's minimum numeric value.</param>
             <param name="sMaximumNumericValue">String representing the column's maximum numeric value.</param>
             <param name="iNumericPrecision">Integer representing the column's numeric precision.</param>
             <param name="iNumericScale">Integer representing the column's numeric scale.</param>
             <param name="oAdditionalData">AdditionalData representing the additionally definable properties of the input.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sInputAlias</paramref> is null or a null-string.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sInputAlias</paramref> is already defined.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eSaveType</paramref> is set as <c>cnInsertNull</c> while also defind as not <paramref name="bIsNullable"/>.</exception>
             <seealso cref="!:Cn.Web.Renderer.SearchForm.Add"/>
            ############################################################
             <LastUpdated>November 26, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.Add(Cn.Web.Inputs.InputData)">
            ############################################################
             <summary>
             Adds an input into the collection.
             </summary>
             <remarks>
             <para/>NOTE: <c>Input</c>s defined as <c>cnBoolean</c>s always return values based on <see cref="M:Cn.Data.Tools.MakeBooleanInteger(System.Object,System.Boolean)">MakeBooleanInteger</see>, where zero equates to false and non-zero equates to true.
             <para/>NOTE: If you request that SQL statements be auto-generated in the return value for <see cref="M:Cn.Web.Renderer.Form.ValidateRecord(System.Boolean,System.Boolean,System.Boolean)">ValidateRecord</see>, you are not permitted to define an input alias that contains the <see cref="P:Cn.Configuration.Settings.PrimaryDelimiter">PrimaryDelimiter</see>.
             </remarks>
             <param name="oInputData">Object representing the InputData instance to deeply copy into this instance.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sInputAlias</paramref> is null or a null-string.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sInputAlias</paramref> is already defined.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eSaveType</paramref> is set as <c>cnInsertNull</c> while also defind as not IsNullable.</exception>
             <seealso cref="!:Cn.Web.Renderer.SearchForm.Add"/>
            ############################################################
             <LastUpdated>November 26, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.Remove(System.String)">
            ############################################################
             <summary>
             Removes an input from the collection.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <returns>Boolean value representing if the input removal was a success.</returns>
            ############################################################
             <LastUpdated>August 8, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.GenerateHTML(System.String,Cn.Web.Inputs.enumInputTypes,System.String,System.Boolean,System.String)">
            ############################################################
             <summary>
             Returns the requested input as represented by XHTML/DHTML code.
             </summary>
             <remarks>
             This implementation does not render <c>cnMultiValueFromPicklist</c> or <c>cnMultiValueSearchInSingleValuePicklist</c> inputs. Call the multi value implementation to render <c>cnMultiValueFromPicklist</c> or <c>cnMultiValueSearchInSingleValuePicklist</c> inputs.
             <para/>Available <paramref>eInputType</paramref>s for inputs with a <c>SaveType</c> set as <c>cnSingleValuePicklistExType</c> are:
             <para/>   <c>cnSelect</c>*, <c>cnComboBox</c>, <c>cnOption</c>, <c>cnOptionListBox</c>, <c>cnHidden</c>, <c>cnReadOnly</c> and <c>cnDefaultInput</c>.
             <para/>Available <paramref>eInputType</paramref>s for inputs with a <c>SaveType</c> set as <c>cnMultiValuePicklistExType</c> are:
             <para/>   <c>cnCheckboxes</c>*, <c>cnCheckedListBox</c>, <c>cnMultiSelect</c>, <c>cnHidden</c>, <c>cnReadOnly</c> and <c>cnDefaultInput</c>.
             <para/>Available <paramref>eInputType</paramref>s for inputs with a <c>DataType</c> set as <c>cnBoolean</c> are:
             <para/>   <c>cnCheckbox</c>*, <c>cnOption</c>, <c>cnOptionListBox</c>, <c>cnSelect</c>, <c>cnHidden</c>, <c>cnReadOnly</c> and <c>cnDefaultInput</c>.
             <para/>Available <paramref>eInputType</paramref>s for inputs with a <c>DataType</c> set as <c>cnInteger</c> are:
             <para/>   <c>cnText</c>*, <c>cnCheckbox</c>, <c>cnHidden</c>, <c>cnReadOnly</c> and <c>cnDefaultInput</c>.
             <para/>Available <paramref>eInputType</paramref>s for inputs with a <c>DataType</c> set as <c>cnFloat</c> or <c>cnCurrency</c> are:
             <para/>   <c>cnText</c>*, <c>cnHidden</c>, <c>cnReadOnly</c> and <c>cnDefaultInput</c>.
             <para/>Available <paramref>eInputType</paramref>s for inputs with a <c>DataType</c> set as <c>cnDateTime</c> are:
             <para/>   <c>cnDate</c>*, <c>cnTime</c>, <c>cnDateTime</c>, <c>cnText</c>, <c>cnHidden</c>, <c>cnReadOnly</c> and <c>cnDefaultInput</c>.
             <para/>Available <paramref>eInputType</paramref>s for inputs with a <c>DataType</c> set as <c>cnBinary</c> are:
             <para/>   <c>cnFile</c>*, <c>cnHidden</c>, <c>cnReadOnly</c> and <c>cnDefaultInput</c>.
             <para/>Available <paramref>eInputType</paramref>s for inputs with a <c>DataType</c> set as <c>cnGUID</c> are:
             <para/>   <c>cnText</c>*, <c>cnHidden</c>, <c>cnReadOnly</c> and <c>cnDefaultInput</c>.
             <para/>Available <paramref>eInputType</paramref>s for inputs with a <c>DataType</c> set as <c>cnUnknown</c> or <c>cnUnsupported</c> are:
             <para/>   None, an error is raised.
             <para/>Available <paramref>eInputType</paramref>s for inputs with a <c>DataType</c> set as <c>cnChar</c> or <c>cnLongChar</c> are:
             <para/>   <c>cnText</c>*, <c>cnTextarea</c>, <c>cnHTMLEditor</c>, <c>cnPassword</c>, <c>cnHidden</c>, <c>cnReadOnly</c> and <c>cnDefaultInput</c>.
             <para/>* - <paramref>eInputType</paramref> utilised when <c>cnDefaultInput</c> is passed in.
             <para/>NOTE: Inputs with a <c>SaveType</c> set as <c>cnNonSearchableExType</c> or <c>cnVerbatumExType</c> are rendered based on their <c>DataType</c>.
             </remarks>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <param name="eInputType">Enumeration representing the input type to render.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="bForceInitialValue">Boolean value representing if the value of the input is always to be set to <paramref name="sInitialValue"/>.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eInputType</paramref> is unreconized or unsupported for the current input's <c>DataType</c>/<c>SaveType</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eInputType</paramref> contains <c>cnSingleValuePicklistExType</c> and the global <c>Picklists</c> is null or contains no <c>Rows</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eInputType</paramref> contains <c>cnSingleValuePicklistExType</c> and is defined as <c>Picklist_IsAdHoc</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eInputType</paramref> contains <c>cnMultiValuePicklistExType</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sInputAlias</paramref> is of an unknown or unsupported data type.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sInputAlias</paramref> has not be defined.</exception>
             <exception cref="T:Cn.CnException">Thrown when the global <c>FormName</c> is a null-string.</exception>
             <exception cref="T:Cn.CnException">Thrown when the global <c>Picklists</c> does not contain the refrenced PicklistName.</exception>
             <returns>String representing the requested XHTML/DHTML input.</returns>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.GenerateHTML(System.String,Cn.Web.Inputs.enumInputTypes,System.String[],System.Boolean,System.String)">
            ############################################################
             <summary>
             Returns the requested input as represented by XHTML/DHTML code.
             </summary>
             <remarks>
             This implementation only renders <c>cnMultiValuePicklistExType</c> or <c>cnMultiValueSearchInSingleValuePicklist</c> inputs. All other input rendering is done with the single value implementation.
             <para/>Available <paramref>eInputType</paramref>s for inputs with a <c>SaveType</c> set as <c>cnSingleValuePicklistExType</c> are:
             <para/>   <c>cnSelect</c>*, <c>cnComboBox</c>, <c>cnOption</c>, <c>cnOptionListBox</c>, <c>cnHidden</c>, <c>cnReadOnly</c> and <c>cnDefaultInput</c>.
             <para/>Available <paramref>eInputType</paramref>s for inputs with a <c>SaveType</c> set as <c>cnMultiValuePicklistExType</c> are:
             <para/>   <c>cnCheckboxes</c>*, <c>cnCheckedListBox</c>, <c>cnMultiSelect</c>, <c>cnHidden</c>, <c>cnReadOnly</c> and <c>cnDefaultInput</c>.
             <para/>Available <paramref>eInputType</paramref>s for inputs with a <c>DataType</c> set as <c>cnBoolean</c> are:
             <para/>   <c>cnCheckbox</c>*, <c>cnOption</c>, <c>cnOptionListBox</c>, <c>cnSelect</c>, <c>cnHidden</c>, <c>cnReadOnly</c> and <c>cnDefaultInput</c>.
             <para/>Available <paramref>eInputType</paramref>s for inputs with a <c>DataType</c> set as <c>cnInteger</c> are:
             <para/>   <c>cnText</c>*, <c>cnCheckbox</c>, <c>cnHidden</c>, <c>cnReadOnly</c> and <c>cnDefaultInput</c>.
             <para/>Available <paramref>eInputType</paramref>s for inputs with a <c>DataType</c> set as <c>cnFloat</c> or <c>cnCurrency</c> are:
             <para/>   <c>cnText</c>*, <c>cnHidden</c>, <c>cnReadOnly</c> and <c>cnDefaultInput</c>.
             <para/>Available <paramref>eInputType</paramref>s for inputs with a <c>DataType</c> set as <c>cnDateTime</c> are:
             <para/>   <c>cnDate</c>*, <c>cnTime</c>, <c>cnDateTime</c>, <c>cnHidden</c>, <c>cnReadOnly</c> and <c>cnDefaultInput</c>.
             <para/>Available <paramref>eInputType</paramref>s for inputs with a <c>DataType</c> set as <c>cnBinary</c> are:
             <para/>   <c>cnFile</c>*, <c>cnHidden</c>, <c>cnReadOnly</c> and <c>cnDefaultInput</c>.
             <para/>Available <paramref>eInputType</paramref>s for inputs with a <c>DataType</c> set as <c>cnGUID</c> are:
             <para/>   <c>cnText</c>*, <c>cnHidden</c>, <c>cnReadOnly</c> and <c>cnDefaultInput</c>.
             <para/>Available <paramref>eInputType</paramref>s for inputs with a <c>DataType</c> set as <c>cnUnknown</c> or <c>cnUnsupported</c> are:
             <para/>   None, an error is raised.
             <para/>Available <paramref>eInputType</paramref>s for inputs with a <c>DataType</c> set as <c>cnChar</c> or <c>cnLongChar</c> are:
             <para/>   <c>cnText</c>*, <c>cnTextarea</c>, <c>cnHTMLEditor</c>, <c>cnPassword</c>, <c>cnHidden</c>, <c>cnReadOnly</c> and <c>cnDefaultInput</c>.
             <para/>* - <paramref>eInputType</paramref> utilised when <c>cnDefaultInput</c> is passed in.
             <para/>NOTE: Inputs with a <c>SaveType</c> set as <c>cnNonSearchableExType</c> or <c>cnVerbatumExType</c> are rendered based on their <c>DataType</c>.
             </remarks>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <param name="eInputType">Enumeration representing the input type to render.</param>
             <param name="a_sInitialValues">Array of strings where each element represents an initial value of the input.</param>
             <param name="bForceInitialValues">Boolean value representing if the value of the input is always to be set to <paramref name="a_sInitialValues"/>.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eInputType</paramref> is unreconized or unsupported for the current input's <c>DataType</c>/<c>SaveType</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the global <c>Picklists</c> is null or contains no <c>Rows</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the <paramref>sInputAlias</paramref> is defined as <c>Picklist_IsAdHoc</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eInputType</paramref> does not contain <c>cnMultiValuePicklistExType</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sInputAlias</paramref> has not be defined.</exception>
             <exception cref="T:Cn.CnException">Thrown when the global <c>FormName</c> is a null-string.</exception>
             <exception cref="T:Cn.CnException">Thrown when the global <c>Picklists</c> does not contain the refrenced PicklistName.</exception>
             <returns>String representing the requested XHTML/DHTML input.</returns>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.Inputs(System.String)">
            ############################################################
             <summary>
             Retrieves the input data for the referenced input alias.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <returns>Object representing the InputData for the passed <paramref>sInputAlias</paramref>.</returns>
            ############################################################
             <LastUpdated>July 15, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.Inputs(System.String,System.String)">
            ############################################################
             <summary>
             Retrieves the input data collection(s) for the referenced table name/column name.
             </summary>
             <remarks>
             Since it is allowed to define multiple <c>Inputs</c> that refer to the same <paramref>sTableName</paramref>/<paramref>sColumnName</paramref> pair, this function returns an array of <c>InputData</c> objects that refer to the pair.
             <para/>NOTE: This is far more process intensive then the sibling implementation <c>Input(sInputAlias)</c>. Use this function only when you do not have access to the input's <c>sInputAlias</c>!
             </remarks>
             <param name="sTableName">String representing the column's source table name.</param>
             <param name="sColumnName">String representing the column name.</param>
             <returns>Array of <c>InputData</c> objects containing the <c>Inputs</c> defined within this instance that reference the passed <paramref>sTableName</paramref>/<paramref>sColumnName</paramref> pair.</returns>
            ############################################################
             <LastUpdated>August 31, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.InputName(System.String)">
            ############################################################
             <summary>
             Retrieves the HTML input name for the current record number.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <returns>String representing the HTML input name for the current input.</returns>
            ############################################################
             <LastUpdated>February 25, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.UIHook(Cn.Web.Inputs.enumUIHookTypes)">
            ############################################################
             <summary>
             Returns the requested <c>Renderer.Form</c> HTML form hook.
             </summary>
             <remarks>
             The returned code snipits allow <c>Renderer.Form</c> to attach to various HTML form events, as well as initilize client side validation, DIV management and CSS formatting.
             <para/>NOTE: <paramref>eUIHookType</paramref> values for <c>cnOnSubmit</c> or <c>cnDoSubmit</c> contain double quotes (") so any HTML attribute you are including them within must be delimited by single quotes (').
             </remarks>
             <param name="eUIHookType">Enumeration representing the form hook type to return.</param>
             <returns>String representing the requested <paramref>eUIHookType</paramref>.</returns>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eUIHookType</paramref> is unreconized.</exception>
            ############################################################
             <LastUpdated>December 3, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.Validate">
            ############################################################
             <summary>
             Validates the inputs defined within this instance.
             </summary>
             <remarks>
             NOTE: If ChildCollections are defined, it is validated AFTER the inputs defined within this instance. In other words, the order of precidence is "Parent-Child-GrandChild...".
             </remarks>
             <returns>A Boolean value indicating if all the inputs defined within this instance are valid.</returns>
            ############################################################
             <LastUpdated>March 17, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.Row">
            ############################################################
             <summary>
             Retrieves a structure that represents the current values for the inputs defined within this instance as a <c>MultiArray</c>-style row.
             </summary>
             <remarks>
             <param/>NOTE: The return value holds the <c>Value</c> for each <c>ColumnName</c>. If a <c>ColumnName</c> is not unique across two or more <c>InputAlias</c>es, then a unique numbered <c>ColumnName</c> is generated (i.e. - "ID" would become "ID1", "ID2", etc.). If a <c>ColumnName</c> is not unique across more then 1,000 <c>InputAlias</c>es, all subsequent <c>Values</c> are ignored (i.e. - "ID999" is the largest unique numbered <c>ColumnName</c> that is generated).
             </remarks>
             <returns>Hashtable of String Arrays where each key entry represents the data for an InputAlias' input values defined within this instance.</returns>
            ############################################################
             <LastUpdated>November 26, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.Column(System.String)">
            ############################################################
             <summary>
             Retrieves each record's user submitted value for the referenced input alias group of HTML inputs.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <returns>Array of strings where each element represents a record's submitted value for the <paramref>sInputAlias</paramref> group of HTML inputs.</returns>
            ############################################################
             <LastUpdated>December 11, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.ColumnNames(System.Boolean)">
            ############################################################
             <summary>
             Collects the column names defined within this instance.
             </summary>
             <param name="bFullyQualifyColumnNames">Boolean value indicating if the column names are to be fully qualified (i.e. - "Table.Column").</param>
             <returns>String array where each element represents the name of a column.</returns>
            ############################################################
             <LastUpdated>August 31, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.ColumnNames(System.String)">
            ############################################################
             <summary>
             Collects the column names for the provided table defined within this instance.
             </summary>
             <param name="sTableName">String representing the name of the table whos column names we are to collect.</param>
             <returns>String array where each element represents the name of a column for the passed <paramref>sTableName</paramref>.</returns>
            ############################################################
             <LastUpdated>November 26, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.Exists(System.String)">
            ############################################################
             <summary>
             Determines if this instance contains the referenced input alias.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <returns>Boolean value signaling the existance of the passed <paramref>sInputAlias</paramref>.<para/>Returns true if the passed <paramref>sInputAlias</paramref> is defined within this instance, or false if it is not present.</returns>
            ############################################################
             <LastUpdated>May 23, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.ValidationJavaScript(System.String,System.String,System.String,System.Boolean)">
            ############################################################
             <summary>
             Returns the standard record validation JavaScript function code for client side data validation.
             </summary>
             <remarks>
             This function physicially writes out and attaches the anonymous JavaScript data validation function for this instance's <c>FormName</c> into the validation functionality.
             </remarks>
             <param name="sCustomPreValidationScript">String representing a snipit of JavaScript code to run before per-record validation is begun.</param>
             <param name="sCustomRecordValidationScript">String representing a snipit of JavaScript code to run during each record's validation.</param>
             <param name="sCustomPostValidationScript">String representing a snipit of JavaScript code to run after per-record validation is finished.</param>
             <param name="bIncludeScriptBlock">Boolean value indicating if the validation JavaScript is to be rendered within its own script block.</param>
             <exception cref="T:Cn.CnException">Thrown when the global <c>FormName</c> is a null-string.</exception>
             <returns>String representing the standard record validation JavaScript function code snipit for client side data validation.</returns>
            ############################################################
             <LastUpdated>December 3, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.DoAdd_ValidateNewInputAlias(System.String)">
            ############################################################
             <summary>
             Validates that the passed <paramref name="sInputAlias"/> is valid and unique for the <c>Add</c> functions.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <returns>Boolean value representing if the passed <paramref name="sInputAlias"/> is valid and unique.</returns>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sInputAlias</paramref> is null or a null-string.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sInputAlias</paramref> is already defined.</exception>
            ############################################################
             <LastUpdated>November 26, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.DoValidateChildCollections(System.Boolean)">
            ############################################################
             <summary>
             Traverses the ChildCollections, validating each in turn.
             </summary>
             <param name="bCurrentReturn">Boolean value representing the current boolean return value of the caller.</param>
             <returns>Boolean value representing if the ChildCollections passed or failed validation.</returns>
            ############################################################
             <LastUpdated>November 26, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.GetFormIDJavaScript(System.String)">
            ############################################################
             <summary>
             Gets the HTML Form ID JavaScript code block.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <returns>String representing the JavaScript code block to collect the HTML Form ID.</returns>
            ############################################################
             <LastUpdated>December 11, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.GetSetErrorJavaScript(Cn.Web.Inputs.InputData)">
            ############################################################
             <summary>
             Gets the Set error javascript code block
             </summary>
             <param name="oInputData">Object representing the InputData instance to deeply copy into this instance.</param>
             <returns>String representing the JavaScript code block to Set an error.</returns>
            ############################################################
             <LastUpdated>December 11, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollectionBase.GetIsRendererFormJavaScript">
            ############################################################
             <summary>
             Gets the IsRendererForm javascript code block
             </summary>
             <remarks>
             NORE: This is a very stupid little function, but it helps .GetValidationScript because this value is the only change between the base and Renderer.Form versions
             </remarks>
             <returns>String representing a JavaScript boolean value indicating if this is a Renderer.Form instance.</returns>
            ############################################################
             <LastUpdated>December 11, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputCollectionBase.Settings">
            ############################################################
             <summary>
             Gets/sets the settings for this instance.
             </summary>
             <value>Cn.Web.Settings.Current instance representing the current enviroment.</value>
            ############################################################
             <LastUpdated>March 3, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputCollectionBase.Picklists">
            ############################################################
             <summary>
             Gets/sets the developer defined Picklists class related to this instance.
             </summary>
             <value>Picklists object that represents the instance's developer defined Picklists class.</value>
            ############################################################
             <LastUpdated>June 7, 2005</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputCollectionBase.HTMLBuilder">
            ############################################################
             <summary>
             Gets/sets the developer defined Picklists class related to this instance.
             </summary>
             <value>Picklists object that represents the instance's developer defined Picklists class.</value>
            ############################################################
             <LastUpdated>January 8, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputCollectionBase.DisplayErrorMessagesViaJavaScript">
            ############################################################
             <summary>
             Gets/sets a value indicating we are to display error messages via JavaScript.
             </summary>
             <remarks>
             In order to utilize this functionality, the developer must initilize the JavaScript error messages via <c>UIHook</c>.
             </remarks>
             <value>Boolean value indicating if we are to display error messages via JavaScript.</value>
            ############################################################
             <LastUpdated>January 8, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputCollectionBase.IsPostBack">
            ############################################################
             <summary>
             Gets/sets a value indicating if this is a form post back.
             </summary>
             <value>Boolean value indicating if this is a form post back.</value>
            ############################################################
             <LastUpdated>August 9, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputCollectionBase.ChildCollections">
            ############################################################
             <summary>
             Gets the developer defined child InputCollection class related to this instance.
             </summary>
             <value>IInputCollection object that represents the instance's developer defined child InputCollection class.</value>
            ############################################################
             <LastUpdated>March 11, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputCollectionBase.Item(System.String)">
            ############################################################
             <summary>
             Retrieves the input data for the referenced input alias.
             </summary>
             <remarks>
             NOTE: Is is a simple alias for <c>Inputs(string sInputAlias)</c>.
             </remarks>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <returns>Object representing the InputData for the passed <paramref>sInputAlias</paramref>.</returns>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputCollectionBase.Count">
            ############################################################
             <summary>
             Gets the count of inputs defined within this instance.
             </summary>
             <value>1-based integer representing the count of inputs defined within this instance.</value>
            ############################################################
             <LastUpdated>June 23, 2004</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputCollectionBase.Data">
            ############################################################
             <summary>
             Gets a deep copy of the inputs defined within this instance.
             </summary>
             <value>Deep copy of the InputData object array which defines the inputs of this instance.</value>
            ############################################################
             <LastUpdated>November 26, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputCollectionBase.TableNames">
            ############################################################
             <summary>
             Gets the collection of table names defined within this instance.
             </summary>
             <returns>String array where each element represents a table name defined within this instance.</returns>
             <exception cref="T:Cn.CnException">Thrown when there are no defined <c>Inputs</c> for this instance.</exception>
            ############################################################
             <LastUpdated>January 4, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputCollectionBase.InputAliases">
            ############################################################
             <summary>
             Gets the collection of input aliases defined within this instance.
             </summary>
             <returns>String array where each element represents an input alias defined within this instance.</returns>
            ############################################################
             <LastUpdated>March 17, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.FormInputCollection.#ctor(Cn.Web.Renderer.Form)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oForm">Form object reference to the related <c>Form</c> object.</param>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.FormInputCollection.Reset(Cn.Web.Renderer.Form)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="oForm">Form object reference to the related <c>Form</c> object.</param>
            ############################################################
             <LastUpdated>December 11, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.FormInputCollection.Inputs(System.String)">
            ############################################################
             <summary>
             Retrieves the input data for the referenced input alias.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <returns>Object representing the InputData for the passed <paramref>sInputAlias</paramref>.</returns>
            ############################################################
             <LastUpdated>March 24, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.FormInputCollection.Inputs(System.String,System.Int32)">
            ############################################################
             <summary>
             Retrieves the input data for the referenced input alias.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <param name="iRecordNumber">Integer representing the record number.</param>
             <returns>Object representing the InputData for the passed <paramref>sInputAlias</paramref>.</returns>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.FormInputCollection.Validate">
            ############################################################
             <summary>
             Validates the inputs defined within this instance.
             </summary>
             <returns>A Boolean value indicating if all the inputs defined within this instance are valid.</returns>
            ############################################################
             <LastUpdated>April 12, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.FormInputCollection.Column(System.String)">
            ############################################################
             <summary>
             Retrieves each record's user submitted value for the referenced input alias group of HTML inputs.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <returns>Array of strings where each element represents a record's submitted value for the <paramref>sInputAlias</paramref> group of HTML inputs.</returns>
            ############################################################
             <LastUpdated>November 26, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.FormInputCollection.InputName(System.String)">
            ############################################################
             <summary>
             Retrieves the HTML input name for the current record number.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <returns>String representing the HTML input name for the current record number.</returns>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.FormInputCollection.InputName(System.String,System.Int32)">
            ############################################################
             <summary>
             Retrieves the HTML input name for the provided record number.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <param name="iRecordNumber">Integer representing the record number.</param>
             <returns>String representing the HTML input name for the provided record number.</returns>
            ############################################################
             <LastUpdated>January 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.FormInputCollection.GetFormIDJavaScript(System.String)">
            ############################################################
             <summary>
             Gets the HTML Form ID JavaScript code block.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <returns>String representing the JavaScript code block to collect the HTML Form ID.</returns>
            ############################################################
             <LastUpdated>December 11, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.FormInputCollection.GetSetErrorJavaScript(Cn.Web.Inputs.InputData)">
            ############################################################
             <summary>
             Get the Set error javascript code block
             </summary>
             <param name="oInputData">Object representing the InputData instance to deeply copy into this instance.</param>
             <returns>String representing the JavaScript code block to Set an error.</returns>
            ############################################################
             <LastUpdated>December 11, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Form.FormInputCollection.GetIsRendererFormJavaScript">
            ############################################################
             <summary>
             Gets the IsRendererForm javascript code block
             </summary>
             <remarks>
             NORE: This is a very stupid little function, but it helps .GetValidationScript because this value is the only change between the base and Renderer.Form versions
             </remarks>
             <returns>String representing a JavaScript boolean value indicating if this is a Renderer.Form instance.</returns>
            ############################################################
             <LastUpdated>December 11, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.Form.FormInputCollection.Parent">
            ############################################################
             <summary>
             Gets the related <c>Form</c> object (if any).
             </summary>
             <value>Form object reference to the related <c>Form</c> object.</value>
            ############################################################
             <LastUpdated>January 4, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Form.Control_Form.#ctor(Cn.Web.Settings.Current,Cn.Web.Controls.Form)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oSettings">Web.Settings.Current instance representing the current enviroment.</param>
             <param name="oWebControl">Controls.Form object representing the parent WebControl.</param>
             <seealso cref="M:Cn.Web.Renderer.Form.Reset(Cn.Web.Settings.Current)"/>
            ############################################################
             <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Form.Control_Form.GenerateResults(Cn.Data.Pagination,System.Boolean)">
            ############################################################
            <summary>
            Collects/reorders the entire results set.
            </summary>
            <remarks>
            Required function overload to collect the entire results set of relevant record IDs.
            <para/>If the page has no results or results that need to be re-ordered, this function is called by the <c>Class Constructor</c>. This function is not called if there are results that are properly ordered.
            </remarks>
            <param name="oResults">Pagination object representing entire result set's record IDs.</param>
            <param name="bReorderExistingResults">Boolean value indicating if the entire results set requires re-ordering.</param>
            ############################################################
            <LastUpdated>February 5, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Form.Control_Form.CollectPageResults(Cn.Data.Pagination)">
            ############################################################
            <summary>
            Collects the provided page results.
            </summary>
            <remarks>
            Required function overload to collect a page's relevant records as referenced within the passed <paramref>rPageResults</paramref>.
            <para/>If the page has results, this function is called after <c>GenerateResults</c> or the <c>Class Constructor</c> (depending on the state of the provided <paramref>sResultsStack</paramref>). This function is not called if there are no records to render.
            <para/>NOTE: The <paramref>rPageResults</paramref> parameter is equivalent to this code snipit: <code>rPageResults = Renderer.Results.getRange(Renderer.Index, Renderer.List.RecordsPerPage)</code>
            </remarks>
            <param name="oPageResults">Pagination object representing this page's relevant record IDs.</param>
            ############################################################
            <LastUpdated>February 5, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Form.Control_Form.PrintLength(Cn.Web.Renderer.enumPageSections)">
            ############################################################
            <summary>
            Returns the length the passed page section crawls down a printed page.
            </summary>
            <remarks>
            <para/>This function is called once per page section when a <c>Renderer.Report</c> is being rendered in print mode. This means that you can calculate the page crawl on a per record basis if need be.
            <para/>Due to the web's poor ability to format pages for printing, this method of counting the current number of units (inches, cm, mm, etc.) the current text would be on a printed page was devised. For example - if one record occupies approximately 1 inch of vertical page space, the top of the forth record would start at approximately 3 inches down the page. Though not perfect, this method allows the developer to better accommodate the printed page by controlling where page breaks occur.
            <para/>NOTE: The units you choose to return from this function (inches, cm, mm, etc.) are irrelevant, so long as they agree with the units returned by the <c>PageLength</c> functions in the related <c>RendererList</c>, <c>RendererForm</c> and/or <c>RendererReport</c>.
            </remarks>
            <param name="ePageSection">Enumeration representing the referenced page section.</param>
            <returns>
            Integer representing the page crawl in units for the referenced <paramref>ePageSection</paramref>.
            </returns>
            ############################################################
            <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Form.Control_Form.Header">
            ############################################################
            <summary>
            Outputs the header section of the rendered page.
            </summary>
            <remarks>
            If the page has results, this function is called after <c>CollectPageResults</c>. If the page has no results, this function is called after <c>GenerateResults</c> or the <c>Class Constructor</c> (depending on the state of the provided <paramref>sResultsStack</paramref>). This function is called for every page render.
            </remarks>
            ############################################################
            <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Form.Control_Form.NoResults">
            ############################################################
            <summary>
            Outputs the no results section of the rendered page.
            </summary>
            <remarks>
            If the page has no results, this function is called after <c>Header</c>. This function is not called if there are records to render.
            </remarks>
            ############################################################
            <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Form.Control_Form.DetailHeader">
            ############################################################
            <summary>
            Outputs the detail header section of the rendered page.
            </summary>
            <remarks>
            If the page has results, this function is called after <c>Header</c> and before any records are rendered via the <c>Detail</c> and/or <c>MissingRecord</c> functions. This function is not called if there are no records to render.
            <para/>If a printable <c>Renderer.Report</c> is being rendered, this function is called after each <c>Report.PageHeader</c>.
            </remarks>
            ############################################################
            <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Form.Control_Form.Detail">
            ############################################################
            <summary>
            Outputs a detail section of the rendered page.
            </summary>
            <remarks>
            This function is called once per successfully collected record. This function is not called if there are no successfully collected records to render.
            </remarks>
            ############################################################
            <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Form.Control_Form.MissingRecord(System.String,System.String)">
            ############################################################
            <summary>
            Outputs a missing record section of the rendered page.
            </summary>
            <remarks>
            This function is called once per missing record. This function is not called if there are no missing records to render.
            </remarks>
            <param name="sTableName"></param>
            <param name="sID"></param>
            ############################################################
            <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Form.Control_Form.DetailFooter">
            ############################################################
            <summary>
            Outputs the detail footer section of the rendered page.
            </summary>
            <remarks>
            If the page has results, this function is called after the last record is rendered via the <c>Detail</c> or <c>MissingRecord</c> function. This function is not called if there are no records to render.
            <para/>If a printable <c>Renderer.Report</c> is being rendered, this function is called before each <c>Report.PageFooter</c>.
            </remarks>
            ############################################################
            <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Form.Control_Form.Footer">
            ############################################################
            <summary>
            Outputs the footer section of the rendered page.
            </summary>
            <remarks>
            If the page has results, this function is called after <c>DetailFooter</c>. If the page has no results, this function is called after <c>NoResults</c>. This function is called for every page render.
            </remarks>
            ############################################################
            <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Form.Control_Form.ValidateRecord(System.Boolean,System.Boolean,System.Boolean)">
            ############################################################
            <summary>
            Validates the current record during form processing.
            </summary>
            <remarks>
            This function is called after the <c>Class Constructor</c> once per submitted record when processing the form. This function is not called if there are no submitted records to validate.
            <para/>NOTE: This function is only utilized when processing a <c>Renderer.Form</c>. It is not utilized if we are rendering a <c>Renderer.Form</c>.
            </remarks>
            <param name="bRecordDataIsValid">Boolean value indicating if the all of the record's data successfully passed 'simple' validation (datatype, length, etc.).</param>
            <param name="bRecordIsLogiciallyValid">Boolean value indicating if the record is logicially valid.</param>
            <param name="bRecordHasChanged">Boolean value indicating if the record was changed/updated by the end user.</param>
            <returns>
            RecordValidater object that represents the records validity, if SQL statements are to be generated and any developer generated SQL statements.
            </returns>
            ############################################################
            <LastUpdated>March 26, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Form.Control_Form.SubmitResults(System.String[])">
            ############################################################
            <summary>
            Submits the successfully collected and validated data into the data source.
            </summary>
            <remarks>
            Required function overload to process a page's submitted records.
            <para/>This function is called after the last <c>ValidateRecord</c>, or after the <c>Class Constructor</c> if there are no records to submit.
            <para/>NOTE: This function is only utilized when processing a <c>Renderer.Form</c>. It is not utilized if we are rendering a <c>Renderer.Form</c>.
            </remarks>
            <param name="a_sSQL">String array where each index represents a developer provided or system generated SQL statement.</param>
            ############################################################
            <LastUpdated>April 19, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Form.Control_Form.DataSourceEnumerator">
            ############################################################
            <summary>
            Gets/sets a IEnumerator object representing the data bound data source.
            </summary>
            ############################################################
            <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Form.Control_Form.CreateChildControls">
            ############################################################
            <summary>
            Gets/sets a boolean value representing if we are supposed to create the child controls of our parent webcontrol.
            </summary>
            ############################################################
            <LastUpdated>June 1, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.Form.ValidateRecordEventArgs">
            ########################################################################################################################
             <summary>
             Event arguments required by the <c>Form.ValidateRecord</c> event.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>March 26, 2010</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Controls.Form.ValidateRecordEventArgs.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="bRecordDataIsValid">Boolean value indicating if the all of the record's data successfully passed 'simple' validation (datatype, length, etc.).</param>
             <param name="bRecordIsLogiciallyValid">Boolean value indicating if the record is logicially valid.</param>
             <param name="bRecordHasChanged">Boolean value indicating if the record was changed/updated by the end user.</param>
            ############################################################
             <LastUpdated>March 26, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Form.ValidateRecordEventArgs.RecordHasChanged">
            ############################################################
             <summary>
             Gets a value indicating whether [record has changed].
             </summary>
             <value>Boolean value indicating if the record was changed/updated by the end user.</value>
            ############################################################
             <LastUpdated>December 1, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Form.ValidateRecordEventArgs.RecordIsLogiciallyValid">
            ############################################################
             <summary>
             Gets a value indicating if the record is logicially valid.
             </summary>
             <value>Boolean value indicating if the record is logicially valid.</value>
            ############################################################
             <LastUpdated>March 26, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Form.ValidateRecordEventArgs.RecordDataIsValid">
            ############################################################
             <summary>
             Gets a value indicating if the record's data successfully passed the 'simple' validation (datatype, length, etc.).
             </summary>
             <value>Boolean value indicating if the record successfully passed the 'simple' validation (datatype, length, etc.).</value>
            ############################################################
             <LastUpdated>March 26, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.Form.SubmitResultsEventArgs">
            ########################################################################################################################
             <summary>
             Event arguments required by the <c>Form.SubmitResults</c> event.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>December 1, 2009</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Controls.Form.SubmitResultsEventArgs.#ctor(System.String[])">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="a_sSQL">String array where each index represents a developer provided or system generated SQL statement.</param>
             <param name="bErrorsOccured">Boolean value indicating if any errors occured on the form.</param>
            ############################################################
             <LastUpdated>April 19, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Form.SubmitResultsEventArgs.SQL">
            ############################################################
             <summary>
             Gets a value representing developer provided or system generated SQL statement(s).
             </summary>
             <value>String array where each index represents a developer provided or system generated SQL statement.</value>
            ############################################################
             <LastUpdated>December 1, 2009</LastUpdated>
        </member>
        <member name="T:Cn.Web.Inputs.IInputBuilder">
            ########################################################################################################################
             <summary>
             Defines the requirements for a Input Builder class.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>November 13, 2009</LastFullCodeReview>
        </member>
        <member name="T:Cn.Web.Inputs.HTMLBuilder">
            ########################################################################################################################
             <summary>
             Implements the IInputBuilder interface to define the default Renderer HTML input builder functions.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>July 29, 2005</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.TextBox(System.String,System.String,System.String,System.Int32)">
            ############################################################
             <summary>
             Renders an XHTML-based text form element.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="iMaxLength">Integer representing the maximum allowable character length of the input.</param>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.TextBox(System.String,System.String,System.String,System.Int32,Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Renders an XHTML-based text form element.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="iMaxLength">Integer representing the maximum allowable character length of the input.</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.Password(System.String,System.String,System.String,System.Int32)">
            ############################################################
             <summary>
             Renders an XHTML-based password form element.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="iMaxLength">Integer representing the maximum allowable character length of the input.</param>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.Password(System.String,System.String,System.String,System.Int32,Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Renders an XHTML-based password form element.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="iMaxLength">Integer representing the maximum allowable character length of the input.</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.TextArea(System.String,System.String,System.String,System.Int32)">
            ############################################################
             <summary>
             Renders an XHTML-based textarea form element.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="iMaxLength">Integer representing the maximum allowable character length of the input.</param>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.TextArea(System.String,System.String,System.String,System.Int32,Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Renders an XHTML-based textarea form element.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="iMaxLength">Integer representing the maximum allowable character length of the input.</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.HTMLEditor(System.String,System.String,System.String,System.Int32)">
            ############################################################
             <summary>
             Renders a DHTML-based WYSIWYG HTML editor.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="iMaxLength">Integer representing the maximum allowable character length of the input.</param>
             <returns>String representing the DHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.HTMLEditor(System.String,System.String,System.String,System.Int32,Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Renders a DHTML-based WYSIWYG HTML editor.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="iMaxLength">Integer representing the maximum allowable character length of the input.</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <returns>String representing the DHTML control.</returns>
            ############################################################
             <LastUpdated>February 19, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.Hidden(System.String,System.String,System.String)">
            ############################################################
             <summary>
             Renders an XHTML-based hidden form element.
             </summary>
             <remarks>
             NOTE: Nothing is rendered if the view is <c>ReadOnly</c>.
             </remarks>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.Hidden(System.String,System.String,System.String,Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Renders an XHTML-based hidden form element.
             </summary>
             <remarks>
             NOTE: Nothing is rendered if the view is <c>ReadOnly</c>.
             </remarks>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>November 6, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.Hidden(System.String,System.String,System.String,System.String,System.String)">
            ############################################################
             <summary>
             Renders an XHTML-based hidden form element and label.
             </summary>
             <remarks>
             Utilizing the text <paramref>sLabel</paramref> allows you to output a "read only input", or a hidden input with a visual marker.
             NOTE: The <paramref>sLabelAttributes</paramref> is applied to the implicit DIV that holds the <paramref>sLabel</paramref>.
             </remarks>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="sLabelText">String representing the text to display within the label.</param>
             <param name="sLabelAttributes">String representing the additional HTML attributes to apply to the label.</param>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.Hidden(System.String,System.String,System.String,System.String,System.String,Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Renders an XHTML-based hidden form element and label.
             </summary>
             <remarks>
             Utilizing the text <paramref>sLabel</paramref> allows you to output a "read only input", or a hidden input with a visual marker.
             NOTE: The <paramref>sLabelAttributes</paramref> is applied to the implicit DIV that holds the <paramref>sLabel</paramref>.
             </remarks>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="sLabelText">String representing the text to display within the label.</param>
             <param name="sLabelAttributes">String representing the additional HTML attributes to apply to the label.</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>December 7, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.File(System.String,System.String)">
            ############################################################
             <summary>
             Renders an XHTML-based file form element.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.File(System.String,System.String,Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Renders an XHTML-based file form element.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.Option(System.String,System.String,System.String,System.String,Cn.Collections.MultiArray,System.Collections.Hashtable)">
            ############################################################
             <summary>
             Renders an XHTML-based option form element based on the provided picklist.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="sContainerAttributes">String representing the additional HTML attributes to apply to the containing DIV.</param>
             <param name="oPicklist">MultiArray representing the single picklist to render.</param>
             <param name="h_sAdditionalData">Hashtable of strings representing the additionally definable properties of the input (see <see cref="!:Cn.Web.Renderer.Form.Add">Renderer.Form.Add</see>'s remarks).</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklist</paramref> is null or contains no <c>Rows</c>.</exception>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.Option(System.String,System.String,System.String,System.String,Cn.Collections.MultiArray,System.Collections.Hashtable,Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Renders an XHTML-based option form element based on the provided picklist.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="sContainerAttributes">String representing the additional HTML attributes to apply to the containing DIV.</param>
             <param name="oPicklist">MultiArray representing the single picklist to render.</param>
             <param name="h_sAdditionalData">Hashtable of strings representing the additionally definable properties of the input (see <see cref="!:Cn.Web.Renderer.Form.Add">Renderer.Form.Add</see>'s remarks).</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklist</paramref> is null or contains no <c>Rows</c>.</exception>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.OptionListBox(System.String,System.String,System.String,System.String,Cn.Collections.MultiArray,System.Collections.Hashtable)">
            ############################################################
             <summary>
             Renders a DHTML-based option list box form element based on the provided picklist.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="sListBoxAttributes">String representing the additional HTML attributes to apply to the containing DIV.</param>
             <param name="oPicklist">MultiArray representing the single picklist to render.</param>
             <param name="h_sAdditionalData">Hashtable of strings representing the additionally definable properties of the input (see <see cref="!:Cn.Web.Renderer.Form.Add">Renderer.Form.Add</see>'s remarks).</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklist</paramref> is null or contains no <c>Rows</c>.</exception>
             <returns>String representing the DHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.OptionListBox(System.String,System.String,System.String,System.String,Cn.Collections.MultiArray,System.Collections.Hashtable,Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Renders a DHTML-based option list box form element based on the provided picklist.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="sListBoxAttributes">String representing the additional HTML attributes to apply to the containing DIV.</param>
             <param name="oPicklist">MultiArray representing the single picklist to render.</param>
             <param name="h_sAdditionalData">Hashtable of strings representing the additionally definable properties of the input (see <see cref="!:Cn.Web.Renderer.Form.Add">Renderer.Form.Add</see>'s remarks).</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklist</paramref> is null or contains no <c>Rows</c>.</exception>
             <returns>String representing the DHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.Select(System.String,System.String,System.String,System.Boolean,Cn.Collections.MultiArray)">
            ############################################################
             <summary>
             Renders an XHTML-based select form element based on the provided picklist.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="bAddLeadingBlankOption">Boolean value indicating if a leading blank option should be added to the input.</param>
             <param name="oPicklist">MultiArray representing the single picklist to render.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklist</paramref> is null or contains no <c>Rows</c>.</exception>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.Select(System.String,System.String,System.String,System.Boolean,Cn.Collections.MultiArray,Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Renders an XHTML-based select form element based on the provided picklist.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="bAddLeadingBlankOption">Boolean value indicating if a leading blank option should be added to the input.</param>
             <param name="oPicklist">MultiArray representing the single picklist to render.</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklist</paramref> is null or contains no <c>Rows</c>.</exception>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.ComboBox(System.String,System.String,System.String,System.Int32,System.String,Cn.Collections.MultiArray)">
            ############################################################
             <summary>
             Renders a DHTML-based combobox form element based on the provided picklist.
             </summary>
             <remarks>
             NOTE: <c>WriteComboBoxInput</c> will fail the basic datatype validation done by <see cref="!:Cn.Web.Renderer.FormRenderer">FormRenderer</see> if the user does not enter a value from the list. It is up to the developer to clear this error within their own <c>ValidateRecord</c> function.
             </remarks>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the text input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="iMaxLength">Integer representing the maximum allowable character length of the input.<para/>A positive value indicates that a maxlength arrtibute is to be set. A non-positive value indicates that no maxlength is to be set.</param>
             <param name="sSelectAttributes">String representing the additional HTML attributes to apply to the select input.</param>
             <param name="oPicklist">MultiArray representing the single picklist to render.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklist</paramref> is null or contains no <c>Rows</c>.</exception>
             <returns>String representing the DHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.ComboBox(System.String,System.String,System.String,System.Int32,System.String,Cn.Collections.MultiArray,Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Renders a DHTML-based combobox form element based on the provided picklist.
             </summary>
             <remarks>
             NOTE: <c>WriteComboBoxInput</c> will fail the basic datatype validation done by <see cref="!:Cn.Web.Renderer.FormRenderer">FormRenderer</see> if the user does not enter a value from the list. It is up to the developer to clear this error within their own <c>ValidateRecord</c> function.
             </remarks>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the text input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="iMaxLength">Integer representing the maximum allowable character length of the input.<para/>A positive value indicates that a maxlength arrtibute is to be set. A non-positive value indicates that no maxlength is to be set.</param>
             <param name="sSelectAttributes">String representing the additional HTML attributes to apply to the select input.</param>
             <param name="oPicklist">MultiArray representing the single picklist to render.</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklist</paramref> is null or contains no <c>Rows</c>.</exception>
             <returns>String representing the DHTML control.</returns>
            ############################################################
             <LastUpdated>August 3, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.MultiSelect(System.String,System.String,System.String[],System.Boolean,Cn.Collections.MultiArray,System.Collections.Hashtable)">
            ############################################################
             <summary>
             Renders an XHTML-based multi-select form element based on the provided picklist.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="a_sInitialValues">String array where each element represents an initial value of the input.</param>
             <param name="bAddLeadingBlankOption">Boolean value indicating if a leading blank option should be added to the input.</param>
             <param name="oPicklist">MultiArray representing the single picklist to render.</param>
             <param name="h_sAdditionalData">Hashtable of strings representing the additionally definable properties of the input (see <see cref="!:Cn.Web.Renderer.Form.Add">Renderer.Form.Add</see>'s remarks).</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklist</paramref> is null or contains no <c>Rows</c>.</exception>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>August 3, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.MultiSelect(System.String,System.String,System.String[],System.Boolean,Cn.Collections.MultiArray,System.Collections.Hashtable,Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Renders an XHTML-based multi-select form element based on the provided picklist.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="a_sInitialValues">String array where each element represents an initial value of the input.</param>
             <param name="bAddLeadingBlankOption">Boolean value indicating if a leading blank option should be added to the input.</param>
             <param name="oPicklist">MultiArray representing the single picklist to render.</param>
             <param name="h_sAdditionalData">Hashtable of strings representing the additionally definable properties of the input (see <see cref="!:Cn.Web.Renderer.Form.Add">Renderer.Form.Add</see>'s remarks).</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklist</paramref> is null or contains no <c>Rows</c>.</exception>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>August 3, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.CheckBoxes(System.String,System.String,System.String[],System.String,Cn.Collections.MultiArray,System.Collections.Hashtable)">
            ############################################################
             <summary>
             Renders an XHTML-based checkbox group form element based on the provided picklist.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="a_sInitialValues">String array where each element represents an initial value of the input.</param>
             <param name="sContainerAttributes">String representing the additional HTML attributes to apply to the containing DIV.</param>
             <param name="oPicklist">MultiArray representing the single picklist to render.</param>
             <param name="h_sAdditionalData">Hashtable of strings representing the additionally definable properties of the input (see <see cref="!:Cn.Web.Renderer.Form.Add">Renderer.Form.Add</see>'s remarks).</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklist</paramref> is null or contains no <c>Rows</c>.</exception>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.CheckBoxes(System.String,System.String,System.String[],System.String,Cn.Collections.MultiArray,System.Collections.Hashtable,Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Renders an XHTML-based checkbox group form element based on the provided picklist.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="a_sInitialValues">String array where each element represents an initial value of the input.</param>
             <param name="sContainerAttributes">String representing the additional HTML attributes to apply to the containing DIV.</param>
             <param name="oPicklist">MultiArray representing the single picklist to render.</param>
             <param name="h_sAdditionalData">Hashtable of strings representing the additionally definable properties of the input (see <see cref="!:Cn.Web.Renderer.Form.Add">Renderer.Form.Add</see>'s remarks).</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklist</paramref> is null or contains no <c>Rows</c>.</exception>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.CheckedListBox(System.String,System.String,System.String[],System.String,Cn.Collections.MultiArray,System.Collections.Hashtable)">
            ############################################################
             <summary>
             Renders a DHTML-based checked list box form element based on the provided picklist.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="a_sInitialValues">String array where each element represents an initial value of the input.</param>
             <param name="sListBoxAttributes">String representing the additional HTML attributes to apply to the containing DIV.</param>
             <param name="oPicklist">MultiArray representing the single picklist to render.</param>
             <param name="h_sAdditionalData">Hashtable of strings representing the additionally definable properties of the input (see <see cref="!:Cn.Web.Renderer.Form.Add">Renderer.Form.Add</see>'s remarks).</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklist</paramref> is null or contains no <c>Rows</c>.</exception>
             <returns>String representing the DHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.CheckedListBox(System.String,System.String,System.String[],System.String,Cn.Collections.MultiArray,System.Collections.Hashtable,Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Renders a DHTML-based checked list box form element based on the provided picklist.
             </summary>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="a_sInitialValues">String array where each element represents an initial value of the input.</param>
             <param name="sListBoxAttributes">String representing the additional HTML attributes to apply to the containing DIV.</param>
             <param name="oPicklist">MultiArray representing the single picklist to render.</param>
             <param name="h_sAdditionalData">Hashtable of strings representing the additionally definable properties of the input (see <see cref="!:Cn.Web.Renderer.Form.Add">Renderer.Form.Add</see>'s remarks).</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklist</paramref> is null or contains no <c>Rows</c>.</exception>
             <returns>String representing the DHTML control.</returns>
            ############################################################
             <LastUpdated>August 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.CheckBox(System.String,System.String,System.String@)">
            ############################################################
             <summary>
             Renders an XHTML-based checkbox form element based on the provided picklist.
             </summary>
             <remarks>
             The provided <paramref>sInitialValue</paramref> is coerced into a boolean value (as a checkbox is boolean by nature).  Because of this, the effective initial value of the input is returned so that end user data changes can be reconized despite this data transormation.
             <para/>NOTE: The returned coerced <paramref>sInitialValue</paramref> is "true" if the value was determined to be true, or a null-string if it was determined to be false. A null-string is returned here in place of "false" because a non-checked checkbox submits as a null-string.
             </remarks>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="r_sInitialValue">By reference String representing the initial value of the input. This value is modified during processing to represent the coerced value, which in turn represents the effective initial value of the input.</param>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>August 3, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.CheckBox(System.String,System.String,System.String@,Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Renders an XHTML-based checkbox form element based on the provided picklist.
             </summary>
             <remarks>
             The provided <paramref>r_sInitialValue</paramref> is coerced into a boolean value (as a checkbox is boolean by nature).  Because of this, the effective initial value of the input is returned so that end user data changes can be reconized despite this data transormation.
             <para/>NOTE: The returned coerced <paramref>r_sInitialValue</paramref> is "true" if the value was determined to be true, or a null-string if it was determined to be false. A null-string is returned here in place of "false" because a non-checked checkbox submits as a null-string.
             </remarks>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="r_sInitialValue">By reference String representing the initial value of the input. This value is modified during processing to represent the coerced value, which in turn represents the effective initial value of the input.</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>April 14, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.Date(System.String,System.String,System.String@,System.Collections.Hashtable)">
            ############################################################
             <summary>
             Renders a DHTML-based date picker form element.
             </summary>
             <remarks>
             Since a date format can be defined within the <paramref>h_sAdditionalData</paramref>, the <paramref>r_sInitialValue</paramref> may be reformatted into a string representation of a date that differs from the provided value (though is logicially equivalent). Because of this, the effective initial value of the input is returned so that end user data changes can be reconized despite this data transormation.
             </remarks>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="r_sInitialValue">By reference String representing the initial value of the input. This value is modified during processing to represent the coerced value, which in turn represents the effective initial value of the input.</param>
             <param name="h_sAdditionalData">Hashtable of strings representing the additionally definable properties of the input (see <see cref="!:Cn.Web.Renderer.Form.Add">Renderer.Form.Add</see>'s remarks).</param>
             <returns>String representing the DHTML control.</returns>
            ############################################################
             <LastUpdated>August 3, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.Date(System.String,System.String,System.String@,System.Collections.Hashtable,Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Renders a DHTML-based date picker form element.
             </summary>
             <remarks>
             Since a date format can be defined within the <paramref>h_sAdditionalData</paramref>, the <paramref>r_sInitialValue</paramref> may be reformatted into a string representation of a date that differs from the provided value (though is logicially equivalent). Because of this, the effective initial value of the input is returned so that end user data changes can be reconized despite this data transormation.
             </remarks>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="r_sInitialValue">By reference String representing the initial value of the input. This value is modified during processing to represent the coerced value, which in turn represents the effective initial value of the input.</param>
             <param name="h_sAdditionalData">Hashtable of strings representing the additionally definable properties of the input (see <see cref="!:Cn.Web.Renderer.Form.Add">Renderer.Form.Add</see>'s remarks).</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <returns>String representing the DHTML control.</returns>
            ############################################################
             <LastUpdated>August 3, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.Time(System.String,System.String,System.String@,System.Collections.Hashtable)">
            ############################################################
             <summary>
             Renders a DHTML-based time picker form element.
             </summary>
             <remarks>
             Since a time format can be defined within the <paramref>h_sAdditionalData</paramref>, the <paramref>r_sInitialValue</paramref> may be reformatted into a string representation of a date that differs from the provided value (though is logicially equivalent). Because of this, the effective initial value of the input is returned so that end user data changes can be reconized despite this data transormation.
             </remarks>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="r_sInitialValue">By reference String representing the initial value of the input. This value is modified during processing to represent the coerced value, which in turn represents the effective initial value of the input.</param>
             <param name="h_sAdditionalData">Hashtable of strings representing the additionally definable properties of the input (see <see cref="!:Cn.Web.Renderer.Form.Add">Renderer.Form.Add</see>'s remarks).</param>
             <returns>String representing the DHTML control.</returns>
            ############################################################
             <LastUpdated>August 3, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.Time(System.String,System.String,System.String@,System.Collections.Hashtable,Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Renders a DHTML-based time picker form element.
             </summary>
             <remarks>
             Since a time format can be defined within the <paramref>h_sAdditionalData</paramref>, the <paramref>r_sInitialValue</paramref> may be reformatted into a string representation of a date that differs from the provided value (though is logicially equivalent). Because of this, the effective initial value of the input is returned so that end user data changes can be reconized despite this data transormation.
             </remarks>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="r_sInitialValue">By reference String representing the initial value of the input. This value is modified during processing to represent the coerced value, which in turn represents the effective initial value of the input.</param>
             <param name="h_sAdditionalData">Hashtable of strings representing the additionally definable properties of the input (see <see cref="!:Cn.Web.Renderer.Form.Add">Renderer.Form.Add</see>'s remarks).</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <returns>String representing the DHTML control.</returns>
            ############################################################
             <LastUpdated>August 3, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.DateTime(System.String,System.String,System.String@,System.Collections.Hashtable)">
            ############################################################
             <summary>
             Renders a DHTML-based date/time picker form element.
             </summary>
             <remarks>
             Since a date/time format can be defined within the <paramref>h_sAdditionalData</paramref>, the <paramref>r_sInitialValue</paramref> may be reformatted into a string representation of a date that differs from the provided value (though is logicially equivalent). Because of this, the effective initial value of the input is returned so that end user data changes can be reconized despite this data transormation.
             </remarks>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="r_sInitialValue">By reference String representing the initial value of the input. This value is modified during processing to represent the coerced value, which in turn represents the effective initial value of the input.</param>
             <param name="h_sAdditionalData">Hashtable of strings representing the additionally definable properties of the input (see <see cref="!:Cn.Web.Renderer.Form.Add">Renderer.Form.Add</see>'s remarks).</param>
             <returns>String representing the DHTML control.</returns>
            ############################################################
             <LastUpdated>August 3, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.DateTime(System.String,System.String,System.String@,System.Collections.Hashtable,Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Renders a DHTML-based date/time picker form element.
             </summary>
             <remarks>
             Since a date/time format can be defined within the <paramref>h_sAdditionalData</paramref>, the <paramref>r_sInitialValue</paramref> may be reformatted into a string representation of a date that differs from the provided value (though is logicially equivalent). Because of this, the effective initial value of the input is returned so that end user data changes can be reconized despite this data transormation.
             </remarks>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="r_sInitialValue">By reference String representing the initial value of the input. This value is modified during processing to represent the coerced value, which in turn represents the effective initial value of the input.</param>
             <param name="h_sAdditionalData">Hashtable of strings representing the additionally definable properties of the input (see <see cref="!:Cn.Web.Renderer.Form.Add">Renderer.Form.Add</see>'s remarks).</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <returns>String representing the DHTML control.</returns>
            ############################################################
             <LastUpdated>August 3, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.DoDateTime(System.String,System.String,System.String@,System.Collections.Hashtable,Cn.Web.Settings.Current,Cn.Web.Inputs.enumInputTypes)">
            ############################################################
             <summary>
             Renders a DHTML-based date/time picker form element.
             </summary>
             <remarks>
             Since a date/time format can be defined within the <paramref>h_sAdditionalData</paramref>, the <paramref>r_sInitialValue</paramref> may be reformatted into a string representation of a date that differs from the provided value (though is logicially equivalent). Because of this, the effective initial value of the input is returned so that end user data changes can be reconized despite this data transormation.
             </remarks>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="r_sInitialValue">By reference String representing the initial value of the input. This value is modified during processing to represent the coerced value, which in turn represents the effective initial value of the input.</param>
             <param name="h_sAdditionalData">Hashtable of strings representing the additionally definable properties of the input (see <see cref="!:Cn.Web.Renderer.Form.Add">Renderer.Form.Add</see>'s remarks).</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <param name="eInputType">Enumeration representing the type of input to render.</param>
             <returns>String representing the DHTML control.</returns>
            ############################################################
             <LastUpdated>April 16, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.DoOption(System.String,System.String,System.String,System.String,System.String,Cn.Collections.MultiArray,System.Collections.Hashtable,Cn.Web.Settings.Current,System.Boolean)">
            ############################################################
             <summary>
             Renders an XHTML option form element based on the provided picklist.
             </summary>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="sContainerAttributes">String representing the additional HTML attributes to apply to the containing DIV.</param>
             <param name="oPicklist">MultiArray representing the single picklist to render.</param>
             <param name="h_sAdditionalData">Hashtable of strings representing the additionally definable properties of the input (see <see cref="!:Cn.Web.Renderer.Form.Add">Renderer.Form.Add</see>'s remarks).</param>
             <param name="bIsSpecialListBox">Boolean value indicating if the input is to be printed as a DHTML option list box.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklist</paramref> is null or contains no <c>Rows</c>.</exception>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>September 7, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.HTMLBuilder.DoCheckBoxes(System.String,System.String,System.String,System.String[],System.String,Cn.Collections.MultiArray,System.Collections.Hashtable,Cn.Web.Settings.Current,System.Boolean)">
            ############################################################
             <summary>
             Renders an XHTML checkbox group or a DHTML checked list box form element based on the provided picklist.
             </summary>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="sInputName">String representing the name of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="a_sInitialValues">String array where each element represents an initial value of the input.</param>
             <param name="sContainerAttributes">String representing the additional HTML attributes to apply to the containing DIV.</param>
             <param name="oPicklist">MultiArray representing the single picklist to render.</param>
             <param name="h_sAdditionalData">Hashtable of strings representing the additionally definable properties of the input (see <see cref="!:Cn.Web.Renderer.Form.Add">Renderer.Form.Add</see>'s remarks).</param>
             <param name="bIsSpecialListBox">Boolean value indicating if the input is to be printed as a DHTML checked list box.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklist</paramref> is null or contains no <c>Rows</c>.</exception>
             <returns>String representing the XHTML control.</returns>
            ############################################################
             <LastUpdated>September 7, 2007</LastUpdated>
        </member>
        <member name="T:Cn.Web.Renderer.Report">
            ########################################################################################################################
             <summary>
             Renderer.Report class.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>May 22, 2007</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Renderer.Report.#ctor">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <seealso cref="!:Cn.Web.Renderer.Report.Reset"/>
            ############################################################
             <LastUpdated>November 13, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Report.#ctor(Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <seealso cref="!:Cn.Web.Renderer.Report.Reset"/>
            ############################################################
             <LastUpdated>November 13, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Report.Render(System.Int32,System.String)">
            ############################################################
             <summary>
             Renders the revelent section of the provided <c>Report</c>.
             </summary>
             <param name="iRecordsPerPage">1-based integer representing the maximum number of records so show per rendered page (does not include new records).</param>
             <param name="sResultsStack">String representing the related Data.Pagination instance.</param>
             <exception cref="T:Cn.CnException">Thrown when the <c>RendererObject</c> returned from the <paramref>rReport</paramref>'s <c>Body</c> is unreconized.</exception>
            ############################################################
             <LastUpdated>March 17, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Report.DoRenderNoResults">
            ############################################################
             <summary>
             Outputs the no results section (surrounded by the header and footer) of the rendered page.
             </summary>
            ############################################################
             <LastUpdated>May 22, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Report.DoRenderHeaders">
            ############################################################
             <summary>
             Outputs the header and detail header sections of the rendered page.
             </summary>
            ############################################################
             <LastUpdated>May 22, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Report.DoRenderBody(Cn.Data.Pagination.PaginationTable)">
            ############################################################
             <summary>
             Outputs the detail and missing record sections (as required) of the rendered page.
             </summary>
             <param name="oCurrentTable">PaginationTable object representing the relevant record IDs for the current table index.</param>
            ############################################################
             <LastUpdated>November 13, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Report.DoRenderFooters">
            ############################################################
             <summary>
             Outputs the footer and detail footer sections of the rendered page.
             </summary>
            ############################################################
             <LastUpdated>May 22, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Report.PageHeader">
            ############################################################
             <summary>
             Outputs the page header section of the rendered page.
             </summary>
             <remarks>
             Optionally overload this function to define your own page section.
             <para/>This function is called at the top of every rendered page (once for a non-printable page, and at the top of each printable page). This function is called for every page render.
             </remarks>
            ############################################################
             <LastUpdated>May 19, 2004</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Report.Body(System.String,System.String)">
            ############################################################
             <summary>
             Returns a reference to the next section of the report.
             </summary>
             <remarks>
             This function is called once per collected <c>PaginationTable</c>. This function is not called if there are no collected <c>PaginationTable</c>s to render.
             <para/>NOTE: This page section should not output any code to the end user, as there is no associated <c>PrintLength</c> calculation for the <c>Body</c>.
             </remarks>
             <returns><c>List</c> or <c>Form</c> object that represents the next section of the <c>Report</c>.</returns>
            ############################################################
             <LastUpdated>March 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.Report.PageFooter">
            ############################################################
             <summary>
             Outputs the page footer section of the rendered page.
             </summary>
             <remarks>
             Optionally overload this function to define your own page section.
             <para/>This function is called at the bottom of every rendered page after the current <c>List.DetailFooter</c> or <c>Form.DetailFooter</c> (once for a non-printable page, or at the bottom of each printable page). This function is called for every page render.
             </remarks>
            ############################################################
             <LastUpdated>May 19, 2004</LastUpdated>
        </member>
        <member name="T:Cn.Data.Mirror">
            ########################################################################################################################
             <summary>
             Collection of static functions to map data between objects utilizing Reflection (hence the play on words).
             </summary>
            ########################################################################################################################
             <LastFullCodeReview></LastFullCodeReview>
        </member>
        <member name="M:Cn.Data.Mirror.GetPropertyValue(System.Object,System.String)">
            ############################################################
             <summary>
             Gets the value of the referenced property from the provided object.
             </summary>
             <param name="oObject">Object to be used as the data source.</param>
             <param name="sPropertyName">String representing the name of the requested property.</param>
             <returns>Object representing the value of the property.</returns>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.GetPropertyValue(System.Object,System.String[])">
            ############################################################
             <summary>
             Gets the referenced property within the provided object.
             </summary>
             <param name="oObject">Object to be used as the data source.</param>
             <param name="a_sPath">Array of Strings representing the path to the requested property.</param>
             <returns>Object representing the value of the property.</returns>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.GetPropertyValueAs``1(System.Object,System.String)">
            ############################################################
             <summary>
             Gets the value of the referenced property from the provided object.
             </summary>
             <typeparam name="T">Type of the property value to return.</typeparam>
             <param name="oObject">Object to be used as the data source.</param>
             <param name="sPropertyName">String representing the name of the requested property.</param>
             <returns>Type representing the value of the property.</returns>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.GetPropertyValueAs``1(System.Object,System.String[])">
            ############################################################
             <summary>
             Gets the referenced property within the provided object.
             </summary>
             <typeparam name="T">Type of the property value to return.</typeparam>
             <param name="oObject">Object to be used as the data source.</param>
             <param name="a_sPath">Array of Strings representing the path to the requested property.</param>
             <returns>Object representing the value of the property.</returns>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.GetPropertyValue(System.Object,System.String,System.Object@)">
            ############################################################
             <summary>
             Safely gets the value of the referenced property from the provided object.
             </summary>
             <param name="oObject">Object to be used as the data source.</param>
             <param name="sPropertyName">String representing the name of the requested property.</param>
             <param name="oValue">Returned Object that will recieve the value of the property.</param>
             <returns>Boolean value indicating if we successfully collected the property's value.</returns>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.GetPropertyValue(System.Object,System.String[],System.Object@)">
            ############################################################
             <summary>
             Gets the referenced property within the provided object.
             </summary>
             <param name="oObject">Object to be used as the data source.</param>
             <param name="a_sPath">Array of Strings representing the path to the requested property.</param>
             <param name="oValue">Returned Object that will recieve the value of the property.</param>
             <returns>Boolean value indicating if we successfully collected the property's value.</returns>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.GetPropertyValueAs``1(System.Object,System.String,``0@)">
            ############################################################
             <summary>
             Safely gets the value of the referenced property from the provided object.
             </summary>
             <typeparam name="T">Type of the property value to return.</typeparam>
             <param name="oObject">Object to be used as the data source.</param>
             <param name="sPropertyName">String representing the name of the requested property.</param>
             <param name="tValue">Returned Type that will recieve the value of the property.</param>
             <returns>Boolean value indicating if we successfully collected the property's value.</returns>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.GetPropertyValueAs``1(System.Object,System.String[],``0@)">
            ############################################################
             <summary>
             Gets the referenced property within the provided object.
             </summary>
             <typeparam name="T">Type of the property value to return.</typeparam>
             <param name="oObject">Object to be used as the data source.</param>
             <param name="a_sPath">Array of Strings representing the path to the requested property.</param>
             <param name="tValue">Returned Type that will recieve the value of the property.</param>
             <returns>Boolean value indicating if we successfully collected the property's value.</returns>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.SetPropertyValue(System.Object,System.String,System.Object)">
            ############################################################
             <summary>
             Sets the referenced property within the provided object.
             </summary>
             <param name="oObject">Object where the property is to be set.</param>
             <param name="sPropertyName">String representing the name of the requested property.</param>
             <param name="oValue">Object representing the value to set within the property.</param>
             <returns>Boolean value indicating if we successfully set the property's value.</returns>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.SetPropertyValue(System.Object,System.String[],System.Object)">
            ############################################################
             <summary>
             Sets the referenced property within the provided object.
             </summary>
             <param name="oObject">Object where the property is to be set.</param>
             <param name="a_sPath">Array of Strings representing the path to the requested property.</param>
             <param name="oValue">Object representing the value to set within the property.</param>
             <returns>Boolean value indicating if we successfully set the property's value.</returns>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.SetPropertyValueAs``1(System.Object,System.String,``0)">
            ############################################################
             <summary>
             Safely sets the referenced property within the provided object.
             </summary>
             <remarks>
             NOTE: This function will raise errors if the passed <paramref name="oObject"/> is null, if the <paramref name="sPropertyName"/> is invalid or if the provided <typeparamref name="T"/> doesn't match the property's type.
             </remarks>
             <typeparam name="T">Type of the property value to set.</typeparam>
             <param name="oObject">Object to be used as the data source.</param>
             <param name="sPropertyName">String representing the name of the requested property.</param>
             <param name="tValue">Type that will recieve the value of the property.</param>
             <returns>Boolean value indicating if we successfully set the property's value.</returns>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.SetPropertyValueAs``1(System.Object,System.String[],``0)">
            ############################################################
             <summary>
             Sets the referenced property within the provided object.
             </summary>
             <typeparam name="T">Type of the property value to return.</typeparam>
             <param name="oObject">Object where the property is to be set.</param>
             <param name="a_sPath">Array of Strings representing the path to the requested property.</param>
             <param name="tValue">Object representing the value to set within the property.</param>
             <returns>Boolean value indicating if we successfully set the property's value.</returns>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.Map(System.Object,System.Object)">
            ############################################################
             <summary>
             Maps data between the provided objects.
             </summary>
             <param name="oFrom">Object to be used as the data source.</param>
             <param name="oTo">Object to be used as the data destination.</param>
             <returns>Boolean value representing if all of the readable properties within the provided <paramref name="oFrom"/> were successfully mapped into <paramref name="oTo"/>.</returns>
            ############################################################
             <LastUpdated>December 11, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.MapAs``1(``0,``0)">
            ############################################################
             <summary>
             Maps data between the provided objects of the same type.
             </summary>
             <remarks>
             This function always returns true. A boolean return value is provided only for consistency across the other <c>Map</c> functions.
             </remarks>
             <param name="oFrom">Class-based Object to be used as the data source.</param>
             <param name="oTo">Class-based Object to be used as the data destination.</param>
             <returns>Boolean value of true.</returns>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.Map(System.Object,System.String,System.Object,System.String)">
            ############################################################
             <summary>
             Maps data between the provided objects.
             </summary>
             <param name="oFrom">Object to be used as the data source.</param>
             <param name="sFromPropertyName">String representing the name of the requested property within the data source.</param>
             <param name="oTo">Object to be used as the data destination.</param>
             <param name="sToPropertyName">String representing the name of the requested property within the data destination.</param>
             <returns>Boolean value representing if all of the readable properties within the provided <paramref name="oFrom"/> were successfully mapped into <paramref name="oTo"/>.</returns>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.Map(System.Object,System.String[],System.Object,System.String[])">
            ############################################################
             <summary>
             Maps data between the provided objects.
             </summary>
             <param name="oFrom">Object to be used as the data source.</param>
             <param name="a_sFromPath">Array of Strings representing the path to the requested property within the data source.</param>
             <param name="oTo">Object to be used as the data destination.</param>
             <param name="a_sToPath">Array of Strings representing the path to the requested property within the data destination.</param>
             <returns>Boolean value representing if all of the readable properties within the provided <paramref name="oFrom"/> were successfully mapped into <paramref name="oTo"/>.</returns>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.Map(Cn.Web.Inputs.IInputCollection,System.Object)">
            ############################################################
             <summary>
             Maps data between the provided objects.
             </summary>
             <param name="oFrom">IInputCollection object to be used as the data source.</param>
             <param name="oTo">Object to be used as the data destination.</param>
             <returns>Boolean value representing if all of the properties within the provided <paramref name="oTo"/> object were successfully mapped.</returns>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.Map(System.Object,Cn.Web.Inputs.IInputCollection)">
            ############################################################
             <summary>
             Maps data between the provided objects.
             </summary>
             <param name="oFrom">Object to be used as the data source.</param>
             <param name="oTo">IInputCollection object to be used as the data destination.</param>
             <returns>Boolean value representing if all of the properties within the provided <paramref name="oTo"/> object were successfully mapped.</returns>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.DoMap(Cn.Web.Inputs.IInputCollection,System.Object,Cn.Data.Mirror.enumDirection)">
            ############################################################
             <summary>
             Maps data between the provided objects.
             </summary>
             <param name="oInputCollection">IInputCollection object to be used as a data source/destination.</param>
             <param name="oBusinessObject">Object to be used as a data source/destination.</param>
             <param name="eDirection">Enumeration defining the direction of the mapping.</param>
             <returns>Boolean value representing if all of the properties within the provided <paramref name="oBusinessObject"/> were successfully mapped.</returns>
            ############################################################
             <LastUpdated>December 1, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.Map(Cn.Web.Inputs.IInputCollection,System.Object,System.String[])">
            ############################################################
             <summary>
             Maps data between the provided objects.
             </summary>
             <param name="oFrom">IInputCollection object to be used as the data source.</param>
             <param name="oTo">Object to be used as the data destination.</param>
             <param name="a_sNamesToMap">Array of strings defining the properties/controls to map.</param>
             <returns>Boolean value representing if all of the provided <paramref name="a_sNamesToMap"/> were successfully mapped.</returns>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.Map(System.Object,Cn.Web.Inputs.IInputCollection,System.String[])">
            ############################################################
             <summary>
             Maps data between the provided objects.
             </summary>
             <param name="oFrom">Object to be used as the data source.</param>
             <param name="oTo">IInputCollection object to be used as the data destination.</param>
             <param name="a_sNamesToMap">Array of strings defining the properties/controls to map.</param>
             <returns>Boolean value representing if all of the provided <paramref name="a_sNamesToMap"/> were successfully mapped.</returns>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.DoMap(Cn.Web.Inputs.IInputCollection,System.Object,System.String[],Cn.Data.Mirror.enumDirection)">
            ############################################################
             <summary>
             Maps data between the provided objects.
             </summary>
             <param name="oInputCollection">IInputCollection object to be used as a data source/destination.</param>
             <param name="oBusinessObject">Object to be used as a data source/destination.</param>
             <param name="a_sNamesToMap">Array of strings defining the properties/controls to map.</param>
             <param name="eDirection">Enumeration defining the direction of the mapping.</param>
             <returns>Boolean value representing if all of the provided <paramref name="a_sNamesToMap"/> were successfully mapped.</returns>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.Map(System.Web.UI.ControlCollection,System.Object,System.String[])">
            ############################################################
             <summary>
             Maps data between the provided objects.
             </summary>
             <param name="oFrom">Object to be used as the data source.</param>
             <param name="oTo">ControlCollection object to be used as the data destination.</param>
             <param name="a_sNamesToMap">Array of strings defining the properties/controls to map.</param>
             <returns>Boolean value representing if all of the provided <paramref name="a_sNamesToMap"/> were successfully mapped.</returns>
            ############################################################
             <LastUpdated>November 24, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.Map(System.Object,System.Web.UI.ControlCollection,System.String[])">
            ############################################################
             <summary>
             Maps data between the provided objects.
             </summary>
             <param name="oFrom">ControlCollection object to be used as the data source.</param>
             <param name="oTo">Object to be used as the data destination.</param>
             <param name="a_sNamesToMap">Array of strings defining the properties/controls to map.</param>
             <returns>Boolean value representing if all of the provided <paramref name="a_sNamesToMap"/> were successfully mapped.</returns>
            ############################################################
             <LastUpdated>November 24, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.DoMap(System.Web.UI.ControlCollection,System.Object,System.String[],Cn.Data.Mirror.enumDirection)">
            ############################################################
             <summary>
             Maps data between the provided objects.
             </summary>
             <param name="oControlCollection">ControlCollection object to be used as a data source/destination.</param>
             <param name="oBusinessObject">Object to be used as a data source/destination.</param>
             <param name="a_sNamesToMap">Array of strings defining the properties/controls to map.</param>
             <param name="eDirection">Enumeration defining the direction of the mapping.</param>
             <returns>Boolean value representing if all of the provided <paramref name="a_sNamesToMap"/> were successfully mapped.</returns>
            ############################################################
             <LastUpdated>December 11, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.Mirror.LocatePropertyObject(System.Object,System.String[],System.Object@,System.String@)">
            ############################################################
             <summary>
             Sets the referenced property within the provided object.
             </summary>
             <param name="oObject">Object where the property is to be set.</param>
             <param name="a_sPath">Array of Strings representing the path to the requested property.</param>
             <param name="oPropertyObject">Returned Object representing the object containing the requested property.</param>
             <param name="sPropertyName">Returned String representing the name of the requested property.</param>
             <returns>Boolean value indicating if we successfully located the requested property.</returns>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.InputCollectionControlCommon">
            ########################################################################################################################
             <summary>
             Common static functionality used by all InputCollection-based WebControls.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview></LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Controls.InputCollectionControlCommon.DoDataBind(System.Collections.Generic.IList{Cn.Web.Controls.Input},System.Object,System.Int32)">
            ############################################################
             <summary>
             Binds a data source to the invoked server control and all its child controls.
             </summary>
             <param name="l_oInputs">List of Controls.Inputs representing the collection of inputs.</param>
             <param name="oDataSource">Object representing the data source to bind to the control.</param>
             <param name="iRowIndex">Integer representing the row index to use within the data source.</param>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.InputCollectionControlCommon.DoRenderInput(System.String,Cn.Web.Inputs.enumInputTypes,System.String,System.String[],System.Boolean,System.String,System.Web.UI.HtmlTextWriter,Cn.Web.Inputs.IInputCollection)">
            ############################################################
             <summary>
             Renders the control to the specified HTML writer.
             </summary>
             <remarks>
             NOTE: This function will ignore any non-existant <c>sInputAlias</c>'s.
             </remarks>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <param name="eInputType">Enumeration representing the input type to render.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="a_sInitialValues">Array of strings where each element represents an initial value of the input.</param>
             <param name="bForceInitialValue">Boolean value representing if the value of the input is always to be set to <paramref name="sInitialValue"/>/<paramref name="a_sInitialValues"/>.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="writer">HtmlTextWriter object as automatically provided by the host ASPX page.</param>
             <returns>Boolean value indicating if it is necessary to raise the <c>GenerateHTML</c> event.</returns>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.InputCollection">
            ########################################################################################################################
             <summary>
             Controls.InputCollection class wraps the functionality of Inputs.InputCollection into a WebControl.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>September 6, 2005</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Controls.InputCollection.#ctor">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.InputCollection.DataBind">
            ############################################################
             <summary>
             Binds a data source to the invoked server control and all its child controls.
             </summary>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.InputCollection.OnInit(System.EventArgs)">
            ############################################################
             <summary>
             Raises the System.Web.UI.Control.Init event.
             </summary>
             <param name="e">An System.EventArgs object that contains the event data.</param>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.InputCollection.Render(System.Web.UI.HtmlTextWriter)">
            ############################################################
             <summary>
             Renders the control to the specified HTML writer.
             </summary>
             <param name="writer">The System.Web.UI.HtmlTextWriter object that recieves the control content.</param>
            ############################################################
             <LastUpdated>March 19, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.InputCollection.Add(Cn.Web.Controls.Input)">
            ############################################################
             <summary>
             Adds an input into the collection.
             </summary>
             <remarks>
             <para/>NOTE: <c>Input</c>s defined as <c>cnBoolean</c>s always return values based on <see cref="M:Cn.Data.Tools.MakeBooleanInteger(System.Object,System.Boolean)">MakeBooleanInteger</see>, where zero equates to false and non-zero equates to true.
             <para/>NOTE: If you request that SQL statements be auto-generated in the return value for <see cref="M:Cn.Web.Renderer.Form.ValidateRecord(System.Boolean,System.Boolean,System.Boolean)">ValidateRecord</see>, you are not permitted to define an input alias that contains the <see cref="P:Cn.Configuration.Settings.PrimaryDelimiter">PrimaryDelimiter</see>.
             </remarks>
             <param name="oInputControl">Controls.Input representing the Input control to add into this instance.</param>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.InputCollection.RenderInput(System.String,Cn.Web.Inputs.enumInputTypes,System.String,System.String[],System.Boolean,System.String,System.Web.UI.HtmlTextWriter)">
            ############################################################
             <summary>
             Renders the control to the specified HTML writer.
             </summary>
             <remarks>
             NOTE: This function will ignore any non-existant <c>sInputAlias</c>'s.
             </remarks>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <param name="eInputType">Enumeration representing the input type to render.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="a_sInitialValues">Array of strings where each element represents an initial value of the input.</param>
             <param name="bForceInitialValue">Boolean value representing if the value of the input is always to be set to <paramref name="sInitialValue"/>/<paramref name="a_sInitialValues"/>.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="writer">HtmlTextWriter object as automatically provided by the host ASPX page.</param>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="E:Cn.Web.Controls.InputCollection.GenerateHTML">
            ############################################################
             <summary>
             Enables the generation of custom HTML controls.
             </summary>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.InputCollection.DataSource">
            ############################################################
             <summary>
             Gets/sets the data source that is provided to the items within the control.
             </summary>
             <value>Object that is provided to the items within the control.</value>
            ############################################################
             <LastUpdated>February 11, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.InputCollection.Form">
            ############################################################
             <summary>
             Gets/sets the Template representing the form section of the rendered page.
             </summary>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.InputCollection.DisplayErrorMessagesViaJavaScript">
            ############################################################
             <summary>
             Gets/sets a value indicating we are to display error messages via JavaScript.
             </summary>
             <remarks>
             In order to utilize this functionality, the developer must initilize the JavaScript error messages via <c>UIHook</c>.
             </remarks>
             <value>Boolean value indicating if we are to display error messages via JavaScript.</value>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.InputCollection.IsReadOnly">
            ############################################################
             <summary>
             Gets/sets a value indicating if the <c>Form</c> is to be rendered as read only.
             </summary>
             <remarks>
             NOTE: This property references <c>Inputs.Settings.IsReadOnly</c> and is available here for documentation of the related WebControl attribute only.
             </remarks>
             <value>Boolean value indicating if the <c>Form</c> is to be rendered as read only.</value>
            ############################################################
             <LastUpdated>November 23, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.InputCollection.ControlManager">
            ############################################################
             <summary>
             Gets the base control class related to this instance.
             </summary>
             <value>InputCollection object that manages this instance.</value>
            ############################################################
             <LastUpdated>February 8, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.InputCollection.InputControls">
            ############################################################
             <summary>
             Gets a collection of inputs associated with this instance.
             </summary>
             <value>List of Controls.Input objects that represent the collection of inputs associated with this instance.</value>
            ############################################################
             <LastUpdated>April 7, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.InputCollection.Inputs">
            ############################################################
             <summary>
             Gets the base Input Collection class related to this instance.
             </summary>
             <value>InputCollection object that manages this instance.</value>
            ############################################################
             <LastUpdated>April 7, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.InputCollection.IsDataBound">
            ############################################################
             <summary>
             Gets a value representing if this instance has been data bound.
             </summary>
             <value>Boolean value representing if this instance has been data bound.</value>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.TemplateContainer">
            ########################################################################################################################
             <summary>
             WebControl Item Template container.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>February 11, 2010</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Controls.TemplateContainer.#ctor(System.Object,System.Int32,System.Int32,Cn.Web.Renderer.enumPageSections)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oDataItem">Object that represents the value to use when data-binding operations are performed.</param>
             <param name="iDataItemIndex">Integer representing the index of the data item in the data source.</param>
             <param name="iDisplayIndex">Integer representing the position of the data item as displayed in a control.</param>
             <param name="ePageSection">Enumeration representing the referenced page section.</param>
            ############################################################
             <LastUpdated>February 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.TemplateContainer.#ctor(Cn.Web.Renderer.enumPageSections)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="ePageSection">Enumeration representing the referenced page section.</param>
            ############################################################
             <LastUpdated>June 2, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.TemplateContainer.DataItem">
            ############################################################
             <summary>
             Gets an object that is used in simplified data-binding operations.
             </summary>
             <value>An object that represents the value to use when data-binding operations are performed.</value>
            ############################################################
             <LastUpdated>June 2, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.TemplateContainer.DataItemIndex">
            ############################################################
             <summary>
             Gets the index of the data item bound to a control.
             </summary>
             <value>An Integer representing the index of the data item in the data source.</value>
            ############################################################
             <LastUpdated>June 2, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.TemplateContainer.DisplayIndex">
            ############################################################
             <summary>
             Gets the position of the data item as displayed in a control.
             </summary>
             <value>An Integer representing the position of the data item as displayed in a control.</value>
            ############################################################
             <LastUpdated>June 2, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.TemplateContainer.PageSection">
            ############################################################
             <summary>
             Gets the page section this template represents.
             </summary>
             <value>Enumeration representing the page section this template represents.</value>
            ############################################################
             <LastUpdated>March 19, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.GenerateHTMLEventHandler">
            ########################################################################################################################
             <summary>
             Delegate signature defintion for the <c>GenerateHTML</c> events.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>February 10, 2010</LastFullCodeReview>
        </member>
        <member name="T:Cn.Web.Controls.GenerateHTMLEventArgs">
            ########################################################################################################################
             <summary>
             Event arguments required by the <c>GenerateResults</c> event.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>February 10, 2010</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Controls.GenerateHTMLEventArgs.#ctor(System.String,Cn.Web.Inputs.enumInputTypes,System.String,System.String[],System.String)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <param name="eInputType">Enumeration representing the input type to render.</param>
             <param name="sInitialValue">String representing the initial value of the input.</param>
             <param name="a_sInitialValues">Array of strings where each element represents the initial values of the input.</param>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.GenerateHTMLEventArgs.InitialValues">
            ############################################################
             <summary>
             Gets a value representing the initial values of the input.
             </summary>
             <value>Array of strings where each element represents the initial values of the input.</value>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.GenerateHTMLEventArgs.InitialValue">
            ############################################################
             <summary>
             Gets a value representing the initial value of the input.
             </summary>
             <value>String representing the initial value of the input.</value>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.GenerateHTMLEventArgs.Attributes">
            ############################################################
             <summary>
             Gets a value representing the additional HTML attributes to apply to the input.
             </summary>
             <value>String representing the additional HTML attributes to apply to the input.</value>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.GenerateHTMLEventArgs.InputAlias">
            ############################################################
             <summary>
             Gets a value representing the HTML input's unique base name.
             </summary>
             <value>String representing the HTML input's unique base name.</value>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.GenerateHTMLEventArgs.InputType">
            ############################################################
             <summary>
             Gets a value representing the input type to render.
             </summary>
             <value>Enumeration representing the input type to render.</value>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.GenerateResultsEventArgs">
            ########################################################################################################################
             <summary>
             Event arguments required by the <c>GenerateResults</c> event.
             </summary>
            ########################################################################################################################
             <LastUpdated>December 8, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.GenerateResultsEventArgs.#ctor(Cn.Data.Pagination,System.Boolean)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oResults">Pagination object representing entire result set's record IDs.</param>
             <param name="bReorderExistingResults">Boolean value indicating if the entire results set requires re-ordering.</param>
            ############################################################
             <LastUpdated>February 8, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.GenerateResultsEventArgs.Results">
            ############################################################
             <summary>
             Gets a value representing entire result set's record IDs.
             </summary>
             <value>Pagination object representing entire result set's record IDs.</value>
            ############################################################
             <LastUpdated>February 8, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.GenerateResultsEventArgs.ReorderExistingResults">
            ############################################################
             <summary>
             Gets a value indicating if the entire results set requires re-ordering.
             </summary>
             <value>Boolean value indicating if the entire results set requires re-ordering.</value>
            ############################################################
             <LastUpdated>December 1, 2009</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.CollectPageResultsEventArgs">
            ########################################################################################################################
             <summary>
             Event arguments required by the <c>GenerateResults</c> event.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>December 1, 2009</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Controls.CollectPageResultsEventArgs.#ctor(Cn.Data.Pagination)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oPageResults">Pagination object representing this page's relevant record IDs.</param>
            ############################################################
             <LastUpdated>February 8, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.CollectPageResultsEventArgs.PageResults">
            ############################################################
             <summary>
             Gets a value representing this page's relevant record IDs.
             </summary>
             <value>Pagination object representing this page's relevant record IDs.</value>
            ############################################################
             <LastUpdated>February 8, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.PrintLengthEventArgs">
            ########################################################################################################################
             <summary>
             Event arguments required by the <c>PrintLength</c> event.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>December 1, 2009</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Controls.PrintLengthEventArgs.#ctor(Cn.Web.Renderer.enumPageSections)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="ePageSection">Enumeration representing the referenced page section.</param>
            ############################################################
             <LastUpdated>February 8, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.PrintLengthEventArgs.PageSection">
            ############################################################
             <summary>
             Gets a value representing the referenced page section.
             </summary>
             <value>Enumeration representing the referenced page section.</value>
            ############################################################
             <LastUpdated>February 8, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.HTMLTextToString">
            ########################################################################################################################
             <summary>
             Provides functionality to render ASP.NET server control output streams to a string.
             </summary>
             <remarks>
             NOTE: There is overlap between this class and GetAttributes. Some refactoring is rquired.
             </remarks>
            ########################################################################################################################
             <LastFullCodeReview>February 11, 2010</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Controls.HTMLTextToString.#ctor">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
            ############################################################
             <LastUpdated>February 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.HTMLTextToString.Reset">
            ############################################################
             <summary>
             Resets the class to it's initialized state.
             </summary>
            ############################################################
             <LastUpdated>February 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.HTMLTextToString.ToString">
            ############################################################
             <summary>
             Returns a string representing the ASP.NET server control output stream.
             </summary>
             <returns>String representing the ASP.NET server control output stream.</returns>
            ############################################################
             <LastUpdated>February 11, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.HTMLTextToString.HTMLTextWriter">
            ############################################################
             <summary>
             Gets an object rewired to render ASP.NET server control output streams to a string.
             </summary>
             <value>HtmlTextWriter object representing an object rewired to render ASP.NET server control output streams to a string.</value>
            ############################################################
             <LastUpdated>February 11, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.Tools">
            ########################################################################################################################
             <summary>
             General helper methods.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview></LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Controls.Tools.FindControl``1(System.Web.UI.Control,System.Boolean)">
            ############################################################
             <summary>
             Locates Controls of the requested type under the passed root control.
             </summary>
             <remarks>
             This implementation does not utilize recursion to accomplish the heirarchically based search.
             </remarks>
             <typeparam name="T">Class-based Type representing the type to locate.</typeparam>
             <param name="oRootControl">Control representing the starting point of the search.</param>
             <param name="bFindFirstOnly">Boolean value representing if the search should stop on the first located Type.</param>
             <returns>Array of T type where each index represents a located Control of type T.</returns>
            ############################################################
             <LastUpdated>February 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Tools.SetParentInputCollection(System.Web.UI.Control,Cn.Web.Controls.IInputCollectionControl@)">
            ############################################################
             <summary>
             Safely sets <c>g_oParentInputCollection</c> to a valid WebControl representing an InputCollection.
             </summary>
             <param name="oControl">IInputCollectionControl object representing the object to set into <c>oInputCollectionControl</c>.</param>
             <returns>Boolean value indicating if the passed <paramref name="oParentInputCollection"/> was a valid WebControl representing an InputCollection.</returns>
            ############################################################
             <LastUpdated>February 26, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Tools.GetInputAttributes(System.Web.UI.WebControls.WebControl)">
            ############################################################
             <summary>
             Retrieves all of the input *HTML attributes from the referenced Control.
             </summary>
             <remarks>
             This function retrieves all of the non-identifying, non-input related *HTML attributes from the referenced Control. The following attributes are NOT included in the returned string:
                 ID, Name, Type
             </remarks>
             <param name="oControl">WebControl object representing the *HTML Control you wish to retrieve the attributes from.</param>
             <returns>String representing the *HTML attributes from the referenced Control.</returns>
            ############################################################
             <LastUpdated>October 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Tools.GetAttributes(System.Web.UI.WebControls.WebControl,System.String[])">
            ############################################################
             <summary>
             Retrieves all of the *HTML attributes from the referenced Control.
             </summary>
             <param name="oControl">WebControl object representing the *HTML Control you wish to retrieve the attributes from.</param>
             <param name="a_sAttributesToExclude"></param>
             <returns>String representing the *HTML attributes from the referenced Control.</returns>
            ############################################################
             <LastUpdated>October 2, 2007</LastUpdated>
        </member>
        <member name="T:Cn.Platform.Specific">
            ########################################################################################################################
             <summary>
             Language/enviroment specific helper methods (dotNET, PHP, Java, etc).
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>May 10, 2007</LastFullCodeReview>
        </member>
        <member name="M:Cn.Platform.Specific.AppSettings(System.String)">
            ###############################################################
             <summary>
             Abstraction layer dotNet's data retrieval from the application settings section of the configuration file.
             </summary>
             <param name="sName">String representing the name of the application settings entry to retrieve.</param>
             <returns>String representing the value for the referenced name from the application settings section of the configuration file.</returns>
            ###############################################################
             <LastUpdated>May 28, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Platform.Specific.ReadFromFile(System.String)">
            ###############################################################
             <summary>
             Retrieves the contents of the referenced file.
             </summary>
             <param name="sPathToFile">String representing realtive or absolute path to the file to read.</param>
             <returns>String representing the contents of the referenced file.</returns>
            ###############################################################
             <LastUpdated>February 6, 2006</LastUpdated>
        </member>
        <member name="M:Cn.Platform.Specific.DeepCopy(System.Collections.Hashtable)">
            ###############################################################
             <summary>
             Retrieves a deep copy of the data stored within the passed structure.
             </summary>
             <remarks>
             The returned hashtable contains a deep copy of only the primitive/value types contained within the passed <paramref>hHash</paramref>. Object/reference types are represented by a new reference (pointer) to the object, but still refer to the same instance refereced to within the passed <paramref>hHash</paramref>.
             </remarks>
             <param name="hHash">Hashtable representing the data to copy.</param>
             <returns>Deep copy of the passed <paramref>hHash</paramref> hashtable.</returns>
            ###############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Platform.Specific.DeepCopy(System.String[])">
            ###############################################################
             <summary>
             Retrieves a deep copy of the data stored within the passed structure.
             </summary>
             <param name="a_sArray">Array of strings representing the data to copy.</param>
             <returns>Deep copy of the passed <paramref>a_sArray</paramref> array of strings.</returns>
            ###############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Platform.Specific.DeepCopy(System.IO.Stream)">
            ###############################################################
             <summary>
             Retrieves a deep copy of the data stored within the passed structure.
             </summary>
             <remarks>
             Based on the unlicensed example presented by KDDatacore (http://www.datacore.co.za/FileCopy.aspx)
             </remarks>
             <param name="oStream">Stream representing the data to copy.</param>
             <returns>A MemoryStream object containing a deep copy of the passed <paramref>oStream</paramref>.</returns>
            ###############################################################
             <LastUpdated>October 12, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Platform.Specific.GetOptimisedBlockSize(System.Int32)">
            Always return the nearest KB or MB rounded of value ten times less than the p_size parameter. 
            If the resultant value is larger than 64Mb then check that 64Mb is less than one tenth of the available memory, if 
            it is larger then get the closest rounded of value to one tenth of the available memory; 
            <param name="p_size"/>The size of the data that will be needed to be split up 
        </member>
        <member name="T:Cn.Data.enumDataSource">
            <summary>Reconized database servers/data sources.</summary>
        </member>
        <member name="F:Cn.Data.enumDataSource.cnNone">
            <summary>Not a RDBMS.</summary>
        </member>
        <member name="F:Cn.Data.enumDataSource.cnOracle">
            <summary>Oracle.</summary>
        </member>
        <member name="F:Cn.Data.enumDataSource.cnSQLServer">
            <summary>Microsoft's SQL*Server.</summary>
        </member>
        <member name="F:Cn.Data.enumDataSource.cnSharePointPseudobase">
            <summary>Microsoft's Sharepoint underlying data structure.</summary>
        </member>
        <member name="T:Cn.Data.Tools">
            ########################################################################################################################
             <summary>
             General helper methods.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>July 29, 2005</LastFullCodeReview>
        </member>
        <member name="M:Cn.Data.Tools.Push``1(``0[],``0)">
            ###############################################################
             <summary>
             Appends the provided value onto the end of the provided array.
             </summary>
             <param name="a_oArray">Array of Type T that represents the values to copy.</param>
             <param name="oValue">Type T representing the new value to add onto the end of the Array of Type T.</param>
             <returns>Array of Type T's representing a deep copy of the passed <paramref name="a_oArray"/> with the passed <paramref name="oValue"/> appended onto the end.</returns>
            ###############################################################
             <LastUpdated>June 21, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.Pop``1(``0[])">
            ###############################################################
             <summary>
             Removes the last index of the provided array.
             </summary>
             <param name="a_sArray">Array of Type T that represents the values to copy.</param>
             <returns>Array of Type T representing a deep copy of the passed <paramref name="a_oArray"/> with last index removed.</returns>
            ###############################################################
             <LastUpdated>June 21, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.LPad(System.Object,System.String,System.Int32)">
            ###############################################################
             <summary>
             Pads the left side of the provided value with the referenced character.
             </summary>
             <param name="oValue">Object representing the value to pad. <para/>NOTE: This value is converted into its string equivalent before the test.</param>
             <param name="sPadCharacter">String representing the single character to use to pad the provided value.</param>
             <param name="iLength">1-based integer representing the required length of the return value.</param>
             <returns>String representing the padded value.</returns>
            ###############################################################
             <LastUpdated>February 19, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.RPad(System.Object,System.String,System.Int32)">
            ###############################################################
             <summary>
             Pads the right side of the provided value with the referenced character.
             </summary>
             <param name="oValue">Object representing the value to pad. <para/>NOTE: This value is converted into its string equivalent before the test.</param>
             <param name="sPadCharacter">String representing the single character to use to pad the provided value.</param>
             <param name="iLength">1-based integer representing the required length of the return value.</param>
             <returns>String representing the padded value.</returns>
            ###############################################################
             <LastUpdated>February 19, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.Chr(System.Int32)">
            ###############################################################
             <summary>
             Retrieves the character associated with the provided character code.
             </summary>
             <param name="iASCIICharacterCode">Integer representing the ASCII character code to decode.</param>
             <returns>String representing the character associated with the passed <paramref>iASCIICharacterCode</paramref>.</returns>
            ###############################################################
             <LastUpdated>September 15, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.Asc(System.String)">
            ###############################################################
             <summary>
             Retrieves the character code associated with the provided character.
             </summary>
             <param name="sCharacter">String representing the character to encode.</param>
             <returns>Integer representing the ASCII character code associated with the first character of the passed <paramref>sCharacter</paramref>. NOTE: -1 is returned if the passed <paramref>sCharacter</paramref> is null or a null-string.</returns>
            ###############################################################
             <LastUpdated>January 25, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.MultiValueString(System.String)">
            ###############################################################
             <summary>
             Retrieves the array of data elements stored within the passed multi-value structure.
             </summary>
             <param name="sValues">String representing a multi-value structure as created by <c>MultiValueString</c> (i.e. - "|value1|value2|value3|value4|").</param>
             <returns>String array where each index represents a data element stored within the passed <paramref>sValues</paramref>.</returns>
            ###############################################################
             <LastUpdated>January 10, 2006</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.MultiValueString(System.String[])">
            ###############################################################
             <summary>
             Formats the array of data elements into a multi-value structure.
             </summary>
             <param name="a_sValues">String array where each index represents a data element.</param>
             <returns>String representing a multi-value structure. (i.e. - "|value1|value2|value3|value4|")</returns>
            ###############################################################
             <LastUpdated>December 2, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.Normalize(System.String)">
            ###############################################################
             <summary>
             Replaces all whitespace within the provided value with single spaces.
             </summary>
             <remarks>
             The term "normalize" in this instance conforms to XML's "collapse" style of text normalization. All occurrences of "tabs", "line feeds" and "carriage returns" are replaced with a "space". Subsequent to this, contiguous sequences of "spaces" are collapsed to a single "space", and initial and/or final "spaces" are deleted.
             <para/>For additional information, please see "XML Schema Part 1, Section 3.1.4: White Space Normalization during Validation" available at "http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#section-White-Space-Normalization-during-Validation".
             </remarks>
             <param name="sString">String representing the value to normalize.</param>
             <returns>String representing the normalized value.</returns>
            ###############################################################
             <LastUpdated>July 28, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.MD5(System.String)">
            ###############################################################
             <summary>
             Retrieves the MD5 digest of the provided value.
             </summary>
             <param name="sString">String representing the value to encode.</param>
             <returns>String representing the MD5 digest of the passed <paramref>sString</paramref>.</returns>
            ###############################################################
             <LastUpdated>July 28, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.IsString(System.Object)">
            ###############################################################
             <summary>
             Determines if the provided value is a non-null string value.
             </summary>
             <remarks>
             This method checks for three distinct types of "null":
             <para/>   1) If the passed value is a null pointer, i.e. - equal to "null" (or "Nothing" in VB.Net).
             <para/>   2) If the passed value is a null-string, i.e. - equal to "".
             <para/>   3) If the passed value is a null character, i.e. - equal to ASCII character code 0.
             <para/>If any one of these criteria are satisfied, the value is determined to be "null".
             </remarks>
             <param name="oValue">Object representing the value to test.</param>
             <returns>Boolean value signaling if the passed <paramref>oValue</paramref> is a null value.<para/>Returns true if the <paramref>oValue</paramref> is a null value, or false if it is not.</returns>
            ###############################################################
             <LastUpdated>January 25, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.MakeString(System.Object,System.String)">
            ###############################################################
             <summary>
             Converts the provided value into a string.
             </summary>
             <param name="oValue">Object representing the value to convert.</param>
             <param name="sDefaultValue">String representing the value to return if the conversion results in a null value (as defined by <c>IsNull</c>).</param>
             <returns>String representation of the passed <paramref>oValue</paramref>. If the conversion results in a null value (as defined by <c>IsNull</c>), the passed <paramref>sDefaultValue</paramref> is returned instead.</returns>
             <seealso cref="M:Cn.Data.Tools.IsString(System.Object)"/>
            ###############################################################
             <LastUpdated>August 27, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.IsNumeric(System.Object)">
            ###############################################################
             <summary>
             Determines if the provided value is strictly numeric in nature.
             </summary>
             <remarks>
             This is essentually a stricter (as only some characters are considered numeric) while slopier (as order of those characters are not considerd) form of "IsNumber". This method ensures that the provided value only contains numeric characters (0-9, ",", "-" or "." only).
             <para/>Due to its implementation, this method can handle numbers beyond the minimum/maximum values imposed by the language and/or system architecture.
             <para/>The following examples of passed values and their related return values will help detail the use of this method:
             <para/>   "-9876.54" returns True
             <para/>   "-$9876.548" returns False
             <para/>   "£-9876.548" returns False
             <para/>   "-9,876.54" returns True
             <para/>   "(9876.54)" returns False
             <para/>   "98-76.54" returns True
             <para/>   "Tell you what - 9 monkeys, 8 fish, 7 dogs and 6 cats. $54 in pet food." returns False
             <para/>   "-.-9.8.-.7.6.5.4." returns True
             <para/>   "- monkeys fish dogs cats." returns False
             <para/>Numeric (Adj.); of or relating to or denoting numbers.
             </remarks>
             <param name="oValue">Object representing the value to test. <para/>NOTE: This value is converted into its string equivalent before the test.</param>
             <returns>Boolean value signaling if the passed <paramref>oValue</paramref> is numeric.<para/>Returns true if the <paramref>oValue</paramref> can be successfully converted, or false if it cannot.</returns>
             <seealso cref="M:Cn.Data.Tools.IsNumber(System.Object)"/>
            ###############################################################
             <LastUpdated>February 15, 2006</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.MakeNumeric(System.Object,System.String)">
            ###############################################################
             <summary>
             Extracts any numeric data present within the provided value.
             </summary>
             <remarks>
             By most measures, this method is very "dumb". This method will extract all numeric data from the passed value indiscriminate of its position or the surrounding characters. The only intelligence this method utilizes is to determine if it will include a leading dash ("-") or a single decimal point (".") in the return value.
             <para/>The following examples of passed values and their related return values will help detail the use of this method:
             <para/>   "-9876.54" returns -9876.54
             <para/>   "-$9876.548" returns -9876.54
             <para/>   "£-9876.548" returns -9876.54
             <para/>   "-9,876.54" returns -9876.54
             <para/>   "(9876.54)" returns 9876.54
             <para/>   "98-76.54" returns 9876.54
             <para/>   "Tell you what - 9 monkeys, 8 fish, 7 dogs and 6 cats. $54 in pet food." returns -9876.54
             <para/>   "-.-9.8.-.7.6.5.4." returns -.987654
             <para/>   "- monkeys fish dogs cats." returns the default value
             <para/>As you can see, a leading dash ("-") is perpended onto any following digits. The first decimal point (".") is also included positionally within any preceding/subsequent digits. Due to this behavior, this function is not intended to be used on random blocks of text. It is best used to force a "mostly" numeric value into a string, such as user supplied currency values (which is exactly how Renderer.Form uses it).
             </remarks>
             <param name="oValue">Object representing the value to query. <para/>NOTE: This value is converted into its string equivalent before the test.</param>
             <param name="sDefaultValue">String representing the value to return if the conversion fails.</param>
             <returns>String representation of the numeric data within the passed <paramref>oValue</paramref>. If the conversion fails, the passed <paramref>sDefaultValue</paramref> is returned instead.</returns>
            ###############################################################
             <LastUpdated>August 27, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.IsNumber(System.Object)">
            ###############################################################
             <summary>
             Determines if the provided value is numeric in nature.
             </summary>
             <param name="oValue">Object representing the value to test. <para/>NOTE: This value is converted into its string equivalent before the test.</param>
             <returns>Boolean value signaling the ability to successfully convert the passed <paramref>oValue</paramref> into a double.<para/>Returns true if the <paramref>oValue</paramref> can be successfully converted, or false if it cannot.</returns>
             <seealso cref="M:Cn.Data.Tools.IsNumeric(System.Object)"/>
            ###############################################################
             <LastUpdated>August 27, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.MakeDouble(System.Object,System.Double)">
            ###############################################################
             <summary>
             Converts the provided value into a double.
             </summary>
             <param name="oValue">Object representing the value to convert. <para/>NOTE: This value is converted into its string equivalent before the test.</param>
             <param name="dDefaultValue">Double representing the value to return if the conversion fails.</param>
             <returns>Double representation of the passed <paramref>oValue</paramref>. If the conversion fails, the passed <paramref>dDefaultValue</paramref> is returned instead.</returns>
             <seealso cref="M:Cn.Data.Tools.IsNumber(System.Object)"/>
            ###############################################################
             <LastUpdated>August 27, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.MakeDecimal(System.Object,System.Decimal)">
            ###############################################################
             <summary>
             Converts the provided value into a decimal.
             </summary>
             <param name="oValue">Object representing the value to convert. <para/>NOTE: This value is converted into its string equivalent before the test.</param>
             <param name="dDefaultValue">Decimal representing the value to return if the conversion fails.</param>
             <returns>Decimal representation of the passed <paramref>oValue</paramref>. If the conversion fails, the passed <paramref>dDefaultValue</paramref> is returned instead.</returns>
             <seealso cref="M:Cn.Data.Tools.IsNumber(System.Object)"/>
            ###############################################################
             <LastUpdated>August 27, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.IsInteger(System.Object)">
            ###############################################################
             <summary>
             Determines if the provided value can be converted into an integer without a loss of precision.
             </summary>
             <param name="oValue">Object representing the value to test. <para/>NOTE: This value is converted into its string equivalent before the test.</param>
             <returns>Boolean value signaling the ability to successfully convert the passed <paramref>oValue</paramref> into a integer.<para/>Returns true if the <paramref>oValue</paramref> can be successfully converted, or false if it cannot.</returns>
            ###############################################################
             <LastUpdated>August 27, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.MakeInteger(System.Object,System.Int32)">
            ###############################################################
             <summary>
             Converts the provided value into an integer.
             </summary>
             <param name="oValue">Object representing the value to convert. <para/>NOTE: This value is converted into its string equivalent before the test.</param>
             <param name="iDefaultValue">Integer representing the value to return if the conversion fails.</param>
             <returns>Integer representation of the passed <paramref>oValue</paramref>. If the conversion fails, the passed <paramref>iDefaultValue</paramref> is returned instead.</returns>
             <seealso cref="M:Cn.Data.Tools.IsNumber(System.Object)"/>
            ###############################################################
             <LastUpdated>August 17, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.IsBoolean(System.Object)">
            ###############################################################
             <summary>
             Determines if the provided value can be converted into a boolean.
             </summary>
             <remarks>
             NOTE: Any changes made below must also be made in the JavaScript IsBoolean function.
             </remarks>
             <param name="oValue">Object representing the value to test. <para/>NOTE: This value is converted into its string equivalent before the test.</param>
             <returns>Boolean value signaling the ability to successfully convert the passed <paramref>oValue</paramref> into a boolean.<para/>Returns true if the <paramref>oValue</paramref> can be successfully converted, or false if it cannot.</returns>
            ###############################################################
             <LastUpdated>August 27, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.MakeBoolean(System.Object,System.Boolean)">
            ###############################################################
             <summary>
             Converts the provided value into a boolean.
             </summary>
             <remarks>
             Assumes the rules of boolean algebra, where 0 equals "false" and non-0 equals "true".
             </remarks>
             <param name="oValue">Object representing the value to convert.</param>
             <param name="bDefaultValue">Boolean value representing the value to return if the conversion fails.</param>
             <returns>Boolean value representation of the passed <paramref>oValue</paramref>. If the conversion fails, the passed <paramref>bDefaultValue</paramref> is returned instead.</returns>
             <seealso cref="M:Cn.Data.Tools.MakeBooleanInteger(System.Object,System.Boolean)"/>
             <seealso cref="M:Cn.Data.Tools.IsNumber(System.Object)"/>
            ###############################################################
             <LastUpdated>August 27, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.MakeBooleanInteger(System.Object,System.Boolean)">
            ###############################################################
             <summary>
             Converts the provided value into a boolean integer.
             </summary>
             <remarks>
             Assumes the rules of boolean algebra, where 0 equals "false" and non-0 equals "true".
             </remarks>
             <param name="oValue">Object representing the value to convert.</param>
             <param name="bDefaultValue">Boolean value representing the value to return if the conversion fails.</param>
             <returns>Integer representation of the passed <paramref>oValue</paramref>. If the conversion fails, the passed <paramref>bDefaultValue</paramref>'s integer representation is returned instead.<para/>Returns 1 if the result was true, and 0 if the result was false.</returns>
             <seealso cref="M:Cn.Data.Tools.MakeBoolean(System.Object,System.Boolean)"/>
            ###############################################################
             <LastUpdated>July 28, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.IsDate(System.Object)">
            ###############################################################
             <summary>
             Determines if the provided value can be converted into a date/time.
             </summary>
             <param name="oValue">Object representing the value to test. <para/>NOTE: This value is converted into its string equivalent before the test.</param>
             <returns>Boolean value signaling the ability to successfully convert the passed <paramref>oValue</paramref> into a date/time.<para/>Returns true if the <paramref>oValue</paramref> can be successfully converted, or false if it cannot.</returns>
            ###############################################################
             <LastUpdated>August 27, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.MakeDate(System.Object,System.DateTime)">
            ###############################################################
             <summary>
             Converts the provided value into a date/time.
             </summary>
             <param name="oValue">Object representing the value to convert.</param>
             <param name="dDefaultValue">Date/time representing the value to return if the conversion fails.</param>
             <returns>Date/time representation of the passed <paramref>oValue</paramref>. If the conversion fails, the passed <paramref>dDefaultValue</paramref> is returned instead.</returns>
            ###############################################################
             <LastUpdated>August 27, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.IsGUID(System.Object)">
            ###############################################################
             <summary>
             Determines if the provided value can be converted into a global unique identifier (GUID).
             </summary>
             <param name="oValue">Object representing the value to test. <para/>NOTE: This value is converted into its string equivalent before the test.</param>
             <returns>Boolean value signaling the ability to successfully convert the passed <paramref>oValue</paramref> into a global unique identifier (GUID).<para/>Returns true if the <paramref>oValue</paramref> can be successfully converted, or false if it cannot.</returns>
            ###############################################################
             <LastUpdated>September 16, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.MakeEnum``1(System.Object,``0)">
            ###############################################################
             <summary>
             Converts the provided value into an enumeration.
             </summary>
             <param name="oValue">Object representing the value to convert.</param>
             <param name="eDefaultValue">Enumeration representing the value to return if the conversion fails.</param>
             <returns>Enumeration representation of the passed <paramref>oValue</paramref>. If the conversion fails, the passed <paramref>dDefaultValue</paramref> is returned instead.</returns>
            ###############################################################
             <LastUpdated>January 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.IsNumericInRange(System.Object,System.Object,System.Object)">
            ###############################################################
             <summary>
             Determines if the passed numeric value is within the passed range.
             </summary>
             <remarks>
             Due to its implementation, this method can handle numeric values beyond the minimum/maximum values imposed by the language and/or system architecture.
             <para/>"return (sNumber &gt;= sRangeMin &amp;&amp; sNumber &lt;= sRangeMax)" would work in 99.9% of the checks we'll do with this function, but in the case of huge/tiny numbers (such as NUMERIC(x,y)'s in Oracle), this wouldn't cut it as the numbers would be too large/small to be represented in any available numeric datatypes.
             <para/>NOTE: Assumes that the passed objects are all numeric in nature.
             <para/>NOTE: This should match the logic present within rfDataValidation.js.*'s rfIsNumberInRange.
             <para/>Numeric (Adj.); of or relating to or denoting numbers.
             </remarks>
             <param name="oValue">Object representing the numeric value to compare. <para/>NOTE: This value is converted into its string equivalent before the comparison.</param>
             <param name="oRangeMin">Object representing the minimum numeric value to use as a comparison. <para/>NOTE: This value is converted into its string equivalent before the comparison.</param>
             <param name="oRangeMax">Object representing the maximum numeric value to use as a comparison. <para/>NOTE: This value is converted into its string equivalent before the comparison.</param>
             <returns>Boolean value signaling the presence of the <paramref>oValue</paramref> within the passed range.<para/>Returns true if the <paramref>oValue</paramref> is within the passed range, or false if it is not.</returns>
            ###############################################################
             <LastUpdated>January 8, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.LargeNumericComparison(System.Object,System.Object)">
            ###############################################################
             <summary>
             Determines the position of the provided numeric value in relation to the provided range.
             </summary>
             <remarks>
             Due to its implementation, this method can handle numeric values beyond the minimum/maximum values imposed by the language and/or system architecture.
             <para/>NOTE: Assumes that the passed objects are all numeric in nature.
             <para/>NOTE: This should match the logic present within rfDataValidation.js.*'s rfLargeNumberComparison.
             <para/>Numeric (Adj.); of or relating to or denoting numbers.
             </remarks>
             <param name="oValue">Object representing the numeric value to compare. <para/>NOTE: This value is converted into its string equivalent before the comparison.</param>
             <param name="oRange">Object representing the numeric value to use as a comparison. <para/>NOTE: This value is converted into its string equivalent before the comparison.</param>
             <returns>Integer signaling the position of the passed <paramref>oValue</paramref> in relation to the passed <paramref>oRange</paramref>.<para/>Returns -1 if <paramref>oValue</paramref> is less then <paramref>oRange</paramref>, 1 if <paramref>oValue</paramref> is greater then <paramref>oRange</paramref>, and 0 if the passed values are equal, or if one of the passed values was non-numeric.</returns>
            ###############################################################
             <LastUpdated>January 8, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.NumericPrecision(System.Object)">
            ###############################################################
             <summary>
             Determines the count of significant digits within the provided number. 
             </summary>
             <remarks>
             The count of significant digits is returned, meaning leading zeros are ignored while trailing zeros are counted.
             <para/>Due to its implementation, this method can handle numbers beyond the minimum/maximum values imposed by the language and/or system architecture.
             <para/>NOTE: Assumes that the passed objects are all numeric in nature.
             <para/>NOTE: This should match the logic present within rfDataValidation.js.*'s rfNumericPrecision.
             </remarks>
             <param name="oValue">Object representing the value to query. <para/>NOTE: This value is converted into its string equivalent before the test.</param>
             <returns>1-based integer representing the count of significant digits within the passed <paramref>oValue</paramref>.</returns>
            ###############################################################
             <LastUpdated>September 16, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.ToMultiArray(System.Data.DataTable)">
            ############################################################
             <summary>
             Converts the provided set of results into a MultiArray.
             </summary>
             <param name="oResults">"Set of results" containing the data to convert.</param>
             <returns>MultiArray containing the passed <paramref>oResults</paramref>.</returns>
            ############################################################
             <LastUpdated>December 5, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.ToColumnArray(System.Data.DataTable,System.String)">
            ############################################################
             <summary>
             Extracts a column from the provided set of results.
             </summary>
             <param name="oResults">"Set of results" containing the data to extract.</param>
             <param name="sColumnName">String representing the column name to locate.</param>
             <returns>String array where each element represents a row's <paramref>sColumnName</paramref> value.</returns>
            ############################################################
             <LastUpdated>December 5, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.Tools.ToColumnArray(System.Data.DataTable,System.Int32)">
            ############################################################
             <summary>
             Extracts a column from the provided set of results.
             </summary>
             <param name="oResults">"Set of results" containing the data to extract.</param>
             <param name="iColumnIndex">0-based integer representing the desired column index.</param>
             <returns>String array where each element represents a row's <paramref>iColumnIndex</paramref> value.</returns>
            ############################################################
             <LastUpdated>December 5, 2005</LastUpdated>
        </member>
        <member name="T:Cn.Web.Inputs.InputData">
            ########################################################################################################################
             <summary>
             Represents an Input's related metadata.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>November 26, 2009</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Inputs.InputData.#ctor(System.String,System.String,System.String,Cn.Web.Inputs.enumSaveTypes,Cn.Data.MetaData.enumValueTypes,Cn.Web.Inputs.AdditionalData)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <param name="sTableName">String representing the column's source table name.</param>
             <param name="sColumnName">String representing the column name.</param>
             <param name="eSaveType">Enumeration representing the HTML input's form processing requirements.</param>
             <param name="eValueType">Enumerated value representing the column's stored value type.</param>
             <param name="oAdditionalData">AdditionalData representing the additionally definable properties of the input.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eSaveType</paramref> is set as <c>cnInsertNull</c> while also defind as not IsNullable.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref name="oAdditionalData.AttachedToDataSource"/> is true and the <paramref>sTableName</paramref>/<paramref>sColumnName</paramref> pair does not exist.</exception>
             <seealso cref="M:Cn.Web.Inputs.InputData.Reset(System.String,System.String,System.String,Cn.Web.Inputs.enumSaveTypes,Cn.Data.MetaData.enumValueTypes,Cn.Web.Inputs.AdditionalData)"/>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputData.Reset(System.String,System.String,System.String,Cn.Web.Inputs.enumSaveTypes,Cn.Data.MetaData.enumValueTypes,Cn.Web.Inputs.AdditionalData)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <param name="sTableName">String representing the column's source table name.</param>
             <param name="sColumnName">String representing the column name.</param>
             <param name="eSaveType">Enumeration representing the HTML input's form processing requirements.</param>
             <param name="eValueType">Enumerated value representing the column's stored value type.</param>
             <param name="oAdditionalData">AdditionalDat representing the additionally definable properties of the input.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eSaveType</paramref> is set as <c>cnInsertNull</c> while also defind as not IsNullable.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref name="oAdditionalData.AttachedToDataSource"/> is true and the <paramref>sTableName</paramref>/<paramref>sColumnName</paramref> pair does not exist.</exception>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputData.#ctor(System.String)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eSaveType</paramref> is set as <c>cnInsertNull</c> while also defind as not IsNullable.</exception>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputData.Reset(System.String)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eSaveType</paramref> is set as <c>cnInsertNull</c> while also defind as not IsNullable.</exception>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputData.#ctor(System.String,Cn.Web.Inputs.enumSaveTypes,Cn.Data.MetaData.enumDataTypes,Cn.Data.MetaData.enumValueTypes,System.String,System.Boolean,System.Int32,System.String,System.String,System.Int32,System.Int32,Cn.Web.Inputs.AdditionalData)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <param name="eSaveType">Enumeration representing the HTML input's form processing requirements.</param>
             <param name="eDataType">Enumerated value representing the column's datatype.</param>
             <param name="eValueType">Enumerated value representing the column's stored value type.</param>
             <param name="sDefaultValue">String representing the column's default value.</param>
             <param name="bIsNullable">Boolean value indicating if the column is permitted to hold a null value.</param>
             <param name="iMaximumCharacterLength">Integer representing the column's maximum character length.</param>
             <param name="sMinimumNumericValue">String representing the column's minimum numeric value.</param>
             <param name="sMaximumNumericValue">String representing the column's maximum numeric value.</param>
             <param name="iNumericPrecision">Integer representing the column's numeric precision.</param>
             <param name="iNumericScale">Integer representing the column's numeric scale.</param>
             <param name="oAdditionalData">AdditionalData representing the additionally definable properties of the input.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eSaveType</paramref> is set as <c>cnInsertNull</c> while also defind as not <paramref name="bIsNullable"/>.</exception>
             <seealso cref="M:Cn.Web.Inputs.InputData.Reset(System.String,System.String,System.String,Cn.Web.Inputs.enumSaveTypes,Cn.Data.MetaData.enumValueTypes,Cn.Web.Inputs.AdditionalData)"/>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputData.Reset(System.String,Cn.Web.Inputs.enumSaveTypes,Cn.Data.MetaData.enumDataTypes,Cn.Data.MetaData.enumValueTypes,System.String,System.Boolean,System.Int32,System.String,System.String,System.Int32,System.Int32,Cn.Web.Inputs.AdditionalData)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <param name="eSaveType">Enumeration representing the HTML input's form processing requirements.</param>
             <param name="eDataType">Enumerated value representing the column's datatype.</param>
             <param name="eValueType">Enumerated value representing the column's stored value type.</param>
             <param name="sDefaultValue">String representing the column's default value.</param>
             <param name="bIsNullable">Boolean value indicating if the column is permitted to hold a null value.</param>
             <param name="iMaximumCharacterLength">Integer representing the column's maximum character length.</param>
             <param name="sMinimumNumericValue">String representing the column's minimum numeric value.</param>
             <param name="sMaximumNumericValue">String representing the column's maximum numeric value.</param>
             <param name="iNumericPrecision">Integer representing the column's numeric precision.</param>
             <param name="iNumericScale">Integer representing the column's numeric scale.</param>
             <param name="oAdditionalData">AdditionalData representing the additionally definable properties of the input.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eSaveType</paramref> is set as <c>cnInsertNull</c> while also defind as not <paramref name="bIsNullable"/>.</exception>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputData.#ctor(Cn.Web.Inputs.InputData)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oInputData">Object representing the InputData instance to deeply copy into this instance.</param>
             <seealso cref="M:Cn.Web.Inputs.InputData.Reset(System.String,System.String,System.String,Cn.Web.Inputs.enumSaveTypes,Cn.Data.MetaData.enumValueTypes,Cn.Web.Inputs.AdditionalData)"/>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputData.Reset(Cn.Web.Inputs.InputData)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="oInputData">Object representing the InputData instance to deeply copy into this instance.</param>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputData.DoReset(System.String,System.String,System.String,Cn.Web.Inputs.enumSaveTypes,Cn.Data.MetaData.enumDataTypes,Cn.Data.MetaData.enumValueTypes,System.String,System.Boolean,System.Int32,System.String,System.String,System.Int32,System.Int32,Cn.Web.Inputs.AdditionalData,System.Boolean)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <param name="sTableName">String representing the column's source table name.</param>
             <param name="sColumnName">String representing the column name.</param>
             <param name="eSaveType">Enumeration representing the HTML input's form processing requirements.</param>
             <param name="eDataType">Enumerated value representing the column's datatype.</param>
             <param name="eValueType">Enumerated value representing the column's stored value type.</param>
             <param name="sDefaultValue">String representing the column's default value.</param>
             <param name="bIsNullable">Boolean value indicating if the column is permitted to hold a null value.</param>
             <param name="iMaximumCharacterLength">Integer representing the column's maximum character length.</param>
             <param name="sMinimumNumericValue">String representing the column's minimum numeric value.</param>
             <param name="sMaximumNumericValue">String representing the column's maximum numeric value.</param>
             <param name="iNumericPrecision">Integer representing the column's numeric precision.</param>
             <param name="iNumericScale">Integer representing the column's numeric scale.</param>
             <param name="oAdditionalData">AdditionalData representing the additionally definable properties of the input.</param>
             <param name="bAttachedToDataSource">Boolean value indicating whether the input represents a field from a <c>MetaData</c>-described datasource.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eSaveType</paramref> is set as <c>cnInsertNull</c> while also defind as not <paramref name="bIsNullable"/>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref name="bAttachedToDataSource"/> is true and the <paramref>sTableName</paramref>/<paramref>sColumnName</paramref> pair does not exist.</exception>
            ############################################################
             <LastUpdated>July 15, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputData.Errors(System.Int32)">
            ############################################################
             <summary>
             Retrieves the logged error information for the referenced record number.
             </summary>
             <param name="iRecordNumber">Integer representing the referenced record number.</param>
             <returns>Object representing the logged error information for the referenced record number.</returns>
            ############################################################
             <LastUpdated>April 1, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputData.ValidationJavaScript(System.String)">
            ############################################################
             <summary>
             Returns the snipit of JavaScript code to validate the input. 
             </summary>
             <remarks>
             This function allows the developer to easily implement their own custom version of <c>RenderValidationJS</c>.
             </remarks>
             <param name="sFormID">String representing the HTML input's parent Form ID.</param>
             <returns>String representing a snipit of JavaScript code to validate the input.</returns>
            ############################################################
             <LastUpdated>December 3, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputData.FormatErrorMessage(System.String,System.String)">
            ############################################################
             <summary>
             Renders the error message associated with the <c>Form</c> input if an error is defined.
             </summary>
             <remarks>
             This function will render the error message associated with the <c>Form</c> input if an error has been defined. If no errors have been defined for the <c>Form</c> input, this function will return a null-string. This functionality allows you to avoid having to test each input for errors, and if an input has an error write out its <see cref="P:Cn.Web.Inputs.InputData.ErrorMessage"/>. Simply call this function for all of your inputs if you have choosen not to use the popup style messages, and only those with errors will be rendered to the screen. The use of <paramref>sMessageHead</paramref> and <paramref>sMessageTail</paramref> allow you to further customize these error messages.
             </remarks>
             <param name="sMessageHead">String representing the data to precede the error message.</param>
             <param name="sMessageTail">String representing the data to follow the error message.</param>
             <returns>String representing the error message associated with the <c>Form</c> input surrounded by the passed <paramref name="sMessageHead"/> and <paramref name="sMessageTail"/>. A null-string is returned if the <c>Form</c> input is not in error.</returns>
            ############################################################
             <LastUpdated>January 4, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputData.GetPicklistName(System.String,System.String,Cn.Data.MetaData.enumValueTypes,Cn.Web.Inputs.AdditionalData)">
            ############################################################
             <summary>
             Sets the PicklistName for set for picklist-based inputs.
             </summary>
             <remarks>
             NOTE: This function modifies the <paramref name="oAdditionalData"/> if the <c>cnRelatedPicklist</c> functionality is being utilized.
             </remarks>
             <param name="sTableName">String representing the column's source table name.</param>
             <param name="sColumnName">String representing the column name.</param>
             <param name="eValueType">Enumerated value representing the column's stored value type.</param>
             <param name="oAdditionalData">AdditionalData representing the additionally definable properties of the input.</param>
            ############################################################
             <LastUpdated>November 26, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputData.ValidateSaveTypeIsNullable(System.String,System.Boolean,Cn.Web.Inputs.enumSaveTypes)">
            ############################################################
             <summary>
             Determines if the passed IsNullable and SaveType agree (as some combonations are mutually exclusive)
             </summary>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="bIsNullable">Boolean value indicating if the column is permitted to hold a null value.</param>
             <param name="eSaveType">Enumeration representing the HTML input's form processing requirements.</param>
             <returns>Boolean value indicating is the passed variables are in agreement.</returns>
            ############################################################
             <LastUpdated>November 26, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputData.GetEndUserMessagesLanguageCode">
            ############################################################
             <summary>
             Safely retrieves the End User Messages Language Code.
             </summary>
             <returns>String representing the End User Messages Language Code.</returns>
            ############################################################
             <LastUpdated>December 11, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputData.HaveARelatedForm">
            ############################################################
             <summary>
             Determines if there is a Renderer.Form object that is assoicated with our Parent.
             </summary>
             <returns>Boolean value indicating if there is a Renderer.Form object that is assoicated with our Parent.</returns>
            ############################################################
             <LastUpdated>December 11, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.Parent">
            ############################################################
             <summary>
             Gets/sets the parent <c>InputCollection</c> class related to this instance (if any).
             </summary>
             <value>InputCollection object that represents the instance's related <c>InputCollection</c> class (if any).</value>
            ############################################################
             <LastUpdated>January 4, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.Values">
            ############################################################
             <summary>
             Gets/sets the collection of values for the input represented by this instance.
             </summary>
             <remarks>
             NOTE: <c>Input</c>s defined as <c>cnBoolean</c>s always return values based on <see cref="M:Cn.Data.Tools.MakeBooleanInteger(System.Object,System.Boolean)">MakeBooleanInteger</see>, where zero equates to false and non-zero equates to true.
             </remarks>
             <value>String array where each element represents a single value of the collection of values for the input represented by this instance.</value>
            ############################################################
             <LastUpdated>May 4, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.Value">
            ############################################################
             <summary>
             Gets/sets the value(s) of the input represented by this instance.
             </summary>
             <remarks>
             NOTE: If the input has multiple values, they will be returned as a <c>Cn.Tools.MultiValueString</c> for a <c>Get</c> call, and will be reset to the single provided string value for a <c>Set</c> call.
             </remarks>
             <value>String representing the value(s) of the input represented by this instance (serialized as a MultiValueString is multiple values exist).</value>
            ############################################################
             <LastUpdated>April 14, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.ErrorMessage">
            ############################################################
             <summary>
             Gets/sets the current error message for the input represented by this instance.
             </summary>
             <remarks>
             NOTE: You must set the <c>Errors</c> to <c>cnCustom</c> before you set the custom <c>ErrorMessage</c>.
             </remarks>
             <value>String representing the current error message for the input represented by this instance.</value>
            ############################################################
             <LastUpdated>March 18, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.DefaultValue">
            ############################################################
             <summary>
             Gets/sets a value representing the input's default value.
             </summary>
             <returns>String representing the input's default value.</returns>
            ############################################################
             <LastUpdated>November 12, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.MinimumNumericValue">
            ############################################################
             <summary>
             Gets/sets a value representing the input's minimum numeric value.
             </summary>
             <returns>String representing the input's minimum numeric value.</returns>
            ############################################################
             <LastUpdated>November 12, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.MaximumNumericValue">
            ############################################################
             <summary>
             Gets/sets a value representing the input's maximum numeric value.
             </summary>
             <returns>String representing the input's maximum numeric value.</returns>
            ############################################################
             <LastUpdated>November 12, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.MaximumCharacterLength">
            ############################################################
             <summary>
             Gets/sets a value representing the input's maximum character length.
             </summary>
             <returns>Integer representing the input's maximum character length.</returns>
            ############################################################
             <LastUpdated>November 12, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.NumericPrecision">
            ############################################################
             <summary>
             Gets/sets a value representing the input's numeric precision.
             </summary>
             <returns>Integer representing the input's numeric precision.</returns>
            ############################################################
             <LastUpdated>November 12, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.NumericScale">
            ############################################################
             <summary>
             Gets/sets a value representing the input's numeric scale.
             </summary>
             <returns>Integer representing the input's numeric scale.</returns>
            ############################################################
             <LastUpdated>November 12, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.SaveType">
            ############################################################
             <summary>
             Gets/sets a value representing the input's form processing requirements.
             </summary>
             <returns>Enumeration representing the input's form processing requirements.</returns>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eSaveType</paramref> is set as <c>cnInsertNull</c> on a <paramref>sColumnName</paramref> also defind as not nullable.</exception>
            ############################################################
             <LastUpdated>November 26, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.DataType">
            ############################################################
             <summary>
             Gets/sets a value representing the input's data type.
             </summary>
             <returns>Enumeration representing the input's data type.</returns>
            ############################################################
             <LastUpdated>November 12, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.ValueType">
            ############################################################
             <summary>
             Gets/sets a value representing the input's stored value type.
             </summary>
             <returns>Enumeration representing the input's stored value type.</returns>
            ############################################################
             <LastUpdated>November 26, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.ErrorType">
            ############################################################
             <summary>
             Gets/sets the current error message enumeration for the input represented by this instance.
             </summary>
             <remarks>
             NOTE: You must set the <c>Errors</c> to <c>cnCustom</c> before you set a custom <c>ErrorMessage</c> here.
             </remarks>
             <value>Enumeration that represents the current error message for the input represented by this instance.</value>
            ############################################################
             <LastUpdated>March 18, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.ValueIsFromForm">
            ############################################################
             <summary>
             Gets/sets a value indicating whether the value(s) of the input represented by this instance are from the user-submitted form.
             </summary>
             <remarks>
             NOTE: This property is initially loaded with a value representing if the value(s) were submitted by the user. If <c>Renderer</c> is currently processing the <c>Form</c>, this value is set to true if the <c>Value</c> is not equal to the <c>DefaultValue</c>. Otherwise this value is set to false.
             </remarks>
             <returns>Boolean value indicating whether the value(s) of the input represented by this instance are from the user-submitted form.</returns>
            ############################################################
             <LastUpdated>June 29, 2005</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.IsNullable">
            ############################################################
             <summary>
             Gets/sets a value indicating if the column permits null values.
             </summary>
             <returns>Boolean value indicating if the column permits null values.</returns>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eSaveType</paramref> is set as <c>cnInsertNull</c> on a <paramref>sColumnName</paramref> also defind as not nullable.</exception>
            ############################################################
             <LastUpdated>November 26, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.AdditionalData">
            ############################################################
             <summary>
             Gets a value representing the additionally defined properties of the input represented by this instance (see <c>Renderer.Form.Add</c>).
             </summary>
             <remarks>
             NOTE: This value is returned by reference, so the values can be modified.
             <para/>NOTE: Since the values are modifiable, the developer could reset the Picklist_Name to an unreconized name or a null-string, but we cannot do anything here so it has to be handeled by the control renderer.
             </remarks>
             <returns>AdditionalData that represents the additionally defined properties of the input represented by this instance (see <c>Renderer.Form.Add</c>).</returns>
            ############################################################
             <LastUpdated>November 14, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.ErroredRecordNumbers">
            ############################################################
             <summary>
             Gets a value representing the source record numbers with errors registered against them.
             </summary>
             <returns>Array of Integers representing the source record numbers with errors registered against them.</returns>
            ############################################################
             <LastUpdated>March 19, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.InputAlias">
            ############################################################
             <summary>
             Gets a value representing the HTML input's base name.
             </summary>
             <returns>String representing the HTML input's unique base name.</returns>
            ############################################################
             <LastUpdated>June 29, 2004</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.TableName">
            ############################################################
             <summary>
             Gets a value representing the input's source table name.
             </summary>
             <returns>String representing the input's source table name.</returns>
            ############################################################
             <LastUpdated>June 29, 2004</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.ColumnName">
            ############################################################
             <summary>
             Gets a value representing the input's source column name.
             </summary>
             <returns>String representing the input's source column name.</returns>
            ############################################################
             <LastUpdated>June 29, 2004</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.SourceRecordNumber">
            ############################################################
             <summary>
             Gets a 1-based value representing the source record's number.
             </summary>
             <returns>1-based integer representing the source record's number.</returns>
            ############################################################
             <LastUpdated>December 11, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.IsAttachedToDataSource">
            ############################################################
             <summary>
             Gets a value indicating whether the input represents a field from a <c>MetaData</c>-described datasource.
             </summary>
             <returns>Boolean value indicating whether the input represents a field from a <c>MetaData</c>-described datasource.</returns>
            ############################################################
             <LastUpdated>November 12, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.ErrorsRegistered">
            ############################################################
             <summary>
             Gets a value representing if any of the source record numbers associated with this input have errors registered against them.
             </summary>
             <returns>Boolean value representing if any of the source record numbers associated with this input have errors registered against them.</returns>
            ############################################################
             <LastUpdated>March 19, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.IsMultiValue">
            ############################################################
             <summary>
             Gets a value indicating if this instance is a multi-value input.
             </summary>
             <returns>Boolean value if this instance is a multi-value input.</returns>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.InputData.IsValid">
            ############################################################
             <summary>
             Gets a value indicating if this input is valid.
             </summary>
             <returns>Boolean value indicating if this input is valid.</returns>
            ############################################################
             <LastUpdated>March 26, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.Inputs.ErrorInfo">
            ########################################################################################################################
             <summary>
             Represents the error data for a specific Input record number.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview></LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Inputs.ErrorInfo.#ctor(Cn.Data.MetaData.enumValueErrorTypes,System.String)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="eType">Enumeration representing the current error message enumeration for the input represented by this instance</param>
             <param name="sMessage">String representing the current error message for the input represented by this instance.</param>
            ############################################################
             <LastUpdated>April 1, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.ErrorInfo.Message">
            <summary>Gets the current error message for the input represented by this instance.</summary>
        </member>
        <member name="P:Cn.Web.Inputs.ErrorInfo.Type">
            <summary>Gets the current error message enumeration for the input represented by this instance.</summary>
        </member>
        <member name="T:Cn.Web.Inputs.AdditionalData">
            ########################################################################################################################
             <summary>
             Represents the additional data for an Input.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview></LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Inputs.AdditionalData.#ctor">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
            ############################################################
             <LastUpdated>September 26, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.AdditionalData.Reset">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
            ############################################################
             <LastUpdated>September 26, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.AdditionalData.Data">
            ############################################################
             <summary>
             Gets the Hashtable that represents this instance's underlying data.
             </summary>
             <value>Hashtable that represents this instance's underlying data.</value>
            ############################################################
             <LastUpdated>December 11, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.AdditionalData.Item(System.String)">
            ############################################################
             <summary>
             Gets/sets the value for the referenced key.
             </summary>
             <param name="sKey">String representing the key for the key/value pair to get/set.</param>
             <value>String representing the value for the referenced key.</value>
            ############################################################
             <LastUpdated>April 9, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.AdditionalData.Picklist_Name">
            ############################################################
             <summary>
             Gets/sets the name of the input's associated picklist.
             </summary>
             <remarks>
             A value is required for inputs with a <paramref>eSaveType</paramref> of <c>cnSingleValuePicklistExType</c> and/or <c>cnMultiValuePicklistExType</c> and not defined as <c>Picklist_IsAdHoc</c>.
             <para/>If a <c>Picklist_Name</c> is not defined and this is a datasource attached input, the <c>Picklists.ColumnAssociationsPicklistName</c> is queried for the passed <paramref>sTableName</paramref>/<paramref>sColumnName</paramref> pair.
             <para/>There is no default value for this key.
             </remarks>
             <value>String representing the name of the input's associated picklist.</value>
            ############################################################
             <LastUpdated>November 26, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.AdditionalData.Picklist_IsAdHoc">
            ############################################################
             <summary>
             Gets/sets a value that specifies if the picklist associated with the input will be defined at runtime by the developer.
             </summary>
             <remarks>
             This value is revelent for inputs with a <paramref>eSaveType</paramref> of <c>cnSingleValuePicklistExType</c> and/or <c>cnMultiValuePicklistExType</c>.
             <para/>The default value for this key is 'false'.
             </remarks>
             <value>Boolean value representing if the picklist associated with the input will be defined at runtime by the developer.</value>
            ############################################################
             <LastUpdated>November 26, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.AdditionalData.Picklist_AddLeadingBlankOption">
            ############################################################
             <summary>
             Gets/sets a value that specifies if the input is rendered by <see cref="!:InputCollection.Get">Get</see> with an <c>eInputType</c> of <c>cnSelect</c>, <c>cnComboBox</c>, or <c>cnMultiSelect</c> should include a leading blank option.
             </summary>
             <remarks>
             This value is revelent for inputs with a <paramref>eSaveType</paramref> of <c>cnSingleValuePicklistExType</c> and/or <c>cnMultiValuePicklistExType</c>.
             <para/>The default value for this key is 'false'.
             </remarks>
             <value>Boolean value representing if the input is rendered by <see cref="!:InputCollection.Get">Get</see> with an <c>eInputType</c> of <c>cnSelect</c>, <c>cnComboBox</c>, or <c>cnMultiSelect</c> should include a leading blank option.</value>
            ############################################################
             <LastUpdated>November 26, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.AdditionalData.ReadOnly_InputAttributes">
            ############################################################
             <summary>
             Gets/sets the HTML attribute code that will be included within the related HIDDEN element.
             </summary>
             <remarks>
             This value is revelent for <c>cnReadOnlyType</c> inputs.
             <para/>The default value for this key is '' (a null-string).
             </remarks>
             <value>String representing the HTML attribute code that will be included within the related HIDDEN element.</value>
            ############################################################
             <LastUpdated>November 26, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Inputs.AdditionalData.ComboBox_SelectAttributes">
            ############################################################
             <summary>
             Gets/sets the HTML attribute code that will be included within the related SELECT element.
             </summary>
             <remarks>
             This value is revelent for <c>cnComboBoxType</c> inputs.
             <para/>The default value for this key is '' (a null-string).
             </remarks>
             <value>String representing the HTML attribute code that will be included within the related SELECT element.</value>
            ############################################################
             <LastUpdated>November 26, 2009</LastUpdated>
        </member>
        <member name="T:Cn.Web.Settings">
            ########################################################################################################################
             <summary>
             Global static web settings for the Cn.Web namespace.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>June 5, 2007</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Settings.Value(Cn.Web.Settings.enumSettingValues)">
            ############################################################
             <summary>
             Retrieves the requested Renderer configuration value.
             </summary>
             <param name="eSetting">Enumeration representing the required setting value.</param>
             <returns>String representing the requested configuration value.</returns>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eSetting</paramref> is unreconized.</exception>
            ############################################################
             <LastUpdated>June 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Settings.EndUserMessagesLanguageCode(Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Safely retrieves the defined End User Messages Language Code.
             </summary>
             <remarks>
             There are two Language Codes maintained within the Cn.Web namespace:
             <para/>    1) The Developer's Language Code, which is stored within the global static Cn.Web.Settings.Internationalization instance.
             <para/>    2) The End User Messages Language Code, which is stored within Cn.Web.Settings.Current instances. This value defaults to the Developer's Language Code.
             <para/>This method safely collects the defined End User Messages Language Code from the passed Cn.Web.Settings.Current instance. If the passed Cn.Web.Settings.Current instance is null, then the Language Code is sourced from the Developer's Language Code.
             </remarks>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <returns>String representing the defined End User Messages Language Code.</returns>
            ############################################################
             <LastUpdated>August 8, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Settings.GetData(Cn.Data.DBMS,System.Boolean,System.Boolean,System.Boolean,System.Boolean,Cn.Data.enumDataSource,System.String)">
            ############################################################
             <summary>
             Populates the global variables holding the <c>Cn.Web</c> settings.
             </summary>
             <remarks>
             NOTE: This function relies on the default table names for the system settings ("cnInternationalization", "cnRendererConfiguration", "cnHolidayCalculations", and "cnPicklists"). If you have chosen to rename your system configuration tables, you will need to utilize this function's sibling implementation.
             <para/>NOTE: This function assumes that the Default Internationalization table name is "cnInternationalization".
             </remarks>
             <param name="oDBMS"><c>DBMS</c> instance representing an active connection to the related data source.</param>
             <param name="bInternationalizationDefaultData">Boolean value representing if the Default Internationalization global variable is to be updated.</param>
             <param name="bInternationalization">Boolean value representing if the <paramref>sSystemName</paramref>'s Internationalization global variable is to be updated.</param>
             <param name="bPicklists">Boolean value representing if the persistent Picklists's (named after the <paramref>sSystemName</paramref>) global variable is to be updated.</param>
             <param name="bMetaData">Boolean value representing if the <paramref>sSystemName</paramref>'s DataSource MetaData global variable is to be updated.</param>
             <param name="eDataSource">Enumeration representing the source the <paramref>oDataSourceMetaData</paramref> was generated from.</param>
             <param name="sDataSourceContainerName">String representing the name of the data source's container.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eDataSource</paramref> is unsupported or unreconized.</exception>
            ############################################################
             <LastUpdated>May 28, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Settings.GetData(Cn.Data.DBMS,System.String,System.String,System.String,System.String,Cn.Data.enumDataSource)">
            ############################################################
             <summary>
             Populates the global variables holding the <c>Cn.Web</c> settings.
             </summary>
             <param name="oDBMS"><c>DBMS</c> instance representing an active connection to the related data source.</param>
             <param name="sInternationalizationDefaultDataTableName">String representing the name of the Default Internationalization table.</param>
             <param name="sInternationalizationTableName">String representing the name of the <paramref>sSystemName</paramref>'s Internationalization table.</param>
             <param name="sPicklistsTableName">String representing the name of the Picklists table.</param>
             <param name="sMetaDataTableName">String representing the name of the <paramref>sSystemName</paramref>'s DataSource MetaData view/table.</param>
             <param name="eDataSource">Enumeration representing the source the <paramref>oDataSourceMetaData</paramref> was generated from.</param>
            ############################################################
             <LastUpdated>May 29, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Settings.GenerateSQLStatements(System.String,System.String,System.String,Cn.Collections.MultiArray.enumStatementTypes)">
            ############################################################
             <summary>
             Converts the data stored within the global variables holding the <c>Cn.Web</c> settings into SQL statement(s).
             </summary>
             <param name="sInternationalizationDefaultDataTableName">String representing the name of the Default Internationalization table.</param>
             <param name="sInternationalizationTableName">String representing the name of the <paramref>sSystemName</paramref>'s Internationalization table.</param>
             <param name="sPicklistsTableName">String representing the name of the Picklists table.</param>
             <param name="eStatementType">Enumeration representing the desired SQL statement type.</param>
             <returns>String representing SQL INSERT statements for the data within the global variables holding the <c>Cn.Web</c> settings.</returns>
            ############################################################
             <LastUpdated>January 4, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Settings.Internationalization">
            ############################################################
             <summary>
             Gets/sets the Cn.Web namespaces globally defined static Internationalization object.
             </summary>
             <value></value>
            ############################################################
             <LastUpdated>May 9, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Settings.Picklists">
            ############################################################
             <summary>
             Gets/sets the Cn.Web namespaces globally defined static Picklists object.
             </summary>
             <value></value>
            ############################################################
             <LastUpdated>May 9, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Settings.MetaData">
            ############################################################
             <summary>
             Gets/sets the Cn.Web namespaces globally defined static Data.MetaData object.
             </summary>
             <value></value>
            ############################################################
             <LastUpdated>May 10, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Settings.DefaultBreadcrumbTrailType">
            ############################################################
             <summary>
             Gets the default view stack type.
             </summary>
             <value>Enumeration indicating the view stack instance's type.</value>
            ############################################################
             <LastUpdated>August 22, 2005</LastUpdated>
        </member>
        <member name="T:Cn.Web.Settings.enumSettingValues">
            <summary>Renderer Configuration table values.</summary>
        </member>
        <member name="F:Cn.Web.Settings.enumSettingValues.cnUIDirectory">
            <summary>Defined base user interface directory.</summary>
        </member>
        <member name="F:Cn.Web.Settings.enumSettingValues.cnUIDirectoryURL">
            <summary>Defined base user interface directory, including protocol (aka scheme), host and optional port designation.</summary>
            <remarks>     NOTE: This differs from <c>Cn.Web.Tools.CurrentURL</c> because this returns the URL with the <c>cnUIDirectory</c> appended onto it, rather then the current URL.</remarks>
        </member>
        <member name="F:Cn.Web.Settings.enumSettingValues.cnCSSClass_PopUpErrorDIV">
            <summary>Defined CSS class name for the Renderer Form client-side error reporting popup DIVs.</summary>
        </member>
        <member name="F:Cn.Web.Settings.enumSettingValues.cnCSSClass_FormInputError">
            <summary>Defined CSS class name for the Renderer Form client-side error reporting errored inputs.</summary>
        </member>
        <member name="F:Cn.Web.Settings.enumSettingValues.cnDOMElementPrefix">
            <summary>Defined Renderer HTML form/querystring element prefix.<para/>This functionality is provided so that form/querystring naming collisions can be avoided.</summary>
        </member>
        <member name="F:Cn.Web.Settings.enumSettingValues.cnHTMLPageBreak">
            <summary>Defined HTML/CSS printable page break.</summary>
        </member>
        <member name="T:Cn.Web.Settings.Current">
            ########################################################################################################################
             <summary>
             Instance-specific web settings for the Cn.Web namespace.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>June 5, 2007</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Settings.Current.#ctor">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <seealso cref="M:Cn.Web.Settings.Current.Reset"/>
            ############################################################
             <LastUpdated>June 5, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Settings.Current.#ctor(Cn.Web.Breadcrumb)">
            ############################################################
             <summary>
             Initializes the class based on the provided column names.
             </summary>
             <param name="oBreadcrumb">Breadcrumb object related to this instance.</param>
            ############################################################
             <LastUpdated>November 6, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Settings.Current.Reset">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
            ############################################################
             <LastUpdated>November 9, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Settings.Current.Reset(Cn.Web.Breadcrumb)">
            ############################################################
             <summary>
             Resets the class to its initilized state based on the provided data.
             </summary>
             <param name="oBreadcrumb">Breadcrumb object related to this instance.</param>
            ############################################################
             <LastUpdated>November 9, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Settings.Current.Response">
            ############################################################
             <summary>
             Gets/sets the <c>HttpResponse</c> object related to this instance.
             </summary>
             <remarks>
             This value defaults to <c>HttpContext.Current.Response</c>.
             </remarks>
             <value><c>HttpResponse</c> object that represents this instance's <c>Response</c> object.</value>
            ############################################################
             <LastUpdated>June 5, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Settings.Current.Request">
            ############################################################
             <summary>
             Gets/sets the <c>HttpRequest</c> object related to this instance.
             </summary>
             <remarks>
             This value defaults to <c>HttpContext.Current.Request</c>.
             </remarks>
             <value><c>HttpRequest</c> object that represents this instance's <c>Request</c> object.</value>
            ############################################################
             <LastUpdated>June 5, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Settings.Current.Breadcrumb">
            ############################################################
             <summary>
             Gets/sets the <c>Breadcrumb</c> trail related to this instance.
             </summary>
             <remarks>
             This value defaults to a null reference.
             </remarks>
             <value>Breadcrumb object that represents this instance's Breadcrumb trail.</value>
            ############################################################
             <LastUpdated>June 5, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Settings.Current.EndUserMessagesLanguageCode">
            ############################################################
             <summary>
             Gets/sets the end user language code used by this instance.
             </summary>
             <remarks>
             This value defaults to an unreconized language code (a null-string, which in turn get's transformed into a valid language code as described below).
             <para/>If an unreconized language code is passed, the default language code (as defined within this instance's Internationalization data, or failing that within the local constant) is used.
             <para/>
             <para/>This value is utilized by <c>Cn.Web.Renderer.Form</c> as it's own <c>EndUserMessagesLanguageCode</c> property and is therefore applied globally as the end user language code.
             </remarks>
             <value>String representing the end user language code used by this instance.</value>
            ############################################################
             <LastUpdated>June 5, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Settings.Current.GeneratedJavaScriptFileReferences">
            ############################################################
             <summary>
             Gets/sets a value indicating which JavaScript file references have been rendered.
             </summary>
             <remarks>
             This value defaults to 0.
             <para/>
             <para/>This value is utilized internally by <c>Cn.Web.JavaScript</c> and should not be otherwise modifed.
             </remarks>
             <value>Bitwise integer value indicating which JavaScript file references have been rendered.</value>
            ############################################################
             <LastUpdated>June 5, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Settings.Current.StrictPicklistDecodes">
            ############################################################
             <summary>
             Gets/sets a boolean value indicating if <c>Picklists.Decodes</c> utilize strict decodes.
             </summary>
             <remarks>
             This is utilized within <c>Cn.Web.Inputs</c> when rendering <c>IsReadOnly</c> inputs. This value defaults to the <c>Cn.Web.Settings.Picklists</c> currently set <c>StrictDecodes</c>, or false.
             <para/>This logic is doubly defined here because of the way Picklist data is provided to Inputs.Builder, which is via a MultiArray containing the related Picklist and not via a native Picklist object (which includes it's definition for StrictDecodes). This approach allows the developer to provide ad-hoc picklists at run-time, which also need the ability to allow for StrictDecodes.
             <para/>
             <para/>When "strict decodes" is enabled, only values present within the referenced picklist are returned from <c>Decode</c> calls.
             <para/>In "strict decodes" mode: If the passed value to decode is not within the referenced picklist, a null-string is returned.
             <para/>In non-"strict decodes" mode: If the passed value to decode is not within the referenced picklist, the passed value is returned.
             </remarks>
             <value>Boolean value signaling if <c>Picklists.Decodes</c> utilize strict decodes by default.<para/>Returns true if this instance utilizes strict decodes by default, or false if it does not.</value>
            ############################################################
             <LastUpdated>June 5, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Settings.Current.IsReadOnly">
            ############################################################
             <summary>
             Gets/sets a value indicating if we are in read only mode.
             </summary>
             <remarks>
             This value defaults to false.
             </remarks>
             <value>Boolean value indicating if we are in read only mode.</value>
            ############################################################
             <LastUpdated>June 5, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Settings.Current.Debug">
            ############################################################
             <summary>
             Gets/sets a value indicating if we are in debug mode.
             </summary>
             <remarks>
             This value defaults to false.
             </remarks>
             <value>Boolean value indicating if we are in debug mode.</value>
            ############################################################
             <LastUpdated>June 5, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Settings.Current.CRLF">
            ############################################################
             <summary>
             Gets the carrage return/line feed character(s) utilized by this instance.
             </summary>
             <value>String representing the carrage return/line feed character(s) utilized by this instance.</value>
            ############################################################
             <LastUpdated>June 5, 2007</LastUpdated>
        </member>
        <member name="T:Cn.Web.Renderer.TableForm">
            ########################################################################################################################
             <summary>
             <c>TableForm</c> abstract class.
             </summary>
             <remarks>
             This class represents an example of an extended <c>Renderer.Form</c>. This class demonstrates how you could implement your own abstract <c>Renderer</c> classes to accomplish system specific tasks with a minimum of code and a maximum of reuse.
             </remarks>
            ########################################################################################################################
             <LastFullCodeReview></LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Renderer.TableForm.#ctor(Cn.Web.Settings.Current,System.String,System.String)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <param name="sTableName">String representing the required table name.</param>
             <param name="sIDColumn">String representing the name of the primary key column (this column will not be included in the generated SQL statements).<para/>NOTE: Pass in a null-string if there is no ID column.</param>
            ############################################################
             <LastUpdated>May 30, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.TableForm.#ctor(Cn.Web.Settings.Current,Cn.Collections.MultiArray,System.String)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <param name="oTable">MultiArray representing the table metadata to render.<para/>NOTE: Column definitions can be from more then one table.</param>
             <param name="sIDColumn">String representing the name of the primary key column (this column will not be included in the generated SQL statements).<para/>NOTE: Pass in a null-string if there is no ID column.</param>
            ############################################################
             <LastUpdated>May 30, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.TableForm.Initilize(Cn.Collections.MultiArray,System.String)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oTable">MultiArray representing the table metadata to render.<para/>NOTE: Column definitions can be from more then one table.</param>
             <param name="sIDColumn">String representing the name of the primary key column (this column will not be included in the generated SQL statements).<para/>NOTE: Pass in a null-string if there is no ID column.</param>
            ############################################################
             <LastUpdated>December 11, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.TableForm.RedirectURL(System.Boolean)">
            ############################################################
             <summary>
             Gets a value representing the URL to redirect to on a successful form submission.
             </summary>
             <param name="bErrorsOccured">Boolean value indicating if any errors occured on the form.</param>
             <value>String representing the URL to redirect to on a successful form submission.</value>
            ############################################################
             <LastUpdated>May 30, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.TableForm.DetailHeader">
            ############################################################
             <summary>
             Outputs the detail header section of the rendered page.
             </summary>
             <remarks>
             Optionally overload this function to define your own page section.
             <para/>If the page has results, this function is called after <c>Header</c> and before any records are rendered via the <c>Detail</c> and/or <c>MissingRecord</c> functions. This function is not called if there are no records to render.
             <para/>If a printable <c>Renderer.Report</c> is being rendered, this function is called after each <c>Report.PageHeader</c>.
             </remarks>
            ############################################################
             <LastUpdated>December 3, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.TableForm.Detail">
            ############################################################
             <summary>
             Outputs a detail section of the rendered page.
             </summary>
             <remarks>
             Optionally overload this function to define your own page section.
             <para/>This function is called once per successfully collected record. This function is not called if there are no successfully collected records to render.
             </remarks>
            ############################################################
             <LastUpdated>August 21, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Renderer.TableForm.DetailFooter">
            ############################################################
             <summary>
             Outputs the detail footer section of the rendered page.
             </summary>
             <remarks>
             Optionally overload this function to define your own page section.
             <para/>If the page has results, this function is called after the last record is rendered via the <c>Detail</c> or <c>MissingRecord</c> function. This function is not called if there are no records to render.
             <para/>If a printable <c>Renderer.Report</c> is being rendered, this function is called before each <c>Report.PageFooter</c>.
             </remarks>
            ############################################################
             <LastUpdated>May 30, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Renderer.TableForm.Results">
            ############################################################
             <summary>
             Gets/sets the "set of results" utilized by this instance.
             </summary>
             <value>DataSet representing the "set of results" utilized by this instance.</value>
            ############################################################
             <LastUpdated>May 30, 2007</LastUpdated>
        </member>
        <member name="T:Cn.Configuration.Internationalization">
            ########################################################################################################################
             <summary>
             Internationalization functionality.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>May 10, 2007</LastFullCodeReview>
        </member>
        <member name="M:Cn.Configuration.Internationalization.#ctor(Cn.Collections.MultiArray)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oInternationalizationData">MultiArray representing the entire, self-referencing Internationalization picklists structure.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oInternationalizationData</paramref> is null or contains no <c>Rows</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oInternationalizationData</paramref> does not contain the required column names as defined by <c>Picklists.GetColumnNames</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oInternationalizationData</paramref> contains one or more <c>Rows</c> with a non-numeric value in 'PicklistID'.</exception>
            ############################################################
             <LastUpdated>May 22, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Configuration.Internationalization.Reset(Cn.Collections.MultiArray)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="oInternationalizationData">MultiArray representing the entire, self-referencing Internationalization picklists structure.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oInternationalizationData</paramref> is null or contains no <c>Rows</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oInternationalizationData</paramref> does not contain the required column names as defined by <c>Picklists.GetColumnNames</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oInternationalizationData</paramref> contains one or more <c>Rows</c> with a non-numeric value in 'PicklistID'.</exception>
            ############################################################
             <LastUpdated>May 22, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Configuration.Internationalization.DoReset(Cn.Collections.MultiArray)">
            ############################################################
             <summary>
             Resets the class to its initilized state, loading the provided Internationalization picklist data into this instance.
             </summary>
             <param name="oInternationalizationData">MultiArray representing the entire, self-referencing Internationalization picklists structure.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oInternationalizationData</paramref> is null or contains no <c>Rows</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oInternationalizationData</paramref> does not contain the required column names as defined by <c>Picklists.GetColumnNames</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oInternationalizationData</paramref> contains one or more <c>Rows</c> with a non-numeric value in 'PicklistID'.</exception>
             <seealso cref="T:Cn.Data.Picklists"/>
            ############################################################
             <LastUpdated>January 19, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Configuration.Internationalization.Values(Cn.Configuration.Internationalization.enumInternationalizationPicklists)">
            ############################################################
             <summary>
             Retrieves the requested Internationalization picklist.
             </summary>
             <param name="ePicklist">Enumeration representing the required Internationalization picklist.</param>
             <returns>MultiArray containing all the entries for the passed <paramref>ePicklist</paramref> defined within this instance, or null if it was not defined.</returns>
            ############################################################
             <LastUpdated>May 10, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Configuration.Internationalization.Values(Cn.Configuration.Internationalization.enumInternationalizationPicklists,System.String)">
            ############################################################
             <summary>
             Retrieves the requested Internationalization picklist using the referenced language code.
             </summary>
             <param name="ePicklist">Enumeration representing the required Internationalization picklist.</param>
             <param name="sLanguageCode">String representing the ISO639 2-letter language code to use when collecting the value.</param>
             <returns>MultiArray containing all the entries for the passed <paramref>ePicklist</paramref> defined within this instance, or null if it was not defined.</returns>
            ############################################################
             <LastUpdated>May 29, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Configuration.Internationalization.Value(Cn.Configuration.Internationalization.enumInternationalizationValues)">
            ############################################################
             <summary>
             Retrieves the requested Internationalization value.
             </summary>
             <param name="eValue">Enumeration representing the required Internationalization value.</param>
             <returns>String representing the requested Internationalization value.</returns>
            ############################################################
             <LastUpdated>May 10, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Configuration.Internationalization.Value(Cn.Configuration.Internationalization.enumInternationalizationValues,System.String)">
            ############################################################
             <summary>
             Retrieves the requested Internationalization value using the referenced language code.
             </summary>
             <param name="eValue">Enumeration representing the required Internationalization value.</param>
             <param name="sLanguageCode">String representing the ISO639 2-letter language code to use when collecting the value.</param>
             <returns>String representing the requested Internationalization value.</returns>
            ############################################################
             <LastUpdated>May 15, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Configuration.Internationalization.ValidateLanguageCode(System.String)">
            ############################################################
             <summary>
             Validates the provided ISO639 2-letter language code as being defined within this instance.
             </summary>
             <remarks>
             If an unreconized language code is passed, the default language code (as defined within this instance's Internationalization data, or failing that within the local constant) is used.
             </remarks>
             <param name="sLanguageCode">String representing the ISO639 2-letter language code.</param>
             <returns>String representing the validated ISO639 2-letter language code.</returns>
            ############################################################
             <LastUpdated>May 29, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Configuration.Internationalization.RaiseDefaultError(System.String,Cn.Configuration.Internationalization.enumInternationalizationValues,System.String,System.String)">
            ############################################################
             <summary>
             Raises a CnException-based error utilizing the default internationalization data.
             </summary>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="eErrorMessage">Enumeration representing the required error message value.</param>
             <param name="sExtraInfo1">String representing the value to replace any occurances of '$sExtraInfo1' with.</param>
             <param name="sExtraInfo2">String representing the value to replace any occurances of '$sExtraInfo2' with.</param>
             <exception cref="T:Cn.CnException">Thrown when called.</exception>
            ############################################################
             <LastUpdated>June 5, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Configuration.Internationalization.RaiseError(System.String,Cn.Configuration.Internationalization.enumInternationalizationValues,System.String,System.String)">
            ############################################################
             <summary>
             Raises a CnException-based error.
             </summary>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="eErrorMessage">Enumeration representing the required error message value.</param>
             <param name="sExtraInfo1">String representing the value to replace any occurances of '$sExtraInfo1' with.</param>
             <param name="sExtraInfo2">String representing the value to replace any occurances of '$sExtraInfo2' with.</param>
             <exception cref="T:Cn.CnException">Thrown when called.</exception>
            ############################################################
             <LastUpdated>June 5, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Configuration.Internationalization.ValueDecoder(Cn.Configuration.Internationalization.enumInternationalizationValues,System.String,System.String,System.String,System.Boolean)">
            ############################################################
             <summary>
             Decodes the referenced Internationalization value utilizing the provided extra information.
             </summary>
             <param name="eValue">Enumeration representing the required Internationalization value.</param>
             <param name="sExtraInfo1">String representing the value to replace any occurances of '$sExtraInfo1' with.</param>
             <param name="sExtraInfo2">String representing the value to replace any occurances of '$sExtraInfo2' with.</param>
             <param name="sLanguageCode">String representing the ISO639 2-letter language code.</param>
             <param name="bShowValueNumber">Boolean value indicating if the value number is to be shown at the end of the message.</param>
             <returns>String value containing the decoded <paramref>eValue</paramref> as defined within this instance.</returns>
            ############################################################
             <LastUpdated>December 24, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Configuration.Internationalization.DoValueDecoder(System.String,System.String,System.String,System.Boolean,System.Int32)">
            ############################################################
             <summary>
             Decodes the referenced Internationalization value utilizing the provided extra information.
             </summary>
             <param name="sValue">String representing the required Internationalization value.</param>
             <param name="sExtraInfo1">String representing the value to replace any occurances of '$sExtraInfo1' with.</param>
             <param name="sExtraInfo2">String representing the value to replace any occurances of '$sExtraInfo2' with.</param>
             <param name="bShowValueNumber">Boolean value indicating if the value number is to be shown at the end of the message.</param>
             <param name="iValueNumber">Integer value representing the value number of the required Internationalization value.</param>
             <returns>String value containing the decoded <paramref>sValue</paramref>.</returns>
            ############################################################
             <LastUpdated>May 16, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Configuration.Internationalization.LanguageCode">
            ############################################################
             <summary>
             Gets/sets the ISO639 2-letter language code used by this instance.
             </summary>
             <remarks>
             If an unreconized language code is passed, the default language code (as defined within this instance's Internationalization data, or failing that within the local constant) is used.
             </remarks>
             <value>String representing the ISO639 2-letter language code used by this instance.</value>
             <seealso cref="M:Cn.Configuration.Internationalization.ValidateLanguageCode(System.String)"/>
            ############################################################
             <LastUpdated>May 15, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Configuration.Internationalization.DefaultData">
            ############################################################
             <summary>
             Gets/sets the default Internationalization data used by all instances.
             </summary>
             <value>MultiArray representing the entire, self-referencing Internationalization picklists structure used by all instances.</value>
            ############################################################
             <LastUpdated>May 10, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Configuration.Internationalization.GetData">
            ############################################################
             <summary>
             Assists in the collection of the underlying structure which defines this instance.
             </summary>
             <value>CollectionHelper instance configured to collect the underlying structure which defines this instance.</value>
            ############################################################
             <LastUpdated>January 14, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Configuration.Internationalization.Data">
            ############################################################
             <summary>
             Gets a deep copy of the underlying Internationalization data used by this instance.
             </summary>
             <value>MultiArray representing a deep copy of the underlying Internationalization data used by this instance.</value>
            ############################################################
             <LastUpdated>May 10, 2007</LastUpdated>
        </member>
        <member name="T:Cn.Configuration.Internationalization.enumInternationalizationPicklists">
            <summary>Stored internationalization picklists.<para/>These are picklists used internally by the Cn namespace.</summary>
        </member>
        <member name="T:Cn.Configuration.Internationalization.enumInternationalizationValues">
            <summary>Stored internationalization values.<para/>These are constants and error messages used internally by the Cn namespace.</summary>
        </member>
        <member name="T:Cn.CnException">
            ########################################################################################################################
             <summary>
             Generic custom exception utilized by the Cn namespace.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>February 3, 2006</LastFullCodeReview>
        </member>
        <member name="M:Cn.CnException.#ctor(System.String,System.String,System.Int32)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
            ############################################################
             <LastUpdated>November 13, 2009</LastUpdated>
        </member>
        <member name="M:Cn.CnException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            ############################################################
             <summary>
             Initializes the class based on the provided SerializationInfo.
             </summary>
             <param name="info">Standard SerializationInfo object.</param>
             <param name="ctxt">Standard StreamingContext object.</param>
            ############################################################
             <LastUpdated>December 21, 2009</LastUpdated>
        </member>
        <member name="M:Cn.CnException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            ############################################################
             <summary>
             Stores the state of the class into the provided SerializationInfo.
             </summary>
             <param name="info">Standard SerializationInfo object.</param>
             <param name="ctxt">Standard StreamingContext object.</param>
            ############################################################
             <LastUpdated>November 13, 2009</LastUpdated>
        </member>
        <member name="M:Cn.CnException.ToString">
            ############################################################
             <summary>
             Converts this instance into its formatted string representation.
             </summary>
             <returns>String representing the formatted <c>Exception</c>.</returns>
            ############################################################
             <LastUpdated>February 3, 2006</LastUpdated>
        </member>
        <member name="M:Cn.CnException.IsGetASPXVersionError(System.Exception)">
            ###############################################################
             <summary>
             Determines if the referenced exception is a "\get_aspx_ver.aspx"-related error.
             </summary>
             <remarks>
             "\get_aspx_ver.aspx"-related errors can be ignored because we get them when this file is missing from our systems every time we startup Visual Studio.
             </remarks>
             <param name="oException">Object representing the exception to query.</param>
             <returns>Boolean value signaling if this is a "\get_aspx_ver.aspx"-related error.<para/>Returns true if it is a "\get_aspx_ver.aspx"-related error, and false if it is not.</returns>
            ###############################################################
             <LastUpdated>May 28, 2007</LastUpdated>
        </member>
        <member name="M:Cn.CnException.ReportError(System.Exception,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            ###############################################################
             <summary>
             Handles the provided exception, emailing the templated error report while showing the user the templated error page.
             </summary>
             <remarks>
             The following variables can be used within the referenced templates:
             <para/>* $SystemName - This variable will be replaced with the passed <paramref>sSystemName</paramref> within the referenced templates.
             <para/>* $ExceptionMessage - This variable will be replaced with the passed <paramref>oException</paramref>'s <c>Message</c> property value within the referenced templates.
             <para/>* $Exception - This variable will be replaced with the <see cref="M:Cn.CnException.ToString(System.Exception)">ExceptionToString</see> version of the passed <paramref>oException</paramref> within the referenced templates.
             <para/>* $CurrentURL - This variable will be replaced with the current URL (i.e. - not including the script name) within the referenced templates.
             </remarks>
             <param name="oException">Object representing the exception to handle.</param>
             <param name="sSystemName">String representing the system this instance is related to.</param>
             <param name="sPathToErrorPageTemplate">String representing the file path to the error page template.</param>
             <param name="sSMTPServer">String representing the SMTP Mail Server to utilize to send the email.</param>
             <param name="sToEMailAddress">String representing a semicolon-delimited list of recipient email addresses.</param>
             <param name="sPathToEMailTemplate">String representing the file path to the EMail template.</param>
             <param name="bBodyIsHTML">Boolean value indicating if the email's body is to be sent as HTML formatted.</param>
            ###############################################################
             <LastUpdated>June 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.CnException.ToString(System.Exception)">
            ###############################################################
             <summary>
             Converts the passed exception into its formatted string representation.
             </summary>
             <param name="oException">Exception you wish to convert into a formatted string.</param>
             <returns>String representing the formatted <paramref>oException</paramref>.</returns>
            ###############################################################
             <LastUpdated>February 3, 2006</LastUpdated>
        </member>
        <member name="M:Cn.CnException.ToString(System.Collections.Specialized.NameValueCollection)">
            ###############################################################
             <summary>
             Converts the passed collection into its formatted string representation.
             </summary>
             <param name="oCollection">NameValueCollection you wish to convert into a formatted string.</param>
             <returns>String representing the formatted <paramref>oCollection</paramref>.</returns>
            ###############################################################
             <LastUpdated>February 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.CnException.ToString(System.Web.HttpCookieCollection)">
            ###############################################################
             <summary>
             Converts the current HTTP context's Cookies into their formatted string representation.
             </summary>
             <returns>String representing the formatted <c>Cookies</c>.</returns>
            ###############################################################
             <LastUpdated>February 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.CnException.GetAssemblyInfo">
            ###############################################################
             <summary>
             Retrieves the running system's assembly information.
             </summary>
             <returns>Hashtable where each index represents a key/value pair of the running systems assembly information.</returns>
            ###############################################################
             <LastUpdated>March 5, 2007</LastUpdated>
        </member>
        <member name="P:Cn.CnException.StackTrace">
            ############################################################
             <summary>
             Gets a string representation of the frames on the call stack at the time the current exception was thrown.
             </summary>
             <value>String representing the stack trace.</value>
            ############################################################
             <LastUpdated>November 13, 2009</LastUpdated>
        </member>
        <member name="P:Cn.CnException.ErrorCode">
            ############################################################
             <summary>
             Gets the error code.
             </summary>
             <value>Integer representing the error code.</value>
            ############################################################
             <LastUpdated>June 5, 2007</LastUpdated>
        </member>
        <member name="T:Cn.Net.MakeHTTPRequest">
            ########################################################################################################################
             <summary>
             Abstraction layer for HttpWebResponse and WebRequest to facilitate HTTP Transactions.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>November 5, 2006</LastFullCodeReview>
        </member>
        <member name="M:Cn.Net.MakeHTTPRequest.Get(System.String)">
            ############################################################
             <summary>
             Retrieves an HTTP Transaction, containing only the configured HTTP Request.
             </summary>
             <param name="sURL">String representing the required URL.</param>
             <returns>HTTPTransaction object representing the defined HTTP Request.</returns>
            ############################################################
             <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Net.MakeHTTPRequest.Get(System.String,Cn.Net.MakeHTTPRequest.RequestConfiguration)">
            ############################################################
             <summary>
             Retrieves an HTTP Transaction, containing only the configured HTTP Request.
             </summary>
             <param name="sURL">String representing the required URL.</param>
             <param name="oConfiguration">RequestConfiguration object representing the required HTTP Request configuration settings.</param>
             <returns>HTTPTransaction object representing the defined HTTP Request.</returns>
            ############################################################
             <LastUpdated>September 11, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Net.MakeHTTPRequest.GetHeaders(System.String)">
            ############################################################
             <summary>
             Retrieves an HTTP Transaction, containing only the HTTP Header information retrieved as part of the HTTP Request/Response.
             </summary>
             <param name="sURL">String representing the required URL.</param>
             <returns>HTTPTransaction object representing the defined HTTP Request.</returns>
            ############################################################
             <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Net.MakeHTTPRequest.GetHeaders(System.String,Cn.Net.MakeHTTPRequest.RequestConfiguration)">
            ############################################################
             <summary>
             Retrieves an HTTP Transaction, containing only the HTTP Header information retrieved as part of the HTTP Request/Response.
             </summary>
             <param name="sURL">String representing the required URL.</param>
             <param name="oConfiguration">RequestConfiguration object representing the required HTTP Request configuration settings.</param>
             <returns>HTTPTransaction object representing the defined HTTP Request.</returns>
            ############################################################
             <LastUpdated>September 1, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Net.MakeHTTPRequest.GetFile(System.String)">
            ############################################################
             <summary>
             Retrieves an HTTP Transaction, including the file (message body) retrieved as part of the HTTP Request/Response.
             </summary>
             <param name="sURL">String representing the required URL.</param>
             <returns>HTTPTransaction object representing the defined HTTP Request.</returns>
            ############################################################
             <LastUpdated>May 28, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Net.MakeHTTPRequest.GetFile(System.String,Cn.Net.MakeHTTPRequest.RequestConfiguration)">
            ############################################################
             <summary>
             Retrieves an HTTP Transaction, including the file (message body) retrieved as part of the HTTP Request/Response.
             </summary>
             <param name="sURL">String representing the required URL.</param>
             <param name="oConfiguration">RequestConfiguration object representing the required HTTP Request configuration settings.</param>
             <returns>HTTPTransaction object representing the defined HTTP Request.</returns>
            ############################################################
             <LastUpdated>September 1, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Net.MakeHTTPRequest.Connect(System.String,Cn.Net.MakeHTTPRequest.RequestConfiguration,System.String)">
            ############################################################
             <summary>
             Retrieves an HTTP Transaction, including the HTTP Response.
             </summary>
             <param name="sURL">String representing the required URL.</param>
             <param name="oConfiguration">RequestConfiguration object representing the required HTTP Request configuration settings.</param>
             <param name="sRequestMethod">String representing the HTTP protocol method to utilize during the HTTP Request (GET, POST, HEAD, etc.).</param>
             <returns>HTTPTransaction object representing the defined HTTP Request.</returns>
            ############################################################
             <LastUpdated>September 1, 2007</LastUpdated>
        </member>
        <member name="T:Cn.Net.MakeHTTPRequest.RequestConfiguration">
            ########################################################################################################################
             <summary>
             Represents an HTTP Request's configuration.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>September 1, 2007</LastFullCodeReview>
        </member>
        <member name="M:Cn.Net.MakeHTTPRequest.RequestConfiguration.#ctor">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
            ############################################################
             <LastUpdated>September 9, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Net.MakeHTTPRequest.RequestConfiguration.Reset">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
            ############################################################
             <LastUpdated>September 9, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Net.MakeHTTPRequest.RequestConfiguration.Proxy">
            ############################################################
             <summary>
             Gets/sets a value representing the proxy configuration.
             </summary>
            ############################################################
             <LastUpdated>September 8, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Net.MakeHTTPRequest.RequestConfiguration.Username">
            ############################################################
             <summary>
             Gets/sets a value representing the Basic Authorization username.
             </summary>
            ############################################################
             <LastUpdated>September 8, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Net.MakeHTTPRequest.RequestConfiguration.Password">
            ############################################################
             <summary>
             Gets/sets a value representing the Basic Authorization password.
             </summary>
            ############################################################
             <LastUpdated>September 8, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Net.MakeHTTPRequest.RequestConfiguration.Timeout">
            ############################################################
             <summary>
             Gets/sets a value representing the request timeout (in milliseconds).
             </summary>
            ############################################################
             <LastUpdated>September 8, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Net.MakeHTTPRequest.RequestConfiguration.UseBasicAuthorization">
            ############################################################
             <summary>
             Gets/sets Boolean value representing if Basic Authorization is to be utilized.
             </summary>
            ############################################################
             <LastUpdated>September 8, 2007</LastUpdated>
        </member>
        <member name="T:Cn.Net.MakeHTTPRequest.HTTPTransaction">
            ########################################################################################################################
             <summary>
             Represents an entire HTTP transaction.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>September 1, 2007</LastFullCodeReview>
        </member>
        <member name="M:Cn.Net.MakeHTTPRequest.HTTPTransaction.#ctor">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
            ############################################################
             <LastUpdated>September 9, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Net.MakeHTTPRequest.HTTPTransaction.Reset">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
            ############################################################
             <LastUpdated>September 9, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Net.MakeHTTPRequest.HTTPTransaction.Finalize">
            ############################################################
             <summary>
             Class destructor.
             </summary>
            ############################################################
             <LastUpdated>September 1, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Net.MakeHTTPRequest.HTTPTransaction.Close">
            ############################################################
             <summary>
             Releases any open connections, handles, etc. held by the class.
             </summary>
            ############################################################
             <LastUpdated>September 1, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Net.MakeHTTPRequest.HTTPTransaction.Headers(Cn.Net.MakeHTTPRequest.HTTPTransaction.enumHttpObjectTypes)">
            ############################################################
             <summary>
             Retrieves the HTTP headers from the desired HTTP object.
             </summary>
             <param name="eHttpObject">Enumeration representing the desired HTTP object.</param>
             <returns>Hashtable of strings representing the HTTP headers of the requested HTTP object.</returns>
            ############################################################
             <LastUpdated>September 9, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Net.MakeHTTPRequest.HTTPTransaction.SaveResponseFile(System.String,System.Boolean)">
            ############################################################
             <summary>
             Saves the HTTP Response file to the specified path.
             </summary>
             <param name="sPath">String representing the path to the resulting file.</param>
             <param name="bOverwrite">Boolean value representing if any existing file is to be overwritten.</param>
             <returns>Boolean value representing if the file was successfully saved.</returns>
            ############################################################
             <LastUpdated>September 9, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Net.MakeHTTPRequest.HTTPTransaction.Request">
            ############################################################
             <summary>
             Gets/sets a value representing the HTTP Request.
             </summary>
            ############################################################
             <LastUpdated>September 1, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Net.MakeHTTPRequest.HTTPTransaction.Response">
            ############################################################
             <summary>
             Gets/sets a value representing the HTTP Response.
             </summary>
            ############################################################
             <LastUpdated>September 1, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Net.MakeHTTPRequest.HTTPTransaction.ResponseFile">
            ############################################################
             <summary>
             Gets/sets a value representing the file retrieved as part of the HTTP Response.
             </summary>
            ############################################################
             <LastUpdated>September 1, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Net.MakeHTTPRequest.HTTPTransaction.HTTPStatusCode">
            ############################################################
             <summary>
             Gets/sets a value representing the HTTP status code for the HTTP Response.
             </summary>
            ############################################################
             <LastUpdated>September 3, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Net.MakeHTTPRequest.HTTPTransaction.URL">
            ############################################################
             <summary>
             Gets/sets a value representing the URLfor the HTTP Request.
             </summary>
            ############################################################
             <LastUpdated>September 1, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Net.MakeHTTPRequest.HTTPTransaction.ResponseFileAsString">
            ############################################################
             <summary>
             Gets the HTTP Response file as a string.
             </summary>
             <value>String representing the file contents of the HTTP Response file.</value>
            ############################################################
             <LastUpdated>January 4, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Net.MakeHTTPRequest.HTTPTransaction.enumHttpObjectTypes">
            <summary>HTTP Object types</summary>
        </member>
        <member name="T:Cn.Web.Breadcrumb">
            ########################################################################################################################
             <summary>
             Manages a history of pages viewed.
             </summary>
             <remarks>
             This class keeps track of filename as well as querystring items Page, View, Mode, Index, OrderBy and ID in a developer-definable listing (stack) type.
             </remarks>
            ########################################################################################################################
             <LastFullCodeReview></LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Breadcrumb.#ctor">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <remarks>
             Breadcrumb Trail example: "TrailType|File:Page:View:Mode:Index:OrderBy:ID|...|File:Page:View:Mode:Index:OrderBy:ID" (LIFO Queue, current on right).
             </remarks>
             <exception cref="T:Cn.CnException">Thrown when a view entry does not have the correct number of data elements within the passed <paramref>sBreadcrumbTrail</paramref>.</exception>
            ############################################################
             <LastUpdated>November 9, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Breadcrumb.Reset">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <remarks>
             Breadcrumb Trail example: "TrailType|File:Page:View:Mode:Index:OrderBy:ID|...|File:Page:View:Mode:Index:OrderBy:ID" (LIFO Queue, current on right).
             </remarks>
             <exception cref="T:Cn.CnException">Thrown when a view entry does not have the correct number of data elements within the passed <paramref>sBreadcrumbTrail</paramref>.</exception>
            ############################################################
             <LastUpdated>November 9, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Breadcrumb.#ctor(System.String)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <remarks>
             Breadcrumb Trail example: "TrailType|File:Page:View:Mode:Index:OrderBy:ID|...|File:Page:View:Mode:Index:OrderBy:ID" (LIFO Queue, current on right).
             </remarks>
             <param name="sBreadcrumbTrail">String representing the related Breadcrumb Trail instance.</param>
             <exception cref="T:Cn.CnException">Thrown when a view entry does not have the correct number of data elements within the passed <paramref>sBreadcrumbTrail</paramref>.</exception>
            ############################################################
             <LastUpdated>November 9, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Breadcrumb.Reset(System.String)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <remarks>
             Breadcrumb Trail example: "TrailType|File:Page:View:Mode:Index:OrderBy:ID|...|File:Page:View:Mode:Index:OrderBy:ID" (LIFO Queue, current on right).
             </remarks>
             <param name="sBreadcrumbTrail">String representing the related Breadcrumb Trail instance.</param>
             <exception cref="T:Cn.CnException">Thrown when a view entry does not have the correct number of data elements within the passed <paramref>sBreadcrumbTrail</paramref>.</exception>
            ############################################################
             <LastUpdated>November 9, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Breadcrumb.DoReset(System.String,System.String)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <remarks>
             Breadcrumb Trail example: "TrailType|File:Page:View:Mode:Index:OrderBy:ID|...|File:Page:View:Mode:Index:OrderBy:ID" (LIFO Queue, current on right).
             </remarks>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="sBreadcrumbTrail">String representing the related Breadcrumb Trail instance.</param>
             <exception cref="T:Cn.CnException">Thrown when a view entry does not have the correct number of data elements within the passed <paramref>sBreadcrumbTrail</paramref>.</exception>
            ############################################################
             <LastUpdated>November 9, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Breadcrumb.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            ############################################################
             <summary>
             Initializes the class based on the provided SerializationInfo.
             </summary>
             <param name="info">Standard SerializationInfo object.</param>
             <param name="ctxt">Standard StreamingContext object.</param>
            ############################################################
             <LastUpdated>December 21, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Breadcrumb.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            ############################################################
             <summary>
             Stores the state of the class into the provided SerializationInfo.
             </summary>
             <param name="info">Standard SerializationInfo object.</param>
             <param name="ctxt">Standard StreamingContext object.</param>
            ############################################################
             <LastUpdated>December 21, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Breadcrumb.ToString">
            ############################################################
             <summary>
             Gets the Breadcrumb Trail for this instance.
             </summary>
             <value>String representing the Breadcrumb Trail based on the current context.</value>
            ############################################################
             <LastUpdated>December 21, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Breadcrumb.InitilizeTrail(Cn.Web.Breadcrumb.enumBreadcrumbTrailTypes,System.Web.HttpRequest)">
            ############################################################
             <summary>
             Builds an empty view stack conforming to the passed view stack type.
             </summary>
             <param name="eBreadcrumbTrailType">Enumeration representing the type of the provided view stack.</param>
             <param name="rRequest">Reference representing the HttpRequest object servicing the current request.</param>
             <value>String representing the current page's view stack conforming to the passed view stack type.</value>
            ############################################################
             <LastUpdated>November 10, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Breadcrumb.URL(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String)">
            ############################################################
             <summary>
             Builds a url containing the provided information.
             </summary>
             <param name="sFile">String representing the file value to use.</param>
             <param name="sPage">String representing the page value to use.</param>
             <param name="sView">String representing the view value to use.</param>
             <param name="sMode">String representing the mode value to use.</param>
             <param name="iIndex">1-based integer representing the starting record index to use.</param>
             <param name="sOrderBy">String representing the SQL order by clause to use.</param>
             <param name="sID">String representing the ID value to use.</param>
             <returns>String representing the Renderer querystring containing the provided information.</returns>
             <seealso cref="!:Cn.Web.Breadcrumb.GetURL"/>
            ############################################################
             <LastUpdated>May 15, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Breadcrumb.URL(System.Int32)">
            ############################################################
             <summary>
             Retrieves a Renderer querystring containing the information from the requested view stack index.
             </summary>
             <remarks>
             The passed <paramref>iIndex</paramref> can either be a positive or negetive integer. A positive (or 0) <paramref>iIndex</paramref> value will retrieve the index starting from the left of the provided <paramref>sBreadcrumbTrail</paramref>. A negetive <paramref>iIndex</paramref> value will retrieve the index starting from the right of the provided <paramref>sBreadcrumbTrail</paramref>.
             <para/>NOTE: If the provided <paramref>iIndex</paramref> is not within the bounds of the passed <paramref>sBreadcrumbTrail</paramref>, "?" is returned (which is the beginning of a querystring).
             </remarks>
             <param name="iIndex">0-based, negetive allowed index of the required view within the view stack.</param>
             <returns>String representing the Renderer querystring containing the information for the requested view stack index.</returns>
             <seealso cref="M:Cn.Web.Breadcrumb.URL(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String)"/>
            ############################################################
             <LastUpdated>September 1, 2004</LastUpdated>
        </member>
        <member name="M:Cn.Web.Breadcrumb.URL(System.Int32,System.String)">
            ############################################################
             <summary>
             Retrieves a Renderer querystring containing the information from the requested view stack index.
             </summary>
             <remarks>
             The passed <paramref>iIndex</paramref> can either be a positive or negetive integer. A positive (or 0) <paramref>iIndex</paramref> value will retrieve the index starting from the left of the provided <paramref>sBreadcrumbTrail</paramref>. A negetive <paramref>iIndex</paramref> value will retrieve the index starting from the right of the provided <paramref>sBreadcrumbTrail</paramref>.
             <para/>NOTE: If the provided <paramref>iIndex</paramref> is not within the bounds of the passed <paramref>sBreadcrumbTrail</paramref>, "?" is returned (which is the beginning of a querystring).
             </remarks>
             <param name="iIndex">0-based, negetive allowed index of the required view within the view stack.</param>
             <param name="sBreadcrumbTrail">String representing the related Breabcrumb Trail instance.</param>
             <returns>String representing the Renderer querystring containing the information for the requested view stack index.</returns>
             <exception cref="T:Cn.CnException">Thrown when a view entry does not have the correct number of data elements within the passed <paramref>sBreadcrumbTrail</paramref>.</exception>
             <seealso cref="M:Cn.Web.Breadcrumb.URL(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String)"/>
            ############################################################
             <LastUpdated>November 9, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Breadcrumb.URL">
            ############################################################
             <summary>
             Retrieves a Renderer querystring containing the information for the current file/page/view/mode.
             </summary>
             <returns>String representing the Renderer querystring containing the information for the current page/view/mode.</returns>
             <seealso cref="M:Cn.Web.Breadcrumb.URL(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String)"/>
            ############################################################
             <LastUpdated>September 1, 2004</LastUpdated>
        </member>
        <member name="M:Cn.Web.Breadcrumb.URL(System.String,System.String,System.String,System.String)">
            ############################################################
             <summary>
             Retrieves a Renderer querystring containing the information for the provided file/page/view/mode.
             </summary>
             <remarks>
             NOTE: If the provided page/view/mode is not found within the passed <paramref>sBreadcrumbTrail</paramref>, the default page/view/mode querystring is returned in its place.
             </remarks>
             <param name="sFile">String representing the file value to locate.</param>
             <param name="sPage">String representing the page value to locate.</param>
             <param name="sView">String representing the view value to locate.</param>
             <param name="sMode">String representing the mode value to locate.</param>
             <returns>String representing the Renderer querystring containing the information for the provided page/view/mode.</returns>
             <seealso cref="M:Cn.Web.Breadcrumb.URL(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String)"/>
            ############################################################
             <LastUpdated>September 1, 2004</LastUpdated>
        </member>
        <member name="M:Cn.Web.Breadcrumb.URL(System.String,System.String,System.String,System.String,System.String)">
            ############################################################
             <summary>
             Retrieves a Renderer querystring containing the information for the provided page/view/mode.
             </summary>
             <remarks>
             NOTE: If the provided page/view/mode is not found within the passed <paramref>sBreadcrumbTrail</paramref>, the default page/view/mode querystring is returned in its place.
             </remarks>
             <param name="sFile">String representing the file value to locate.</param>
             <param name="sPage">String representing the page value to locate.</param>
             <param name="sView">String representing the view value to locate.</param>
             <param name="sMode">String representing the mode value to locate.</param>
             <param name="sBreadcrumbTrail">String representing the related Breadcrumb Trail instance.</param>
             <returns>String representing the Renderer querystring containing the information for the provided page/view/mode.</returns>
             <exception cref="T:Cn.CnException">Thrown when a view entry does not have the correct number of data elements within the passed <paramref>sBreadcrumbTrail</paramref>.</exception>
             <seealso cref="M:Cn.Web.Breadcrumb.URL(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String)"/>
            ############################################################
             <LastUpdated>November 9, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Breadcrumb.URL(System.String)">
            ############################################################
             <summary>
             Retrieves a column's sortable querystring based on the current <c>OrderBy</c>, inverting the initial sort order as required.
             </summary>
             <remarks>
             This function compares the <paramref>sInitialColumnOrderBy</paramref> clause to the current, user defined <c>OrderBy</c> clause. If the user currently has the view sorted by the <paramref>sInitialColumnOrderBy</paramref> clause, the inverse clause is returned (i.e. - "LastName,FirstName" would become "LastName DESC,FirstName DESC"). Else if the user has the view sorted by other criteria, the provided <paramref>sInitialColumnOrderBy</paramref> is returned unchanged.
             </remarks>
             <param name="sInitialColumnOrderBy">String representing the initial column SQL order by clause.</param>
             <returns>String representing the revelent column's sortable querystring.</returns>
             <seealso cref="M:Cn.Web.Breadcrumb.GenerateSQLOrderBy(System.String)"/>
            ############################################################
             <LastUpdated>January 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Breadcrumb.GenerateSQLOrderBy(System.String)">
            ############################################################
             <summary>
             Retrieves a column's SQL order by clause based on the current <c>OrderBy</c>, inverting the initial sort order as required.
             </summary>
             <remarks>
             This function compares the <paramref>sInitialColumnOrderBy</paramref> clause to the current, user defined <c>OrderBy</c> clause. If the user currently has the view sorted by the <paramref>sInitialColumnOrderBy</paramref> clause, the inverse clause is returned (i.e. - "LastName,FirstName" would become "LastName DESC,FirstName DESC"). Else if the user has the view sorted by other criteria, the provided <paramref>sInitialColumnOrderBy</paramref> is returned unchanged.
             </remarks>
             <param name="sInitialColumnOrderBy">String representing the initial column SQL order by clause.</param>
             <returns>String representing the revelent column's SQL order by clause.</returns>
             <seealso cref="M:Cn.Web.Breadcrumb.URL(System.String)"/>
            ############################################################
             <LastUpdated>January 4, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Breadcrumb.ProcessTrail(System.String,System.String)">
            ############################################################
             <summary>
             Processes the provided view stack based on the current context.
             </summary>
             <remarks>
             Breadcrumb Trail example: "TrailType|Page:View:Mode:Index:OrderBy:ID|...|Page:View:Mode:Index:OrderBy:ID" (LIFO Queue, current on right).
             <para/>NOTE: This function modifies the Level as necessary.
             </remarks>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="sBreadcrumbTrail">String representing the related Breadcrumb Trail instance.</param>
             <returns>String representing the updated view stack based on the current context.</returns>
             <exception cref="T:Cn.CnException">Thrown when a view entry does not have the correct number of data elements within the passed <paramref>sBreadcrumbTrail</paramref>.</exception>
            ############################################################
             <LastUpdated>November 9, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Breadcrumb.TrailTypeToString(Cn.Web.Breadcrumb.enumBreadcrumbTrailTypes)">
            ############################################################
             <summary>
             Converts the provided view stack type enumeration into it's assoicated string equivlent.
             </summary>
             <param name="eBreadcrumbTrailType">Enumeration representing the type of view stack.</param>
            ############################################################
             <LastUpdated>November 12, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Breadcrumb.FindTrail">
            ############################################################
             <summary>
             Attempts to find the view stack using it's default name from the .Request and .Session objects
             </summary>
            ############################################################
             <LastUpdated>March 4, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Breadcrumb.SelfManagedTrail(System.String)">
            ############################################################
             <summary>
             Processes the view stack when it's type is set to "SelfManaged".
             </summary>
             <remarks>
             Optionally overload this function to process the view stack when it's type is set to "SelfManaged".
             </remarks>
             <param name="sBreadcrumbTrail">String representing the related Breadcrumb Trail instance that is currently being processed.</param>
            ############################################################
             <LastUpdated>November 9, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Breadcrumb.OrderBy">
            ############################################################
             <summary>
             Gets/sets the current SQL order by clause.
             </summary>
             <remarks>
             The <c>OrderBy</c> clause is set by default based on the following order of prescience:
             <para/>1) <c>OrderBy</c> equals the querystring's "OrderBy" field, as defined by the end-user (as long as it's safe).
             <para/>2) Failing 1, <c>OrderBy</c> equals this instance's ResultsStack's "OrderedBy" field, as defined by the end-user (as long as it's safe).
             <para/>3) Failing 1 and 2, <c>OrderBy</c> equals the <c>DefaultOrderBy</c>, as defined by the developer (as long as it's safe).
             <para/>4) Failing 1, 2 and 3, <c>OrderBy</c> equals a null-string.
             <para/><c>OrderBy</c> clause values set via the <c>OrderBy</c> property overwrite this default value.
             <para/>NOTE: The value of <c>OrderBy</c> is consumed when the <c>Render</c> function is called for a List, Form or Report. Because of this, this value should be modified previous to all <c>Render</c> calls if you are hoping to change the SQL order by clause.
             </remarks>
             <exception cref="T:Cn.CnException">Thrown when the provided <paramref>value</paramref> contains potentionally malicious SQL directives (as defined within Internationalization's "DisallowedUserStrings" and "DisallowedUserWords" picklists).</exception>
            ############################################################
             <LastUpdated>May 15, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Breadcrumb.File">
            ############################################################
             <summary>
             Gets/sets the current file.
             </summary>
             <remarks>
             All values set via this property are implicitly lowercased.
             </remarks>
             <value>String representing the current file.</value>
            ############################################################
             <LastUpdated>May 15, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Breadcrumb.Page">
            ############################################################
             <summary>
             Gets/sets the current page.
             </summary>
             <remarks>
             All values set via this property are implicitly lowercased.
             </remarks>
             <value>String representing the current page.</value>
            ############################################################
             <LastUpdated>May 15, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Breadcrumb.View">
            ############################################################
             <summary>
             Gets/sets the current view.
             </summary>
             <remarks>
             All values set via this property are implicitly lowercased.
             </remarks>
             <value>String representing the current view.</value>
            ############################################################
             <LastUpdated>May 15, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Breadcrumb.Mode">
            ############################################################
             <summary>
             Gets/sets the current mode.
             </summary>
             <remarks>
             All values set via this property are implicitly lowercased.
             </remarks>
             <value>String representing the current mode.</value>
            ############################################################
             <LastUpdated>May 15, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.Breadcrumb.ID">
            ############################################################
             <summary>
             Gets/sets the current ID.
             </summary>
             <value>String representing the current ID.</value>
             <exception cref="T:Cn.CnException">Thrown when the provided <paramref>value</paramref> contains potentionally malicious SQL directives (as defined within Internationalization's "DisallowedUserStrings" and "DisallowedUserWords" picklists).</exception>
            ############################################################
             <LastUpdated>June 8, 2006</LastUpdated>
        </member>
        <member name="P:Cn.Web.Breadcrumb.Index">
            ############################################################
             <summary>
             Gets/sets the current record index.
             </summary>
             <remarks>
             NOTE: The value of <c>Index</c> is consumed when the <c>Render</c> function is called for a List, Form or Report. Because of this, this value should be modified previous to all <c>Render</c> calls if you are hoping to change the current record index.
             </remarks>
             <value>1-based integer representing the current record index.</value>
             <exception cref="T:Cn.CnException">Thrown when the passed value is less then 0.</exception>
            ############################################################
             <LastUpdated>September 1, 2004</LastUpdated>
        </member>
        <member name="P:Cn.Web.Breadcrumb.Level">
            ############################################################
             <summary>
             Gets the realtive trail level.
             </summary>
             <remarks>
             The <c>Level</c> allows you to determine how the user is moving around site based on this instance's Breadcrumb Trail. Each <c>TrailType</c> behaves differently in relation to the <c>Level</c>, as detailed below.
             <para/><para/>For a <c>cnHieratical</c> Breadcrumb Trail, the following rules apply:
             <para/>If the <c>Level</c> is 0, then the end-user is moving horizontally within the same file/page/mode/view as they were viewing on the last page load (i.e. - they are paging thru a list of results).
             <para/>If the <c>Level</c> is 1, then the end-user is moving verticially downward (i.e. - they are "drilling down" into the results, such as viewing a "detail" page).
             <para/>If the <c>Level</c> is a negetive number, then the end-user is moving verticially upward (i.e. - they are utilizing a bread crumb trail to navigate back up thru the site structure).
             <para/><para/>For a <c>cnHistorical</c> Breadcrumb Trail, the following rules apply:
             <para/>If the <c>Level</c> is 1, then the file/page/view/mode is a new entry within the Breadcrumb Trail, so a new Breadcrumb Trail entry has been appended onto the trail.
             <para/>If the <c>Level</c> is -1, then the file/page/view/mode already existed within the Breadcrumb Trail, so the current entry has been updated.
             <para/><para/>For a <c>cnBreadCrumb</c> Breadcrumb Trail, the following rules apply:
             <para/>The <c>Level</c> is always 1, as we are always "moving down a level".
             <para/><para/>For a <c>cnSelfManaged</c> Breadcrumb Trail, the following rules apply:
             <para/>In the default implementation, the <c>Level</c> is always 1, as the Breadcrumb Trail is self managed and we therefore have no way of telling what is going on, end-user movement wise.
             </remarks>
             <value>Integer representing the realtive view level.</value>
            ############################################################
             <LastUpdated>December 21, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Breadcrumb.TrailType">
            ############################################################
             <summary>
             Gets a value indicating the view stack instance's type.
             </summary>
             <value>Enumeration indicating the view stack instance's type.</value>
            ############################################################
             <LastUpdated>December 21, 2009</LastUpdated>
        </member>
        <member name="T:Cn.Web.Breadcrumb.enumBreadcrumbTrailTypes">
            <summary>Breadcrumb trail types.</summary>
        </member>
        <member name="F:Cn.Web.Breadcrumb.enumBreadcrumbTrailTypes.cnHieratical">
            <summary>Views (file/page/view/mode quartet) are appended and removed as the end-user moves up and down a hieratical site structure. A previous view (and all the subsequent views) are removed only if an exact match is found.<para/>This trail functions as a LIFO (Last In First Out) queue, new views are added to the right of the trail.</summary>
        </member>
        <member name="F:Cn.Web.Breadcrumb.enumBreadcrumbTrailTypes.cnHistorical">
            <summary>Each view (file/page/view/mode quartet) is represented no more then once within the trail.<para/>This trail functions as a non-determinate queue, new views are added to the right of the trail and existing file/page/view/mode quartets are overwritten in place.</summary>
        </member>
        <member name="F:Cn.Web.Breadcrumb.enumBreadcrumbTrailTypes.cnBreadCrumb">
            <summary>Each view (file/page/view/mode quartet) is indiscriminately added onto the end of the trail.<para/>New views are added to the right of the trail.</summary>
        </member>
        <member name="F:Cn.Web.Breadcrumb.enumBreadcrumbTrailTypes.cnSelfManaged">
            <summary>View stack is managed externally by the developer.<para/>The provided trail is not modified.</summary>
        </member>
        <member name="T:Cn.Data.Management.Picklist">
            ########################################################################################################################
             <summary>
             Picklists Manager Form abstract class (extension of the <c>Renderer.Form</c> class).
             </summary>
             <remarks>
             This class represents an example of an overloaded <c>Renderer.Form</c> which renders data from a custom dataset object (a <c>Data.Picklists</c> in this case).
             <para/>NOTE: You are required to implement your own <c>SubmitResults</c> function to commit the data to your datasource. Below is an example implementation utilizing an SQL*Server datasource:
             <code>
            		public override void SubmitResults(string[] a_sSQL, bool bErrorsOccured) {
            		Cn.Data.Helper oDataSource;
                     string sSQL;
            
                         //#### Establish the connection to the oDataSource
                     oDataSource = new Cn.Data.Helper(Cn.Data.Helper.enumConnectionType.cnSQLServer, "YOUR_SERVER_DSN_GOES_HERE");
            
                         //#### Collect the form's full sSQL then commit the updates to the oDataSource
                     sSQL = this.SQL(a_sSQL);
                     oDataSource.ExecuteSQL(sSQL, false);
            
            			//#### Re-.GetData(the)Settings to refresh them from the above updated oDataSource, then .Close(the)Connection.
            		oDataSource.PopulateSettings(sSystemName, true, true, true, true, Cn.Data.enumDataSource.cnSQLServer, false, true);
                     oDataSource.CloseConnection();
            
                         //#### If no bErrorsOccured, .Redirect the user back to the form via the RedirectURL.
                     if (! bErrorsOccured) {
                         Response.Redirect(this.RedirectURL);
                     }
                 }
             </code>
             </remarks>
            ########################################################################################################################
             <LastFullCodeReview>August 18, 2004</LastFullCodeReview>
        </member>
        <member name="M:Cn.Data.Management.Picklist.#ctor(Cn.Web.Settings.Current,Cn.Data.enumDataSource)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <param name="eDbServer">Enumeration representing the target database server type.</param>
            ############################################################
             <LastUpdated>May 21, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.Management.Picklist.#ctor(Cn.Web.Settings.Current,Cn.Data.enumDataSource,System.String,System.String)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <param name="eDbServer">Enumeration representing the target database server type.</param>
             <param name="sUserPicklistsTableName">String representing the table name of the user picklists.</param>
             <param name="sInternationalizationTableName">String representing the table name of the internationalization picklists.</param>
            ############################################################
             <LastUpdated>May 21, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.Management.Picklist.Initilize(Cn.Data.enumDataSource,System.String,System.String)">
            ############################################################
             <summary>
             Private/defacto class constructor.
             </summary>
             <param name="eDbServer">Enumeration representing the target database server type.</param>
             <param name="sUserPicklistsTableName">String representing the table name of the user picklists.</param>
             <param name="sInternationalizationTableName">String representing the table name of the internationalization picklists.</param>
            ############################################################
             <LastUpdated>November 16, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.Management.Picklist.GenerateResults(Cn.Data.Pagination,System.Boolean)">
            ############################################################
             <summary>
             Collects/reorders the entire results set.
             </summary>
             <remarks>
             Since the Picklists manager does not allow the user to reorder the listing, the <paramref>bReorderExistingResults</paramref> is not utilized.
             </remarks>
             <param name="rResults">Pagination object representing entire result set's record IDs.</param>
             <param name="bReorderExistingResults">Boolean value indicating if the entire results set requires re-ordering.</param>
             <exception cref="T:Cn.CnException">Thrown when a metadata picklist is null.</exception>
             <seealso cref="!:Cn.Web.Renderer.Form.GenerateResults"/>
            ############################################################
             <LastUpdated>August 3, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.Management.Picklist.CollectPageResults(Cn.Data.Pagination)">
            ############################################################
             <summary>
             Collects the provided page results.
             </summary>
             <param name="rPageResults">Pagination object representing this page's relevant record IDs.</param>
             <seealso cref="!:Cn.Web.Renderer.Form.CollectPageResults"/>
            ############################################################
             <LastUpdated>August 3, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.Management.Picklist.Header">
            ############################################################
             <summary>
             Outputs the header section of the rendered page.
             </summary>
             <remarks>
             Note that the HTML form is opened within this function (and likewise closed within <c>Footer</c>). If this Form were ever included within a Report, its HTML form would be properly rendered (as DetailHeader can be called multiple times in a Report).
             </remarks>
             <seealso cref="!:Cn.Web.Renderer.Form.Header"/>
            ############################################################
             <LastUpdated>April 18, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.Management.Picklist.DetailHeader">
            ############################################################
             <summary>
             Outputs the detail header section of the rendered page.
             </summary>
             <remarks>
             Note that the input form specific HTML tableset is opened within this function (and likewise closed within <c>DetailFooter</c>). If this Form were ever included within a Report, these HTML tablesets would be properly rendered (as DetailHeader/DetailFooter can be called multiple times in a Report).
             </remarks>
             <seealso cref="!:Cn.Web.Renderer.Form.DetailHeader"/>
            ############################################################
             <LastUpdated>May 25, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.Management.Picklist.Detail">
            ############################################################
             <summary>
             Outputs the detail section of the rendered page.
             </summary>
             <remarks>
             Note the proper usage of the <c>cnErrorMessageToolTip</c> within this function.
             <para/>Note that this function is rendering data from a custom dataset object (a <c>Data.Picklists</c> in this case). As you can see, you can render data from any data source.
             <para/>Note that this function renders 3 different types of input records (<c>g_bIsMetaDataPicklist</c>, <c>g_bIsSystemPicklist</c> and a user picklist), essentially functioning as 3 input forms in one.
             </remarks>
             <seealso cref="!:Cn.Web.Renderer.Form.Detail"/>
            ############################################################
             <LastUpdated>November 6, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.Management.Picklist.DetailFooter">
            ############################################################
             <summary>
             Outputs the detail footer section of the rendered page.
             </summary>
             <remarks>
             Note that the input form specific HTML tableset is closed within this function (and likewise opened within <c>DetailHeader</c>). If this Form were ever included within a Report, these HTML tablesets would be properly rendered (as DetailHeader/DetailFooter can be called multiple times in a Report).
             </remarks>
             <seealso cref="!:Cn.Web.Renderer.Form.DetailFooter"/>
            ############################################################
             <LastUpdated>August 17, 2004</LastUpdated>
        </member>
        <member name="M:Cn.Data.Management.Picklist.NoResults">
            ############################################################
             <summary>
             Outputs the no results section of the rendered page.
             </summary>
             <seealso cref="!:Cn.Web.Renderer.Form.NoResults"/>
            ############################################################
             <LastUpdated>November 23, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.Management.Picklist.Footer">
            ############################################################
             <summary>
             Outputs the footer section of the rendered page.
             </summary>
             <remarks>
             Note that the HTML form is closed within this function (and likewise opened within <c>Header</c>). If this Form were ever included within a Report, its HTML form would be properly rendered (as DetailHeader can be called multiple times in a Report).
             </remarks>
             <seealso cref="!:Cn.Web.Renderer.Form.Footer"/>
            ############################################################
             <LastUpdated>November 15, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.Management.Picklist.ValidateRecord(System.Boolean,System.Boolean,System.Boolean)">
            ############################################################
             <summary>
             Validates the current record during form processing.
             </summary>
             <remarks>
             Note that this function builds its own SQL statements as a means to enforce the editable business rules of the 3 picklist types (<c>g_bIsMetaDataPicklist</c>, <c>g_bIsSystemPicklist</c> and a user picklist).
             </remarks>
             <param name="bRecordHasChanged">Boolean value indicating if the record was changed/updated by the end user.</param>
             <param name="bRecordIsValid">Boolean value indicating if the record successfully passed the simple validation (datatype, length, etc.).</param>
             <returns>RecordValidater object that represents the records validity, if SQL statements are to be generated and any developer generated SQL statements.</returns>
             <seealso cref="M:Cn.Web.Renderer.Form.ValidateRecord(System.Boolean,System.Boolean,System.Boolean)"/>
            ############################################################
             <LastUpdated>March 26, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Management.Picklist.GetSQL(System.String[])">
            ############################################################
             <summary>
             Retrieves the SQL for the entire picklist management form (including the picklist's own name and description).
             </summary>
             <param name="a_sSQL">String array where each index represents a developer provided or system generated SQL statement (i.e. - the argument you recieve within <c>SubmitResults</c>).</param>
             <returns>String representing the SQL for the entire picklist management form.</returns>
            ############################################################
             <LastUpdated>November 6, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Data.Management.Picklist.PrintHTMLHeaderFooter">
            ############################################################
             <summary>
             Gets/sets a value indicating if the default HTML header and footer is rendered.
             </summary>
             <value>Boolean value indicating if the default HTML header and footer is rendered.</value>
            ############################################################
             <LastUpdated>November 16, 2005</LastUpdated>
        </member>
        <member name="P:Cn.Data.Management.Picklist.PicklistName">
            ############################################################
             <summary>
             Gets a value representing the name of the currently loaded picklist.
             </summary>
             <value>String representing the name of the currently loaded picklist.</value>
            ############################################################
             <LastUpdated>August 3, 2005</LastUpdated>
        </member>
        <member name="P:Cn.Data.Management.Picklist.TableName">
            ############################################################
             <summary>
             Gets a value representing the name of the currently loaded table.
             </summary>
             <value>String representing the name of the currently loaded table.</value>
            ############################################################
             <LastUpdated>August 10, 2004</LastUpdated>
        </member>
        <member name="P:Cn.Data.Management.Picklist.DbServer">
            ############################################################
             <summary>
             Gets a value representing the target database server type.
             </summary>
             <value>Enumeration representing the target database server type.</value>
            ############################################################
             <LastUpdated>August 18, 2004</LastUpdated>
        </member>
        <member name="P:Cn.Data.Management.Picklist.RedirectURL">
            ############################################################
             <summary>
             Gets a value representing the URL to redirect to on a successful form submission.
             </summary>
             <value>String representing the URL to redirect to on a successful form submission.</value>
            ############################################################
             <LastUpdated>August 23, 2004</LastUpdated>
        </member>
        <member name="T:Cn.Net.Mail">
            ########################################################################################################################
             <summary>
             Sends email via the provided SMTP server details.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>November 17, 2009</LastFullCodeReview>
        </member>
        <member name="M:Cn.Net.Mail.Send(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            ###############################################################
             <summary>
             Sends an email.
             </summary>
             <param name="sSMTPServer">String representing the SMTP Mail Server to utilize to send the email.</param>
             <param name="sTo">String representing a semicolon-delimited list of recipient email addresses.</param>
             <param name="sFrom">String representing the sender's email address.</param>
             <param name="sSubject">String representing the email's subject.</param>
             <param name="sBody">String representing the email's body.</param>
             <param name="bBodyIsHTML">Boolean value indicating if the email's body is to be sent as HTML formatted.</param>
            ###############################################################
             <LastUpdated>May 3, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Net.Mail.Send(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            ###############################################################
             <summary>
             Sends an email.
             </summary>
             <param name="sSMTPServer">String representing the SMTP Mail Server to utilize to send the email.</param>
             <param name="sTo">String representing a semicolon-delimited list of recipient email addresses.</param>
             <param name="sFrom">String representing the sender's email address.</param>
             <param name="sSubject">String representing the email's subject.</param>
             <param name="sBody">String representing the email's body.</param>
             <param name="bBodyIsHTML">Boolean value indicating if the email's body is to be sent as HTML formatted.</param>
             <param name="sAttachmentPath">String representing the file path to the email's attachment.</param>
            ###############################################################
             <LastUpdated>May 3, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Net.Mail.Send(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String[],System.String,System.String)">
            ###############################################################
             <summary>
             Sends an email.
             </summary>
             <param name="sSMTPServer">String representing the SMTP Mail Server to utilize to send the email.</param>
             <param name="sTo">String representing a semicolon-delimited list of recipient email addresses.</param>
             <param name="sFrom">String representing the sender's email address.</param>
             <param name="sSubject">String representing the email's subject.</param>
             <param name="sBody">String representing the email's body.</param>
             <param name="bBodyIsHTML">Boolean value indicating if the email's body is to be sent as HTML formatted.</param>
             <param name="a_sAttachmentPaths">String array representing the file paths to the email's attachments.</param>
             <param name="sCC">String representing a semicolon-delimited list of email addresses to recieve a "carbon copy" (CC).</param>
             <param name="sBCC">String representing a semicolon-delimited list of email addresses to recieve a "blind carbon copy" (BCC).</param>
            ###############################################################
             <LastUpdated>November 17, 2009</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.Mirror">
            ########################################################################################################################
             <summary>
             Collection of static functions to map data between objects.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview></LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Controls.Mirror.Map(System.Data.DataTable,System.Collections.Generic.IList{Cn.Web.Controls.Input},System.Int32,System.Boolean)">
            ############################################################
             <summary>
             Maps data between the provided objects.
             </summary>
             <param name="oFrom">Object to be used as the data source.</param>
             <param name="oTo">Object to be used as the data destination.</param>
             <param name="iRowIndex">Integer representing the row index to use within the data source.</param>
             <param name="bStrict">Boolean value indicating if we are to ensure the table names match (case insensitive).</param>
             <returns>Boolean value representing if all of the readable properties within the provided <paramref name="oFrom"/> were successfully mapped into <paramref name="oTo"/>.</returns>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Mirror.Map(System.Collections.Generic.IList{Cn.Web.Controls.Input},System.Data.DataTable,System.Int32,System.Boolean)">
            ############################################################
             <summary>
             Maps data between the provided objects.
             </summary>
             <param name="oFrom">Object to be used as the data source.</param>
             <param name="oTo">Object to be used as the data destination.</param>
             <param name="iRowIndex">Integer representing the row index to use within the data source.</param>
             <param name="bStrict">Boolean value indicating if we are to ensure the table names match (case insensitive).</param>
             <returns>Boolean value representing if all of the readable properties within the provided <paramref name="oFrom"/> were successfully mapped into <paramref name="oTo"/>.</returns>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Mirror.DoMap(System.Data.DataTable,System.Collections.Generic.IList{Cn.Web.Controls.Input},System.Int32,System.Boolean,Cn.Web.Controls.Mirror.enumDirection)">
            ############################################################
             <summary>
             Maps data between the provided objects.
             </summary>
             <param name="oBusinessObject">Object to be used as a data source/destination.</param>
             <param name="l_oInputCollection">IInputCollection object to be used as a data source/destination.</param>
             <param name="iRowIndex">Integer representing the row index to use within the data source.</param>
             <param name="bStrict">Boolean value indicating if we are to ensure the table names match (case insensitive).</param>
             <returns>Boolean value representing if all of the readable properties within the provided oFrom object were successfully mapped into oTo object.</returns>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Mirror.Map(Cn.Collections.MultiArray,System.Collections.Generic.IList{Cn.Web.Controls.Input},System.Int32)">
            ############################################################
             <summary>
             Maps data between the provided objects.
             </summary>
             <param name="oFrom">Object to be used as the data source.</param>
             <param name="oTo">Object to be used as the data destination.</param>
             <param name="iRowIndex">Integer representing the row index to use within the data source.</param>
             <returns>Boolean value representing if all of the readable properties within the provided <paramref name="oFrom"/> were successfully mapped into <paramref name="oTo"/>.</returns>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Mirror.Map(System.Collections.Generic.IList{Cn.Web.Controls.Input},Cn.Collections.MultiArray,System.Int32)">
            ############################################################
             <summary>
             Maps data between the provided objects.
             </summary>
             <param name="oFrom">Object to be used as the data source.</param>
             <param name="oTo">Object to be used as the data destination.</param>
             <param name="iRowIndex">Integer representing the row index to use within the data source.</param>
             <returns>Boolean value representing if all of the readable properties within the provided <paramref name="oFrom"/> were successfully mapped into <paramref name="oTo"/>.</returns>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Mirror.DoMap(Cn.Collections.MultiArray,System.Collections.Generic.IList{Cn.Web.Controls.Input},System.Int32,Cn.Web.Controls.Mirror.enumDirection)">
            ############################################################
             <summary>
             Maps data between the provided objects.
             </summary>
             <param name="oBusinessObject">Object to be used as a data source/destination.</param>
             <param name="l_oInputCollection">IInputCollection object to be used as a data source/destination.</param>
             <param name="iRowIndex">Integer representing the row index to use within the data source.</param>
             <returns>Boolean value representing if all of the readable properties within the provided oFrom object were successfully mapped into oTo object.</returns>
            ############################################################
             <LastUpdated>February 15, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Configuration.Settings">
            ########################################################################################################################
             <summary>
             Common settings utilized throughout the Cn namespace.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>November 9, 2009</LastFullCodeReview>
        </member>
        <member name="M:Cn.Configuration.Settings.DelimiterEncoder(System.String)">
            ############################################################
             <summary>
             Encodes any common delimiters within the provided value to their %ASCII equivalents.
             </summary>
             <param name="sValue">String representing the value to encode.</param>
             <returns>String value containing the encoded <paramref>sValue</paramref>.</returns>
            ############################################################
             <LastUpdated>April 21, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Configuration.Settings.DelimiterDecoder(System.String)">
            ############################################################
             <summary>
             Decodes any common delimiters within the provided value from their %ASCII equivalents.
             </summary>
             <param name="sValue">String representing the value to decode.</param>
             <returns>String value containing the decoded <paramref>sValue</paramref>.</returns>
            ############################################################
             <LastUpdated>April 21, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Configuration.Settings.PrimaryDelimiter">
            ############################################################
             <summary>
             Gets the primary common delimiter.
             </summary>
             <value>String representing the primary common delimiter.</value>
            ############################################################
             <LastUpdated>November 9, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Configuration.Settings.SecondaryDelimiter">
            ############################################################
             <summary>
             Gets the secondary common delimiter.
             </summary>
             <value>String representing the secondary common delimiter.</value>
            ############################################################
             <LastUpdated>November 9, 2009</LastUpdated>
        </member>
        <member name="T:Cn.Web.CookieMonster">
            ########################################################################################################################
             <summary>
             Enables the persistent storage of key/value pairs in the end user's cookie collection.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>August 3, 2005</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.CookieMonster.#ctor(System.String)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="sName">String representing the base name of the cookie collection.</param>
            ############################################################
             <LastUpdated>July 12, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Web.CookieMonster.#ctor(System.String,System.Int32)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="sName">String representing the base name of the cookie collection.</param>
             <param name="iMaxLength">Integer representing the maximum character length of the data stored across the entire cookie collection.</param>
            ############################################################
             <LastUpdated>July 12, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Web.CookieMonster.Reset(System.String)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="sName">String representing the base name of the cookie collection.</param>
            ############################################################
             <LastUpdated>August 10, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Web.CookieMonster.Reset(System.String,System.Int32)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="sName">String representing the base name of the cookie collection.</param>
             <param name="iMaxLength">Integer representing the maximum character length of the stored data.</param>
            ############################################################
             <LastUpdated>August 12, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Web.CookieMonster.Value(System.String)">
            ############################################################
             <summary>
             Gets/sets the string value present at the referenced row/column (pseudo-parameterized property).
             </summary>
             <remarks>
             This is a pseudo-parameterized property implimentation. The overloaded pair of methods serve the same function as a parameterized property would.
             </remarks>
             <param name="sKey">String representing the desired key.</param>
             <returns>String representing the value of the passed <paramref>sKey</paramref>.</returns>
            ############################################################
             <LastUpdated>December 21, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Web.CookieMonster.Value(System.String,System.String)">
            ############################################################
             <summary>
             Gets/sets the string value present at the referenced row/column (pseudo-parameterized property).
             </summary>
             <remarks>
             This is a pseudo-parameterized property implimentation. The overloaded pair of methods serve the same function as a parameterized property would.
             </remarks>
             <param name="sKey">String representing the desired key.</param>
             <param name="sNewValue">String representing the new value for the referenced key.</param>
            ############################################################
             <LastUpdated>December 21, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Web.CookieMonster.ToString">
            ############################################################
             <summary>
             Converts the key/value pair data within this instance into its equivalent string representation.
             </summary>
             <returns>String representing the key/value pair data stored within the cookie collection.</returns>
            ############################################################
             <LastUpdated>September 9, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Web.CookieMonster.Place">
            ############################################################
             <summary>
             Places the key/value pair data (spaned across this instance's cookie collection) onto the user's system.
             </summary>
             <remarks>
             Each cookie represents a "crumb" of the key/value pair data that is no longer then the HTTP specification maximum of 4kb per cookie.
             </remarks>
             <exception cref="T:Cn.CnException">Thrown when the key/value pair data stored within this instance's cookie collection is longer then the specified <c>MaxLength</c>.</exception>
            ############################################################
             <LastUpdated>August 23, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Web.CookieMonster.Abandon">
            ############################################################
             <summary>
             Explicitly destroys this instance's cookie collection.
             </summary>
            ############################################################
             <LastUpdated>October 5, 2004</LastUpdated>
        </member>
        <member name="M:Cn.Web.CookieMonster.RemoveKey(System.String)">
            ############################################################
             <summary>
             Removes the referenced key/value pair from this instance.
             </summary>
             <param name="sKey">String representing the desired key.</param>
             <returns>Boolean value signaling if the removal was a success.<para/>Returns true if the passed <paramref>sKey</paramref> was removed, or false if it was not.</returns>
            ############################################################
             <LastUpdated>January 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.CookieMonster.Clear">
            ############################################################
             <summary>
             Removes all key/value pairs from this instance.
             </summary>
            ############################################################
             <LastUpdated>May 20, 2004</LastUpdated>
        </member>
        <member name="M:Cn.Web.CookieMonster.Parse">
            ############################################################
             <summary>
             Parses any previously set cookie "crumb" data into this instance.
             </summary>
            ############################################################
             <LastUpdated>January 10, 2006</LastUpdated>
        </member>
        <member name="M:Cn.Web.CookieMonster.UpdateCookieTimeouts(System.String,System.DateTime)">
            ############################################################
             <summary>
             Updates the this instance's cookie collection with the provided timeout.
             </summary>
             <param name="sName">String representing the base name of the cookie collection.</param>
             <param name="dTimeout">DateTime representing the desired timeout for the cookie collection.</param>
            ############################################################
             <LastUpdated>October 6, 2004</LastUpdated>
        </member>
        <member name="M:Cn.Web.CookieMonster.DropCurrentCookies(System.String)">
            ############################################################
             <summary>
             Explicitly destroys this instance's cookie collection, both logicially and physicially.
             </summary>
             <param name="sName">String representing the base name of the cookie collection.</param>
            ############################################################
             <LastUpdated>April 6, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Web.CookieMonster.CookieEncode(System.String)">
            ############################################################
             <summary>
             Encodes the provided data as a cookie safe string.
             </summary>
             <param name="sData">String representing the data to encode.</param>
             <returns>String representing the encoded <paramref>sData</paramref>.</returns>
            ############################################################
             <LastUpdated>April 7, 2005</LastUpdated>
        </member>
        <member name="P:Cn.Web.CookieMonster.UserID">
            ############################################################
             <summary>
             Gets/sets a value representing the end user's ID.
             </summary>
            ############################################################
             <LastUpdated>August 13, 2004</LastUpdated>
        </member>
        <member name="P:Cn.Web.CookieMonster.Name">
            ############################################################
             <summary>
             Gets/sets a value representing the base name of this instance's cookie collection.
             </summary>
            ############################################################
             <LastUpdated>May 20, 2004</LastUpdated>
        </member>
        <member name="P:Cn.Web.CookieMonster.Timeout">
            ############################################################
             <summary>
             Gets/sets a value representing the desired timeout for this instance's cookie collection.
             </summary>
            ############################################################
             <LastUpdated>October 5, 2004</LastUpdated>
        </member>
        <member name="P:Cn.Web.CookieMonster.Keys">
            ############################################################
             <summary>
             Gets a value representing the keys present within this instance.
             </summary>
            ############################################################
             <LastUpdated>August 7, 2004</LastUpdated>
        </member>
        <member name="P:Cn.Web.CookieMonster.KeyCount">
            ############################################################
             <summary>
             Get a value representing the 1-based count of key/value pairs within this instance.
             </summary>
            ############################################################
             <LastUpdated>January 4, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.CookieMonster.MaxLength">
            ############################################################
             <summary>
             Gets a value representing the maximum character length of the stored data.
             </summary>
            ############################################################
             <LastUpdated>July 12, 2005</LastUpdated>
        </member>
        <member name="P:Cn.Web.CookieMonster.IsNewCookie">
            ############################################################
             <summary>
             Gets a value indicating whether this instance represents a new cookie collection.
             </summary>
            ############################################################
             <LastUpdated>May 20, 2004</LastUpdated>
        </member>
        <member name="T:Cn.Collections.MultiArray">
            ########################################################################################################################
             <summary>
             Represents a collection of rows and columns organised based on their names and positions within the structure.
             </summary>
             <remarks>
             Fun fact: This was the first C# module built for Renderer (no VB.Net counterpart ever existed for this class).
             </remarks>
            ########################################################################################################################
             <LastFullCodeReview>June 4, 2007</LastFullCodeReview>
        </member>
        <member name="M:Cn.Collections.MultiArray.#ctor(System.String[])">
            ############################################################
             <summary>
             Initializes the class based on the provided column names.
             </summary>
             <param name="a_sInitialColumnNames">String array representing the desired initial column names.</param>
             <exception cref="T:Cn.CnException">Thrown when a null-string column name is within the passed <paramref>a_sInitialColumnNames</paramref>.</exception>
             <exception cref="T:Cn.CnException">Thrown when a column name is represented more then once within the passed <paramref>a_sInitialColumnNames</paramref>.</exception>
             <seealso cref="M:Cn.Collections.MultiArray.Reset(System.String[])"/>
            ############################################################
             <LastUpdated>August 22, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.Reset(System.String[])">
            ############################################################
             <summary>
             Resets the class to its initilized state based on the provided column names.
             </summary>
             <param name="a_sInitialColumnNames">String array representing the desired initial column names.</param>
             <exception cref="T:Cn.CnException">Thrown when a null-string column name is within the passed <paramref>a_sInitialColumnNames</paramref>.</exception>
             <exception cref="T:Cn.CnException">Thrown when a column name is represented more then once within the passed <paramref>a_sInitialColumnNames</paramref>.</exception>
            ############################################################
             <LastUpdated>August 17, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.#ctor(System.String)">
            ############################################################
             <summary>
             Initializes the class based on the provided structure.
             </summary>
             <param name="sMultiArrayString">String representing an instance of a MultiArray class.</param>
             <exception cref="T:Cn.CnException">Thrown when a null-string column name is within the passed <paramref>sMultiArrayString</paramref>.</exception>
             <exception cref="T:Cn.CnException">Thrown when a column name is represented more then once within the passed <paramref>sMultiArrayString</paramref>.</exception>
             <exception cref="T:Cn.CnException">Thrown when a row does not have the correct number of columns within the passed <paramref>sMultiArrayString</paramref>.</exception>
             <seealso cref="M:Cn.Collections.MultiArray.Reset(System.String)"/>
            ############################################################
             <LastUpdated>August 22, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.Reset(System.String)">
            ############################################################
             <summary>
             Resets the class to its initilized state based on the provided structure.
             </summary>
             <param name="sMultiArrayString">String representing an instance of a MultiArray class.</param>
             <exception cref="T:Cn.CnException">Thrown when a null-string column name is within the passed <paramref>sMultiArrayString</paramref>.</exception>
             <exception cref="T:Cn.CnException">Thrown when a column name is represented more then once within the passed <paramref>sMultiArrayString</paramref>.</exception>
             <exception cref="T:Cn.CnException">Thrown when a row does not have the correct number of columns within the passed <paramref>sMultiArrayString</paramref>.</exception>
            ############################################################
             <LastUpdated>August 17, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.#ctor">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <seealso cref="M:Cn.Collections.MultiArray.Reset"/>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.Reset">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.DoReset">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.DoReset(System.String,System.String[])">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="a_sColumnNames">String array representing the desired column names.</param>
             <returns>Boolean value signaling the success/failure of the call.</returns>
             <exception cref="T:Cn.CnException">Thrown when a null-string column name is within the passed <paramref>a_sInitialColumnNames</paramref>.</exception>
             <exception cref="T:Cn.CnException">Thrown when a column name is represented more then once within the passed <paramref>a_sInitialColumnNames</paramref>.</exception>
             <seealso cref="M:Cn.Collections.MultiArray.Reset(System.String[])"/>
            ############################################################
             <LastUpdated>November 2, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.DoReset(System.String,System.String)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="sMultiArrayString">String representing an instance of a MultiArray class.</param>
             <exception cref="T:Cn.CnException">Thrown when a null-string column name is within the passed <paramref>sMultiArrayString</paramref>.</exception>
             <exception cref="T:Cn.CnException">Thrown when a column name is represented more then once within the passed <paramref>sMultiArrayString</paramref>.</exception>
             <exception cref="T:Cn.CnException">Thrown when a row does not have the correct number of columns within the passed <paramref>sMultiArrayString</paramref>.</exception>
             <seealso cref="M:Cn.Collections.MultiArray.Reset(System.String)"/>
            ############################################################
             <LastUpdated>January 20, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            ############################################################
             <summary>
             Initializes the class based on the provided SerializationInfo.
             </summary>
             <param name="info">Standard SerializationInfo object.</param>
             <param name="ctxt">Standard StreamingContext object.</param>
            ############################################################
             <LastUpdated>December 21, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            ############################################################
             <summary>
             Stores the state of the class into the provided SerializationInfo.
             </summary>
             <param name="info">Standard SerializationInfo object.</param>
             <param name="ctxt">Standard StreamingContext object.</param>
            ############################################################
             <LastUpdated>December 21, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.Value(System.Int32,System.String)">
            ############################################################
             <summary>
             Gets/sets the string value present at the referenced row/column (pseudo-parameterized property).
             </summary>
             <remarks>
             This is a pseudo-parameterized property implimentation. The overloaded pair of methods serve the same function as a parameterized property would.
             <para/>NOTE: If the passed <paramref>iRowIndex</paramref> is invalid or the passed <paramref>sColumnName</paramref> is unreconized, a null-string is returned.
             </remarks>
             <param name="iRowIndex">0-based integer representing the desired row index.</param>
             <param name="sColumnName">String representing the desired column name.</param>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.Value(System.Int32,System.String,System.String)">
            ############################################################
             <summary>
             Gets/sets the string value present at the referenced row/column (pseudo-parameterized property).
             </summary>
             <remarks>
             This is a pseudo-parameterized property implimentation. The overloaded pair of methods serve the same function as a parameterized property would.
             </remarks>
             <param name="iRowIndex">0-based integer representing the desired row index.</param>
             <param name="sColumnName">String representing the desired column name.</param>
             <param name="sNewValue">String representing the new value for the referenced index.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>iRowIndex</paramref> is outside the proper range (0 to (<c>RowCount</c> - 1)).</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sColumnName</paramref> does not exist within this instance.</exception>
            ############################################################
             <LastUpdated>January 27, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.Value(System.Int32,System.Int32)">
            ############################################################
             <summary>
             Gets/sets the string value present at the referenced row/column (pseudo-parameterized property).
             </summary>
             <remarks>
             This is a pseudo-parameterized property implimentation. The overloaded pair of methods serve the same function as a parameterized property would.
             <para/>NOTE: If the passed <paramref>iRowIndex</paramref> or <paramref>iColumnIndex</paramref> is invalid, a null-string is returned.
             </remarks>
             <param name="iRowIndex">0-based integer representing the desired row index.</param>
             <param name="iColumnIndex">0-based integer representing the desired column index.</param>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.Value(System.Int32,System.Int32,System.String)">
            ############################################################
             <summary>
             Gets/sets the string value present at the referenced row/column (pseudo-parameterized property).
             </summary>
             <remarks>
             This is a pseudo-parameterized property implimentation. The overloaded pair of methods serve the same function as a parameterized property would.
             </remarks>
             <param name="iRowIndex">0-based integer representing the desired row index.</param>
             <param name="iColumnIndex">0-based integer representing the desired column index.</param>
             <param name="sNewValue">String representing the new value for the referenced index.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>iRowIndex</paramref> is outside the proper range (0 to (<c>RowCount</c> - 1)).</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>iColumnIndex</paramref> is outside the proper range (0 to (<c>ColumnCount</c> - 1)).</exception>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.Exists(System.String)">
            ############################################################
             <summary>
             Determines if this instance contains a specific column name.
             </summary>
             <param name="sColumnName">String representing the column name to locate.</param>
             <returns>Boolean value signaling the existance of the passed <paramref>sColumnName</paramref>.<para/>Returns true if the <paramref>sColumnName</paramref> is present within this instance, or false if it is not present.</returns>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.Exists(System.String[])">
            ############################################################
             <summary>
             Determines if this instance contains all of the provided column names.
             </summary>
             <param name="a_sColumnNames">String array representing the column names to locate.</param>
             <returns>Boolean value signaling the existance of all of the column names within the passed <paramref>a_sColumnNames</paramref>.<para/>Returns true if all of the <paramref>a_sColumnNames</paramref> are present within this instance, or false if one or more are not present.</returns>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.ColumnIndex(System.String)">
            ############################################################
             <summary>
             Retrieves the column index of the referenced column.
             </summary>
             <param name="sColumnName">String representing the desired column name.</param>
             <returns>0-based integer representing the column index of the passed <paramref>sColumnName</paramref>.</returns>
            ############################################################
             <LastUpdated>January 25, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.ColumnName(System.Int32)">
            ############################################################
             <summary>
             Retrieves the column name of the referenced column.
             </summary>
             <param name="iColumnIndex">0-based integer representing the desired column index.</param>
             <returns>String representing the column name of the passed <paramref>iColumnIndex</paramref>.</returns>
            ############################################################
             <LastUpdated>January 21, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.Row(System.Int32)">
            ############################################################
             <summary>
             Retrieves a structure that represents the referenced row.
             </summary>
             <param name="iRowIndex">0-based integer representing the desired row index.</param>
             <returns>Hashtable of strings where each entry represents the string data for each column of the passed <paramref>iRowIndex</paramref>, or null if it was not defined.</returns>
            ############################################################
             <LastUpdated>February 19, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.RowAsArray(System.Int32)">
            ############################################################
             <summary>
             Retrieves a structure that represents the referenced row.
             </summary>
             <param name="iRowIndex">0-based integer representing the desired row index.</param>
             <returns>Array of strings where each entry represents the string data for each column of the passed <paramref>iRowIndex</paramref>, or null if it was not defined.</returns>
            ############################################################
             <LastUpdated>February 19, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.Column(System.String)">
            ############################################################
             <summary>
             Retrieves a structure that represents the referenced column.
             </summary>
             <param name="sColumnName">String representing the desired column name.</param>
             <returns>String array where each index represents the string data for each row of the passed <paramref>sColumnName</paramref>, or null if it was not defined.</returns>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.Column(System.Int32)">
            ############################################################
             <summary>
             Retrieves a structure that represents the referenced column.
             </summary>
             <param name="iColumnIndex">0-based integer representing the desired column index.</param>
             <returns>String array where each index represents the string data for each row of the passed <paramref>iColumnIndex</paramref>, or null if it was not defined.</returns>
            ############################################################
             <LastUpdated>February 19, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.InsertRow(System.String[])">
            ############################################################
             <summary>
             Appends the passed row onto this instance.
             </summary>
             <param name="a_sRow">Array of strings representing the string data to insert as the new row.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_sRow</paramref> does not have the proper number of columns.</exception>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.InsertRow(System.String[],System.Int32)">
            ############################################################
             <summary>
             Inserts the passed row into this instance at the passed destination index.
             </summary>
             <param name="a_sRow">Array of strings representing the string data to insert as the new row.</param>
             <param name="iDestinationRowIndex">0-based integer representing the desired destination row index.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_sRow</paramref> does not have the proper number of columns.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>iDestinationRowIndex</paramref> is outside the proper range (0 to <c>RowCount</c>).</exception>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.InsertRow(System.Collections.Hashtable)">
            ############################################################
             <summary>
             Appends the passed row onto this instance.
             </summary>
             <param name="h_sRow">Hashtable of strings representing the string data to insert as the new row.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_sRow</paramref> does not have the proper number of columns.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_sRow</paramref> contains a column name not defined within this instance.</exception>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.InsertRow(System.Collections.Hashtable,System.Int32)">
            ############################################################
             <summary>
             Inserts the passed row into this instance at the passed destination index.
             </summary>
             <param name="h_sRow">Hashtable of strings representing the string data to insert as the new row.</param>
             <param name="iDestinationRowIndex">0-based integer representing the desired destination row index.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_sRow</paramref> does not have the proper number of columns.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_sRow</paramref> contains a column name not defined within this instance.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>iDestinationRowIndex</paramref> is outside the proper range (0 to <c>RowCount</c>).</exception>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.InsertColumn(System.String)">
            ############################################################
             <summary>
             Appends a blank column onto this instance.
             </summary>
             <param name="sColumnName">String representing the desired column name.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sColumnName</paramref> is a null-string.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sColumnName</paramref> already exists within this instance.</exception>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.InsertColumn(System.String,System.String[])">
            ############################################################
             <summary>
             Appends the passed column onto this instance.
             </summary>
             <param name="sColumnName">String representing the desired column name.</param>
             <param name="a_sColumn">String array representing the string data to insert as the new column.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sColumnName</paramref> is a null-string.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sColumnName</paramref> already exists within this instance.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_sColumn</paramref> does not have the proper number of rows.</exception>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.InsertColumn(System.String,System.String[],System.Int32)">
            ############################################################
             <summary>
             Inserts the passed column into this instance at the passed destination index.
             </summary>
             <param name="a_sColumn">String array representing the string data to insert as the new column.</param>
             <param name="sColumnName">String representing the desired column name.</param>
             <param name="iDestinationColumnIndex">0-based integer representing the desired destination column index.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sColumnName</paramref> is a null-string.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sColumnName</paramref> already exists within this instance.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_sColumn</paramref> does not have the proper number of rows.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>iDestinationColumnIndex</paramref> is outside the proper range (0 to <c>ColumnCount</c>).</exception>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.RemoveRow(System.Int32)">
            ############################################################
             <summary>
             Removes the referenced row from this instance.
             </summary>
             <param name="iRowIndex">0-based integer representing the desired row index.</param>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.RemoveColumn(System.String)">
            ############################################################
             <summary>
             Removes the referenced column from this instance.
             </summary>
             <param name="sColumnName">String representing the desired column name.</param>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.RemoveColumn(System.Int32)">
            ############################################################
             <summary>
             Removes the referenced column from this instance.
             </summary>
             <param name="iColumnIndex">0-based integer representing the desired column index.</param>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.RenameColumn(System.String,System.String)">
            ############################################################
             <summary>
             Renames the referenced column within this instance.
             </summary>
             <param name="sColumnName">String representing the current column name.</param>
             <param name="sNewColumnName">String representing the desired new column name.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sNewColumnName</paramref> is a null-string.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sNewColumnName</paramref> already exists within this instance.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sColumnName</paramref> does not exist within this instance.</exception>
            ############################################################
             <LastUpdated>January 27, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.RenameColumn(System.Int32,System.String)">
            ############################################################
             <summary>
             Renames the referenced column within this instance.
             </summary>
             <param name="iColumnIndex">0-based integer representing the desired column index.</param>
             <param name="sNewColumnName">String representing the desired new column name.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sNewColumnName</paramref> is a null-string.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sNewColumnName</paramref> already exists within this instance.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>iColumnIndex</paramref> is outside the proper range (0 to <c>(ColumnCount - 1)</c>).</exception>
            ############################################################
             <LastUpdated>January 27, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.ToString">
            ############################################################
             <summary>
             Converts the data stored within this instance into its equivalent string representation.
             </summary>
             <returns>String representing this instance of a MultiArray class.</returns>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.GenerateSQLStatements(System.String,System.String,Cn.Collections.MultiArray.enumStatementTypes)">
            ############################################################
             <summary>
             Converts the data stored within this instance into SQL statement(s).
             </summary>
             <param name="sTableName">String representing the destination table name.</param>
             <param name="sIDColumn">String representing the name of the primary key column (this column will not be included in the generated SQL statements).<para/> NOTE: Pass in a null-string if there is no ID column.</param>
             <param name="eStatementType">Enumeration representing the desired SQL statement type.</param>
             <returns>String array where each index represents a single SQL statment for each row within this instance.</returns>
             <exception cref="T:Cn.CnException">Thrown when the passed non-null-string <paramref>sIDColumn</paramref> does not exist within this instance.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eStatementType</paramref> requests an UPDATE statement and the passed <paramref>sIDColumn</paramref> does not exist within this instance.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sTableName</paramref> is a null-string.</exception>
            ############################################################
             <LastUpdated>February 19, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.UpdatedColumns(System.Collections.Hashtable,System.Collections.Hashtable)">
            ############################################################
             <summary>
             Determines which column values differ between the provided records.
             </summary>
             <remarks>
             NOTE: All of the column names present within <paramref>h_sCheckRow</paramref> must be present within <paramref>h_sOriginalRow</paramref>, else an error will be thrown. Any additional columns defined within <paramref>h_sOriginalRow</paramref> will be ignored.
             <para/>NOTE: A null array is returned if there were no column value differences between the provided records.
             </remarks>
             <param name="h_sCheckRow">Hashtable that represents the record to check.</param>
             <param name="h_sOriginalRow">Hashtable that represents the original record.</param>
             <returns>Array of strings where each index represents a column name who's value differed between the provided <paramref>h_sCheckRow</paramref> and <paramref>h_sOriginalRow</paramref>.</returns>
             <exception cref="T:Cn.CnException">Thrown when a null <paramref>h_sCheckRow</paramref> is passed.</exception>
             <exception cref="T:Cn.CnException">Thrown when a null <paramref>h_sOriginalRow</paramref> is passed.</exception>
             <exception cref="T:Cn.CnException">Thrown when a key (column name) present within <paramref>h_sCheckRow</paramref> is not present within <paramref>h_sOriginalRow</paramref>.</exception>
            ############################################################
             <LastUpdated>February 19, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.ManageRows(System.String,System.Boolean,System.Int32,System.String[])">
            ############################################################
             <summary>
             Manages the <c>Rows</c> for this instance.
             </summary>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="bInsert">Boolean value signaling if this is an insert request.<para/></param>
             <param name="iRowIndex">0-based integer representing the desired row index.</param>
             <param name="a_sRow">Array of strings representing the string data to insert as the new row.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_sRow</paramref> does not have the proper number of columns.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>bInsert</paramref> is true and the passed <paramref>iRowIndex</paramref> is outside the proper range (0 to (<c>RowCount</c> - 1)).</exception>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.ManageColumns(System.String,System.Boolean,System.Int32,System.String[],System.String)">
            ############################################################
             <summary>
             Manages the <c>Columns</c> for this instance.
             </summary>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="bInsert">Boolean value signaling if this is an insert request.<para/></param>
             <param name="iColumnIndex">0-based integer representing the desired column index.</param>
             <param name="a_sColumn">String array representing the string data to insert as the new column.</param>
             <param name="sColumnName">String representing the desired column name.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sColumnName</paramref> is a null-string.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sColumnName</paramref> already exists within this instance.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_sColumn</paramref> does not have the proper number of rows.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>bInsert</paramref> is true and the passed <paramref>iColumnIndex</paramref> is outside the proper range (0 to (<c>ColumnCount</c> - 1)).</exception>
            ############################################################
             <LastUpdated>January 27, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.DoValue(System.Int32,System.Int32,System.Boolean,System.String)">
            ############################################################
             <summary>
             Retrieves or commits the value for the referenced data.
             </summary>
             <param name="iRowIndex">0-based integer representing the desired row index.</param>
             <param name="iColumnIndex">0-based integer representing the desired column index.</param>
             <param name="bUpdate">Boolean value signaling if this is an update request.<para/></param>
             <param name="sNewValue">String representing the new value for the referenced index.</param>
             <returns>String representing the value of the referenced data.</returns>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>bUpdate</paramref> is true and the passed <paramref>iRowIndex</paramref> is outside the proper range (0 to (<c>RowCount</c> - 1)).</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>bUpdate</paramref> is true and the passed <paramref>iColumnIndex</paramref> is outside the proper range (0 to (<c>ColumnCount</c> - 1)).</exception>
            ############################################################
             <LastUpdated>January 27, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Collections.MultiArray.Data">
            ############################################################
             <summary>
             Gets a deep copy of the data stored defined within this instance.
             </summary>
             <value>Deep copy of the data stored defined within this instance.</value>
            ############################################################
             <LastUpdated>December 23, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Collections.MultiArray.RowCount">
            ############################################################
             <summary>
             Gets the row count within this instance.
             </summary>
             <value>1-based integer representing the count of rows within this instance.</value>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Collections.MultiArray.ColumnCount">
            ############################################################
             <summary>
             Gets the column count within this instance.
             </summary>
             <value>1-based integer representing the count of columns within this instance.</value>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Collections.MultiArray.ColumnNames">
            ############################################################
             <summary>
             Gets the column names present within this instance.
             </summary>
             <value>String array where each index represents a column name present within this instance.</value>
            ############################################################
             <LastUpdated>June 4, 2007</LastUpdated>
        </member>
        <member name="T:Cn.Collections.MultiArray.enumStatementTypes">
            <summary>SQL Statements types.</summary>
        </member>
        <member name="F:Cn.Collections.MultiArray.enumStatementTypes.cnInsert">
            <summary>SQL insert statement.</summary>
        </member>
        <member name="F:Cn.Collections.MultiArray.enumStatementTypes.cnUpdate">
            <summary>SQL update statement.</summary>
        </member>
        <member name="T:Cn.Collections.MultiArray.DataContainer">
            ########################################################################################################################
             <summary>
             Internally utilized class structure that represents the data for the each instance.
             </summary>
             <remarks>
             NOTE: This class is only used internally by MultiArray.
             </remarks>
            ########################################################################################################################
             <LastFullCodeReview>June 4, 2007</LastFullCodeReview>
        </member>
        <member name="F:Cn.Collections.MultiArray.DataContainer.ColumnNames">
            <summary>Gets/sets the column names (along with their column indexes) for this instance.</summary>
        </member>
        <member name="F:Cn.Collections.MultiArray.DataContainer.Rows">
            <summary>Gets/sets the rows for this instance.</summary>
        </member>
        <member name="M:Cn.Collections.MultiArray.DataContainer.ValiateRowIndex(System.String,System.Int32,System.Boolean)">
            ############################################################
             <summary>
             Determines if the passed index is within the bounds of the <c>Row</c>s.
             </summary>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="iRowIndex">0-based integer representing the desired row index.</param>
             <param name="bRaiseErrors">Boolean value indicating if errors are to be raised if the referenced index is invalid.</param>
             <returns>Boolean value signaling if the referenced index is valid.</returns>
            ############################################################
             <LastUpdated>January 8, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Collections.MultiArray.DataContainer.ValidateColumnIndex(System.String,System.Int32,System.Boolean)">
            ############################################################
             <summary>
             Determines if the passed index is within the bounds of the <c>Columns</c>s.
             </summary>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="iColumnIndex">0-based integer representing the desired column index.</param>
             <param name="bRaiseErrors">Boolean value indicating if errors are to be raised if the referenced index is invalid.</param>
             <returns>Boolean value signaling if the referenced index is valid.</returns>
            ############################################################
             <LastUpdated>January 21, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Collections.MultiArray.DataContainer.structRow">
            <summary>Structure that represents a single <c>Row</c>.</summary>
        </member>
        <member name="T:Cn.Data.DBMS">
            ########################################################################################################################
             <summary>
             Enviroment specific DataSource-related helper methods (dotNET, PHP, Java, etc).
             </summary>
            ########################################################################################################################
             <LastFullCodeReview></LastFullCodeReview>
        </member>
        <member name="M:Cn.Data.DBMS.#ctor(Cn.Data.DBMS.enumConnectionType,System.String)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="eConnectionType">Enumeration representing the target database server's connection type.</param>
             <param name="sConnectionString">String representing the DSN connection string to login to the target database server.</param>
            ############################################################
             <LastUpdated>November 24, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.Finalize">
            ############################################################
             <summary>
             Disposes of the class's persistent objects.
             </summary>
            ############################################################
             <LastUpdated>May 4, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.Reset(Cn.Data.DBMS.enumConnectionType,System.String)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="eConnectionType">Enumeration representing the target database server's connection type.</param>
             <param name="sConnectionString">String representing the DSN connection string to login to the target database server.</param>
            ############################################################
             <LastUpdated>November 24, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.CloseConnection">
            ############################################################
             <summary>
             Closes the active database server connection (if any).
             </summary>
            ############################################################
             <LastUpdated>July 13, 2006</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.GetResults(System.String)">
            ############################################################
             <summary>
             Retrieves a set of results based on the provided SQL query.
             </summary>
             <param name="sSQL">String representing the SQL query to execute.</param>
             <returns>Set of results containing the data returned from the provided <paramref>sSQL</paramref> query.</returns>
            ############################################################
             <LastUpdated>November 24, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.GetResults(System.String,System.Collections.Hashtable)">
            ############################################################
             <summary>
             Retrieves a set of results based on the referenced stored procedure.
             </summary>
             <param name="sStoredProcedureName">String representing the names of the stored procedure to execute.</param>
             <param name="hStoredProcedureParams">Hashtable representing the stored procedure's parameters.</param>
             <returns>Set of results containing the data returned from the provided <paramref>sStoredProcedureName</paramref> query.</returns>
            ############################################################
             <LastUpdated>November 24, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.GetHashArray(System.String)">
            ############################################################
             <summary>
             Retrieves a set of results based on the provided SQL query.
             </summary>
             <remarks>
             Returns an object that is accessable like this: 'oResults[iRowNumber]["ColumnName"]'.
             </remarks>
             <param name="sSQL">String representing the SQL query to execute.</param>
             <returns>Array of Hashtables containing Hashtables with the data returned from the provided <paramref>sSQL</paramref> query.</returns>
            ############################################################
             <LastUpdated>November 24, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.GetHashArray(System.String,System.Collections.Hashtable)">
            ############################################################
             <summary>
             Retrieves a set of results based on the referenced stored procedure.
             </summary>
             <remarks>
             Returns an object that is accessable like this: 'oResults[iRowNumber]["ColumnName"]'.
             </remarks>
             <param name="sStoredProcedureName">String representing the names of the stored procedure to execute.</param>
             <param name="hStoredProcedureParams">Hashtable representing the stored procedure's parameters.</param>
             <returns>Array of Hashtables containing Hashtables with the data returned from the provided <paramref>sSQL</paramref> query.</returns>
            ############################################################
             <LastUpdated>November 24, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.GetMultiArrays(System.String)">
            ############################################################
             <summary>
             Retrieves a set of multiple results based on the provided SQL query.
             </summary>
             <remarks>
             This function returns the first set of results in the passed <paramref>sSQL</paramref> query as a MultiArray. This is useful for <c>Renderer</c> functions such as <see cref="M:Cn.Data.Picklists.Exists(System.String)">Cn.Data.Picklists.Exists</see>.
             </remarks>
             <param name="sSQL">String representing the SQL query to execute.</param>
             <returns>Array of MultiArrays containing the multiple results from the passed <paramref>sSQL</paramref> query.</returns>
            ############################################################
             <LastUpdated>May 29, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.GetMultiArray(System.String)">
            ############################################################
             <summary>
             Retrieves a set of results based on the provided SQL query.
             </summary>
             <remarks>
             This function returns the first set of results in the passed <paramref>sSQL</paramref> query as a MultiArray. This is useful for <c>Renderer</c> functions such as <see cref="M:Cn.Data.Picklists.Exists(System.String)">Cn.Data.Picklists.Exists</see>.
             </remarks>
             <param name="sSQL">String representing the SQL query to execute.</param>
             <returns>MultiArray containing the results from the passed <paramref>sSQL</paramref> query.</returns>
            ############################################################
             <LastUpdated>January 31, 2006</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.GetMultiArray(System.String,System.Collections.Hashtable)">
            ############################################################
             <summary>
             Retrieves a set of results based on the provided SQL query.
             </summary>
             <remarks>
             This function returns the first set of results in the passed <paramref>sSQL</paramref> query as a MultiArray. This is useful for <c>Renderer</c> functions such as <see cref="M:Cn.Data.Picklists.Exists(System.String)">Cn.Data.Picklists.Exists</see>.
             </remarks>
             <param name="sStoredProcedureName">String representing the names of the stored procedure to execute.</param>
             <param name="hStoredProcedureParams">Hashtable representing the stored procedure's parameters.</param>
             <returns>MultiArray containing the results from the passed <paramref>sSQL</paramref> query.</returns>
            ############################################################
             <LastUpdated>January 31, 2006</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.GetColumnArray(System.String)">
            ############################################################
             <summary>
             Retrieves a set of results based on the provided SQL query.
             </summary>
             <remarks>
             This function returns the first column of the first set of results in the passed <paramref>sSQL</paramref> query as a string array. This is useful for <c>Renderer</c> functions such as <see cref="M:Cn.Data.Pagination.Load(System.String)">Cn.Data.Pagination.Load</see> and <see cref="!:Cn.Data.Pagination.SetCollectedIDs">Cn.Data.PaginationTable.SetCollectedIDs</see>.
             </remarks>
             <param name="sSQL">String representing the SQL query to execute.</param>
             <returns>String array where each element represents a value of each row's first column.</returns>
            ############################################################
             <LastUpdated>January 31, 2006</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.GetColumnArray(System.String,System.Collections.Hashtable)">
            ############################################################
             <summary>
             Retrieves a set of results based on the provided SQL query.
             </summary>
             <remarks>
             This function returns the first column of the first set of results in the passed <paramref>sSQL</paramref> query as a string array. This is useful for <c>Renderer</c> functions such as <see cref="M:Cn.Data.Pagination.Load(System.String)">Cn.Data.Pagination.Load</see> and <see cref="!:Cn.Data.Pagination.SetCollectedIDs">Cn.Data.PaginationTable.SetCollectedIDs</see>.
             </remarks>
             <param name="sStoredProcedureName">String representing the names of the stored procedure to execute.</param>
             <param name="hStoredProcedureParams">Hashtable representing the stored procedure's parameters.</param>
             <returns>String array where each element represents a value of each row's first column.</returns>
            ############################################################
             <LastUpdated>January 31, 2006</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.ExecuteSQL(System.String,System.Boolean)">
            ############################################################
             <summary>
             Executes the provided SQL query.
             </summary>
             <param name="sSQL">String representing the SQL query to execute.</param>
             <param name="bUseTransactions">Boolean value indicating if transactions are to be utilized.</param>
             <returns>Integer representing the number of rows affected.</returns>
            ############################################################
             <LastUpdated>November 24, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.ExecuteSQL(System.String,System.Collections.Hashtable,System.Boolean)">
            ############################################################
             <summary>
             Executes the referenced stored procedure.
             </summary>
             <param name="sStoredProcedureName">String representing the names of the stored procedure to execute.</param>
             <param name="hStoredProcedureParams">Hashtable representing the stored procedure's parameters.</param>
             <param name="bUseTransactions">Boolean value indicating if transactions are to be utilized.</param>
             <returns>Integer representing the number of rows affected.</returns>
            ############################################################
             <LastUpdated>November 24, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.OpenConnection">
            ############################################################
             <summary>
             Opens the active database server connection.
             </summary>
            ############################################################
             <LastUpdated>November 24, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.DoGetResults(System.String,System.Collections.Hashtable)">
            ############################################################
             <summary>
             Retrieves a set of results based on the provided SQL query/stored procedure.
             </summary>
             <param name="sSQL">String representing the SQL query to execute.</param>
             <param name="hStoredProcedureParams">Hashtable representing the stored procedure's parameters.</param>
             <returns>Set of results containing the data returned from the provided <paramref>sSQL</paramref> query/stored procedure.</returns>
            ############################################################
             <LastUpdated>December 8, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.DoGetHashArray(System.String,System.Collections.Hashtable)">
            ############################################################
             <summary>
             Retrieves a set of results based on the provided SQL query/stored procedure.
             </summary>
             <remarks>
             Returns an object that is accessable like this: 'oResults[iRowNumber]["ColumnName"]'.
             </remarks>
             <param name="sSQL">String representing the SQL query to execute.</param>
             <param name="hStoredProcedureParams">Hashtable representing the stored procedure's parameters.</param>
             <returns>Array of Hashtables containing Hashtables with the data returned from the provided <paramref>sSQL</paramref> query.</returns>
            ############################################################
             <LastUpdated>December 7, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.DoExecuteSQL(System.String,System.Collections.Hashtable,System.Boolean)">
            ############################################################
             <summary>
             Executes the provided SQL query/stored procedure.
             </summary>
             <param name="sSQL">String representing the SQL query to execute.</param>
             <param name="hStoredProcedureParams">Hashtable representing the stored procedure's parameters.</param>
             <param name="bUseTransactions">Boolean value indicating if transactions are to be utilized.</param>
             <returns>Integer representing the number of rows affected.</returns>
            ############################################################
             <LastUpdated>July 13, 2006</LastUpdated>
        </member>
        <member name="P:Cn.Data.DBMS.ConnectionType">
            ############################################################
             <summary>
             Gets a value indicating the target database server's connection type.
             </summary>
             <value>Enumeration indicating target database server's connection type.</value>
            ############################################################
             <LastUpdated>November 24, 2005</LastUpdated>
        </member>
        <member name="P:Cn.Data.DBMS.IsConnected">
            ############################################################
             <summary>
             Gets a value indicating if this instance is currently connected to the target database server.
             </summary>
             <value>Boolean value indicating if this instance is currently connected to the target database server.</value>
            ############################################################
             <LastUpdated>November 24, 2005</LastUpdated>
        </member>
        <member name="T:Cn.Data.DBMS.enumConnectionType">
            <summary>Database server connection types.</summary>
        </member>
        <member name="F:Cn.Data.DBMS.enumConnectionType.cnSQLServer">
            <summary>Connection to SQL*Server.</summary>
        </member>
        <member name="F:Cn.Data.DBMS.enumConnectionType.cnODBC">
            <summary>Connection to an ODBC compliant server.</summary>
        </member>
        <member name="F:Cn.Data.DBMS.enumConnectionType.cnOLEDb">
            <summary>Connection to an OLEDb compliant server.</summary>
        </member>
        <member name="F:Cn.Data.DBMS.enumConnectionType.cnOracle">
            <summary>Connection to Oracle.</summary>
        </member>
        <member name="T:Cn.Data.DBMS.GetValue">
            ########################################################################################################################
             <summary>
             Utility to collect values from either the provided data source or the user input based on the current context.
             </summary>
             <remarks>
             This class is provided as a utility to collect the current value of a column for a Renderer.Form. If it is the initial load of the Renderer.Form, the value is sourced from the provided DataTable object. If it is a subsequent page load (i.e. the user submitted an incomplete form), the value is sourced from the Request.Form object.
             </remarks>
            ########################################################################################################################
             <LastFullCodeReview>February 20, 2006</LastFullCodeReview>
        </member>
        <member name="M:Cn.Data.DBMS.GetValue.#ctor(Cn.Web.Renderer.Form,System.Data.DataSet)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oForm">Form object reference to the related Renderer.Form object.</param>
             <param name="oResults">Object reference representing the related "set of results" instance.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oForm</paramref> is null.</exception>
            ############################################################
             <LastUpdated>February 20, 2006</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.GetValue.#ctor(Cn.Web.Renderer.Form)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oForm">Form object reference to the related Renderer.Form object.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oForm</paramref> is null.</exception>
            ############################################################
             <LastUpdated>March 2, 2006</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.GetValue.Reset(Cn.Web.Renderer.Form,System.Data.DataSet)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="oForm">Form object reference to the related Renderer.Form object.</param>
             <param name="oResults">Object reference representing the related "set of results" instance.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oForm</paramref> is null.</exception>
            ############################################################
             <LastUpdated>May 21, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.GetValue.Reset(Cn.Web.Renderer.Form)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="oForm">Form object reference to the related Renderer.Form object.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oForm</paramref> is null.</exception>
            ############################################################
             <LastUpdated>May 21, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.GetValue.Value(System.String)">
            ############################################################
             <summary>
             Retrieves the requested data value for the referenced column name.
             </summary>
             <param name="sColumnName">String representing the column name to locate.</param>
             <returns>String representing the requested data value.</returns>
            ############################################################
             <LastUpdated>May 29, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.DBMS.GetValue.DoReset(System.String,Cn.Web.Renderer.Form,System.Data.DataSet)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="oForm">Form object reference to the related Renderer.Form object.</param>
             <param name="oResults">Object reference representing the related "set of results" instance.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oForm</paramref> is null.</exception>
            ############################################################
             <LastUpdated>May 29, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Data.DBMS.GetValue.Data">
            ############################################################
             <summary>
             Gets/sets the "set of results" represented by this instance.
             </summary>
             <value>DataSet representing the "set of results" represented by this instance.</value>
            ############################################################
             <LastUpdated>March 2, 2006</LastUpdated>
        </member>
        <member name="T:Cn.Web.Tools">
            ########################################################################################################################
             <summary>
             General helper methods.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>July 29, 2005</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Tools.KeyValueString(System.String)">
            ###############################################################
             <summary>
             Retrieves the associative array of data elements stored within the passed key/value pair structure.
             </summary>
             <param name="sKeysValues">String representing a QueryString-style key/value pair structure (i.e. - "key1=value1&amp;key2=value2&amp;key3=value3").</param>
             <returns>Hashtable where each index represents a key/value pair stored within the passed <paramref>sKeysValues</paramref>.</returns>
            ###############################################################
             <LastUpdated>January 10, 2006</LastUpdated>
        </member>
        <member name="M:Cn.Web.Tools.KeyValueString(Cn.Web.Tools.enumServerObject,System.Boolean)">
            ###############################################################
             <summary>
             Formats the referenced server structure of data elements into a key/value pair structure.
             </summary>
             <param name="eServerObject">Enumeration representing the server structure of data elements to encode.</param>
             <param name="bIncludeBlankValues">Boolean value indicating if keys with null-string values are to be included.</param>
             <returns>String representing a QueryString-style key/value pair structure (i.e. - "key1=value1&amp;key2=value2&amp;key3=value3").</returns>
            ###############################################################
             <LastUpdated>December 2, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Web.Tools.KeyValueString(System.Collections.Hashtable,System.Boolean)">
            ###############################################################
             <summary>
             Formats the referenced associative array of data elements into a key/value pair structure.
             </summary>
             <param name="h_sKeysValues">Hashtable of strings representing the key/value pairs.</param>
             <param name="bIncludeBlankValues">Boolean value indicating if keys with null-string values are to be included.</param>
             <returns>String representing a QueryString-style key/value pair structure (i.e. - "key1=value1&amp;key2=value2&amp;key3=value3").</returns>
            ###############################################################
             <LastUpdated>December 2, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Web.Tools.KeyValueString(System.Web.UI.StateBag,System.Boolean)">
            ###############################################################
             <summary>
             Formats the referenced associative array of data elements into a key/value pair structure.
             </summary>
             <remarks>
             NOTE: This is a .NET only function.
             </remarks>
             <param name="rViewState">Reference to the current <c>System.Web.UI.StateBag</c> representing the key/value pairs.</param>
             <param name="bIncludeBlankValues">Boolean value indicating if keys with null-string values are to be included.</param>
             <returns>String representing a QueryString-style key/value pair structure (i.e. - "key1=value1&amp;key2=value2&amp;key3=value3").</returns>
            ###############################################################
             <LastUpdated>December 2, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Web.Tools.CurrentURL">
            ###############################################################
             <summary>
             Retrieves the current page's URL.
             </summary>
             <remarks>     NOTE: This differs from <c>Cn.Web.Settings.Value()</c>'s <c>cnUIDirectoryURL</c> case because this returns the current URL, rather then the URL with the <c>cnUIDirectory</c> appended onto it.</remarks>
             <returns>String representing the current page's URL.</returns>
            ###############################################################
             <LastUpdated>January 4, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Tools.CurrentURL(System.Boolean,System.Boolean)">
            ###############################################################
             <summary>
             Retrieves the current page's URL.
             </summary>
             <remarks>     NOTE: This differs from <c>Cn.Web.Settings.Value()</c>'s <c>cnUIDirectoryURL</c> case because this returns the current URL, rather then the URL with the <c>cnUIDirectory</c> appended onto it.</remarks>
             <param name="bIncludeFileName">Boolean value indicating if the filename of the running script is to be included in the URL.</param>
             <param name="bIncludeQueryString">Boolean value indicating if the query string is to be included in the URL.</param>
             <returns>String representing the current page's URL.</returns>
            ###############################################################
             <LastUpdated>June 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Tools.ProtocolHostPortURL">
            ###############################################################
             <summary>
             Retrieves the current page's protocol (aka scheme), host and optional port designation.
             </summary>
             <remarks>
             This function only returns a port designation if the port differ's from the protocol's default port number (HTTP's default port is 80, while HTTPS' is 443).
            	<para/>Example: http://www.google.com/
             <para/>Example: http://www.google.com:8080/
             <para/>Example: https://www.google.com/
             <para/>Example: https://www.google.com:1443/
             </remarks>
             <returns>String representing the current page's protocol (aka scheme), host and optional port designation.</returns>
            ###############################################################
             <LastUpdated>June 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Tools.CurrentPath(System.Boolean)">
            ###############################################################
             <summary>
             Retrieves the current page's path on the webserver.
             </summary>
             <param name="bIncludeFileName">Boolean value indicating if the filename of the running script is to be included in the URL.</param>
             <returns>String representing the current page's path on the webserver.</returns>
            ###############################################################
             <LastUpdated>June 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Tools.MapURL(System.String)">
            ###############################################################
             <summary>
             Translates the passed full file path into it's URL equivlent.
             </summary>
             <remarks>
             This is basicially the reverse of Server.MapPath(...).
             <para/>NOTE: This function does have limitations, as if your application is in a virtual directory (as the physical directory doesn't always match the virtual directory).
             </remarks>
             <param name="sFullFilePath">String representing the full path to the file.</param>
             <returns>String representing the passed full file path into it's URL equivlent.</returns>
            ###############################################################
             <LastUpdated>March 3, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Tools.dWrite(System.Object)">
            ###############################################################
             <summary>
             Outputs the passed value surrounded by square brackets.
             </summary>
             <remarks>
             This function is used for debugging purposes only.
             </remarks>
             <param name="oValue">Object representing the value to output. <para/>NOTE: This value is converted into its string equivalent before being outputted.</param>
            ###############################################################
             <LastUpdated>September 15, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Web.Tools.dEnd(System.Object)">
            ###############################################################
             <summary>
             Outputs the passed value surrounded by square brackets and ends the program execution.
             </summary>
             <remarks>
             This function is used for debugging purposes only.
             </remarks>
             <param name="oValue">Object representing the value to output. <para/>NOTE: This value is converted into its string equivalent before being outputted.</param>
            ###############################################################
             <LastUpdated>May 28, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Tools.dGotHere(System.Boolean)">
            ###############################################################
             <summary>
             Outputs the current time surrounded by square brackets and optionally ends the program execution.
             </summary>
             <remarks>
             This function is used for debugging purposes only.
             </remarks>
             <param name="bEndExecution">Boolean value signaling if the program execution is to end.</param>
            ###############################################################
             <LastUpdated>September 15, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Web.Tools.KeyValueStringEncoder(System.String)">
            ###############################################################
             <summary>
             Encodes the passed value for use in a key/value pair structure.
             </summary>
             <param name="sValue">String representing the value to encode.</param>
             <returns>String representing the encoded <param>sValue</param>.</returns>
            ###############################################################
             <LastUpdated>May 28, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.Tools.KeyValueStringDecoder(System.String)">
            ###############################################################
             <summary>
             Decodes the passed value from a key/value pair structure's character escaping.
             </summary>
             <param name="sValue">String representing the value to encode.</param>
             <returns>String representing the decoded <param>sValue</param>.</returns>
            ###############################################################
             <LastUpdated>May 28, 2007</LastUpdated>
        </member>
        <member name="T:Cn.Web.Tools.enumServerObject">
            <summary>HTTP server object types.</summary>
        </member>
        <member name="F:Cn.Web.Tools.enumServerObject.cnApplication">
            <summary>Web application collection.</summary>
        </member>
        <member name="F:Cn.Web.Tools.enumServerObject.cnForm">
            <summary>HTTP POST form collection.</summary>
        </member>
        <member name="F:Cn.Web.Tools.enumServerObject.cnQueryString">
            <summary>HTTP GET form collection.</summary>
        </member>
        <member name="F:Cn.Web.Tools.enumServerObject.cnSession">
            <summary>Web session collection.</summary>
        </member>
        <member name="T:Cn.Web.Inputs.Tools">
            ########################################################################################################################
             <summary>
             
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>July 29, 2005</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Inputs.Tools.FormatDateTime(System.String,System.String@,Cn.Web.Inputs.enumInputTypes,Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Formats the provided date.
             </summary>
             <remarks>
             If the passed <paramref>sInputSpecificFormat</paramref> is a null-string, its value is modified by reference to indicate the default date format as defined within <c>Renderer</c>'s loaded <c>Settings</c> (per the passed <paramref>eInputType</paramref>) that the <paramref>sDateToFormat</paramref> was formatted with.
             </remarks>
             <param name="sDateToFormat">String representing the date to format.</param>
             <param name="sInputSpecificFormat">Reference to a string representing the required date format.</param>
             <param name="eInputType">Enumeration representing the type of input to render.</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <returns>String representing the formatted <paramref>sDateToFormat</paramref>.</returns>
            ############################################################
             <LastUpdated>November 13, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.Tools.FormatForForm(System.String)">
            ############################################################
             <summary>
             Formats the provided value for proper rendering within an HTML form.
             </summary>
             <remarks>
             This function replaces apostrophes and quotes (aka - single and double quotes) with their HTML equivalents ("&#039;" and "&quot;" in this case) so as to ensure proper delimiting within a HTML form input.
             </remarks>
             <param name="sValue">String representing the value to format.</param>
             <returns>String representing the formatted value.</returns>
            ############################################################
             <LastUpdated>December 13, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.Tools.EscapeCharacters(System.String,System.String)">
            ############################################################
             <summary>
             Escapes the character in the provided value.
             </summary>
             <remarks>
             This function escapes the referenced <paramref>sCharacter</paramref> by prepending a backslash ("\") before each instance of it within the sCharacter <paramref>sValue</paramref>.
             </remarks>
             <param name="sValue">String representing the value to process.</param>
             <param name="sCharacter">String representing the single character to escape.</param>
             <returns>String representing the escaped <paramref>sValue</paramref>.</returns>
            ############################################################
             <LastUpdated>December 13, 2005</LastUpdated>
        </member>
        <member name="T:Cn.Web.Controls.Input">
            ########################################################################################################################
             <summary>
             Controls.Input class wraps the functionality of Inputs.InputData into a WebControl.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview></LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Controls.Input.#ctor">
            ############################################################
             <summary>
             Initilizes the class.
             </summary>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Input.OnLoad(System.EventArgs)">
            ############################################################
             <summary>
             Raises the System.Web.UI.Control.Init event.
             </summary>
             <param name="e">An System.EventArgs object that contains the event data.</param>
            ############################################################
             <LastUpdated>June 24, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Input.OnDataBinding(System.EventArgs)">
            ############################################################
             <summary>
             Raises the System.Web.UI.Control.DataBinding event.
             </summary>
             <param name="e">An System.EventArgs object that contains the event data.</param>
            ############################################################
             <LastUpdated>July 9, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Input.Render(System.Web.UI.HtmlTextWriter)">
            ############################################################
             <summary>
             Writes out the XHTML/DHTML code necessary to render this control.
             </summary>
             <param name="output">HtmlTextWriter object as automatically provided by the host ASPX page.</param>
            ############################################################
             <LastUpdated>April 14, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Input.ParentInputCollectionType">
            ############################################################
             <summary>
             Determines the type of the Parent this instance resides under.
             </summary>
             <value>Enumeration representing the type of the Parent this instance resides under (if any).</value>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Input.ProcessInputData(System.String,System.Boolean)">
            ############################################################
             <summary>
             Pre-processes the global <c>g_oInputData</c> variable, loading in the g_sTableName/g_sColumnName if they have been defined by the developer.
             </summary>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="bForceProcessing">Boolean value representing if we are to force processing.</param>
             <remarks>
             This double-handeling is necessary as the <c>g_oInputData</c> is origionally setup in our Constructor as a non-.IsAttachedToDatasource input. So if the developer has defined an .IsAttachedToDatasource input, a re-definition of the <c>g_oInputData</c> is required before we can fulfill the request.
             </remarks>
            ############################################################
             <LastUpdated>June 24, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Controls.Input.DoRenderInput(System.String,System.Web.UI.HtmlTextWriter)">
            ############################################################
             <summary>
             Renders the control to the specified HTML writer.
             </summary>
             <param name="sAttributes">String representing the additional HTML attributes to apply to the input.</param>
             <param name="output">HtmlTextWriter object as automatically provided by the host ASPX page.</param>
            ############################################################
             <LastUpdated>June 22, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.ControlManager">
            ############################################################
             <summary>
             Gets the base control class related to this instance.
             </summary>
             <value>InputData object that manages this instance.</value>
            ############################################################
             <LastUpdated>February 8, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.InputCollection">
            ############################################################
             <summary>
             Gets/sets the parent input collection control related to this instance.
             </summary>
             <remarks>
             If an <c>InputCollection</c> has not been explicitly set, the following order of operations is undertaken to automaticially determine the <c>Control</c> representing an <c>InputCollection</c>:
             <para/>1) <c>InputCollectionID</c> is used to find the developer specified control.
             <para/>2) The <c>Parent</c> control is used.
             <para/>3) The <c>Page</c>'s <c>Controls</c> are searched recursively, and the first control found of type <c>Controls.InputCollection</c> is used.
             <para/>4) The <c>Page</c>'s <c>Controls</c> are searched recursively, and the first control found of type <c>Controls.Form</c> is used.
             <para/>
             <para/>NOTE: If a <c>Control</c> is located, but is not of a type that represents an <c>InputCollection</c>, it is ignored and the next operation is undertaken to find a valid <c>InputCollection</c>-based control.
             <para/>NOTE: It is far more efficient for the developer to place <c>Cn:Input</c> server tags directly under a <c>Controls.InputCollection</c> or <c>Controls.Form</c>, or to set an <c>InputCollectionID</c> then it is to rely on the inbuild searching mechnism. Besides, only the first found <c>InputCollection</c>-based control is returned which may or may not represent the correct <c>InputCollection</c>.
             <para/>NOTE: This does not exactly serve the same purpose as <c>InputData.Parent</c>, as this referes to the control which itself holds a reference to the underlying <c>IInputCollection</c> object, as represented by <c>InputData.Parent</c> (so the control acts as a "man in the middle").
             </remarks>
             <value>InputData object that manages this instance.</value>
            ############################################################
             <LastUpdated>June 24, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.InputCollectionID">
            ############################################################
             <summary>
             Gets/sets a value representing the ID of the parent InputCollection control.
             </summary>
             <value>String representing the ID of the parent InputCollection control.</value>
            ############################################################
             <LastUpdated>March 10, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.InitialValues">
            ############################################################
             <summary>
             Gets/sets a value representing the initial values of the input.
             </summary>
             <value>Array of Strings representing the initial values of the input.</value>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.InitialValue">
            ############################################################
             <summary>
             Gets/sets a value representing the initial value of the input.
             </summary>
             <value>String representing the initial value of the input.</value>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.AdditionalAttributes">
            ############################################################
             <summary>
             Gets/sets a value representing the additional attributes that will be added to the primary HTML element for this input.
             </summary>
             <value>String value representing the additional attributes that will be added to the primary HTML element for this input.</value>
            ############################################################
             <LastUpdated>July 14, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.ForceInitialValue">
            ############################################################
             <summary>
             Gets/sets a value representing if the value of the input is always to be set to the initial value.
             </summary>
             <value>Boolean value representing if the value of the input is always to be set to the initial value.</value>
            ############################################################
             <LastUpdated>July 14, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.InitialValueIsExpression">
            ############################################################
             <summary>
             Gets/sets a value indicating if the value of <c>InitialValue</c>/<c>InitialValues</c> is an expression.
             </summary>
             <remarks>
             If this is set to "true", the array of strings within <c>InitialValues</c>, or the string value specified within <c>InitialValue</c> will be interprated as a period-delimited class path into our <c>Parent</c>'s <c>DataSource</c>.
             </remarks>
             <value>Boolean value indicating if the value of <c>InitialValue</c>/<c>InitialValues</c> is an expression.</value>
            ############################################################
             <LastUpdated>February 12, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.InputType">
            ############################################################
             <summary>
             Gets/sets a value representing the input type to render.
             </summary>
             <returns>Enumeration representing the input type to render.</returns>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.Values">
            ############################################################
             <summary>
             Gets/sets the collection of values for the input represented by this instance.
             </summary>
             <remarks>
             NOTE: <c>Input</c>s defined as <c>cnBoolean</c>s always return values based on <see cref="M:Cn.Data.Tools.MakeBooleanInteger(System.Object,System.Boolean)">MakeBooleanInteger</see>, where zero equates to false and non-zero equates to true.
             </remarks>
             <value>String array where each element represents a single value of the collection of values for the input represented by this instance.</value>
            ############################################################
             <LastUpdated>April 7, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.Value">
            ############################################################
             <summary>
             Gets/sets the value(s) of the input represented by this instance.
             </summary>
             <remarks>
             NOTE: If the input has multiple values, they will be returned as a <c>Cn.Tools.MultiValueString</c> for a <c>Get</c> call, and will be reset to the single provided string value for a <c>Set</c> call.
             </remarks>
             <value>String representing the value(s) of the input represented by this instance (serialized as a MultiValueString is multiple values exist).</value>
            ############################################################
             <LastUpdated>April 7, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.DefaultValue">
            ############################################################
             <summary>
             Gets/sets a value representing the input's default value.
             </summary>
             <returns>String representing the input's default value.</returns>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.MinimumNumericValue">
            ############################################################
             <summary>
             Gets/sets a value representing the input's minimum numeric value.
             </summary>
             <returns>String representing the input's minimum numeric value.</returns>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.MaximumNumericValue">
            ############################################################
             <summary>
             Gets/sets a value representing the input's maximum numeric value.
             </summary>
             <returns>String representing the input's maximum numeric value.</returns>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.MaximumCharacterLength">
            ############################################################
             <summary>
             Gets/sets a value representing the input's maximum character length.
             </summary>
             <returns>Integer representing the input's maximum character length.</returns>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.NumericPrecision">
            ############################################################
             <summary>
             Gets/sets a value representing the input's numeric precision.
             </summary>
             <returns>Integer representing the input's numeric precision.</returns>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.NumericScale">
            ############################################################
             <summary>
             Gets/sets a value representing the input's numeric scale.
             </summary>
             <returns>Integer representing the input's numeric scale.</returns>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.SaveType">
            ############################################################
             <summary>
             Gets/sets a value representing the input's form processing requirements.
             </summary>
             <returns>Enumeration representing the input's form processing requirements.</returns>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eSaveType</paramref> is set as <c>cnInsertNull</c> on a <paramref>sColumnName</paramref> also defind as not nullable.</exception>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.DataType">
            ############################################################
             <summary>
             Gets/sets a value representing the input's data type.
             </summary>
             <returns>Enumeration representing the input's data type.</returns>
            ############################################################
             <LastUpdated>February 9, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.ValueType">
            ############################################################
             <summary>
             Gets/sets a value representing the input's stored value type.
             </summary>
             <returns>Enumeration representing the input's stored value type.</returns>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.IsNullable">
            ############################################################
             <summary>
             Gets/sets a value indicating if the column permits null values.
             </summary>
             <returns>Boolean value indicating if the column permits null values.</returns>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eSaveType</paramref> is set as <c>cnInsertNull</c> on a <paramref>sColumnName</paramref> also defind as not nullable.</exception>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.ID">
            ############################################################
             <summary>
             Gets/sets a value representing the HTML input's base name.
             </summary>
             <remarks>
             NOTE: The related property of InputData.InputAlias is read-only.
             </remarks>
             <returns>String representing the HTML input's unique base name.</returns>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.TableName">
            ############################################################
             <summary>
             Gets a value representing the input's source table name.
             </summary>
             <remarks>
             NOTE: The related property of InputData.InputAlias is read-only.
             </remarks>
             <returns>String representing the input's source table name.</returns>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Web.Controls.Input.ColumnName">
            ############################################################
             <summary>
             Gets a value representing the input's source column name.
             </summary>
             <remarks>
             NOTE: The related property of InputData.InputAlias is read-only.
             </remarks>
             <returns>String representing the input's source column name.</returns>
            ############################################################
             <LastUpdated>November 27, 2009</LastUpdated>
        </member>
        <member name="T:Cn.Web.JavaScript">
            ########################################################################################################################
             <summary>
             General helper methods.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>July 29, 2005</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.JavaScript.BaseDirectory(Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Retrieves the defined UI directory from the webserver's root.
             </summary>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <returns>String representing the defined UI directory from the webserver's root.</returns>
            ############################################################
             <LastUpdated>June 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.JavaScript.BaseDirectory(System.Boolean)">
            ############################################################
             <summary>
             Retrieves the defined UI directory from the webserver's root.
             </summary>
             <param name="bDebug">Boolean representing the debug status of the current enviroment.</param>
             <returns>String representing the defined UI directory from the webserver's root.</returns>
            ############################################################
             <LastUpdated>June 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.JavaScript.BaseURL(Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Retrieves the defined UI URL.
             </summary>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <returns>String representing the defined UI URL.</returns>
            ############################################################
             <LastUpdated>June 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.JavaScript.BaseURL(System.Boolean)">
            ############################################################
             <summary>
             Retrieves the defined UI URL.
             </summary>
             <param name="bDebug">Boolean representing the debug status of the current enviroment.</param>
             <returns>String representing the defined UI URL.</returns>
            ############################################################
             <LastUpdated>June 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.JavaScript.ToArray(System.String[])">
            ############################################################
             <summary>
             Transforms the passed array into the JavaScript inline definition equivlent.
             </summary>
             <param name="a_sArray">Array of strings to convert into a JavaScript array of strings.</param>
             <returns>String representing the JavaScript inline definition equivlent of the passed <paramref>a_sArray</paramref>.</returns>
            ############################################################
             <LastUpdated>August 7, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Web.JavaScript.GenerateFileReferences(Cn.Web.JavaScript.enumJavaScriptFiles,Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Renders the requested JavaScript file references.
             </summary>
             <remarks>
             NOTE: <c>cnCnRendererComplexSorter</c> is not yet implemented.
             </remarks>
             <param name="eJavaScriptFile">Enumeration representing the JavaScript/DHTML code to return.</param>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
             <returns>String representing the required JavaScript file script block(s) for the referenced <paramref>eJavaScriptFile</paramref>.</returns>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eJavaScriptFile</paramref> is unreconized.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eJavaScriptFile</paramref> is <c>cnRenderAllJavaScript</c> and the referenced <paramref>oSettings.RenderedJavaScriptFiles</paramref> signanifies that some or all of the JavaScript file script blocks have been rendered previously.</exception>
            ############################################################
             <LastUpdated>March 3, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.JavaScript.GetFormID(System.String)">
            ############################################################
             <summary>
             Determines the referenced HTML Form's ID via JavaScript code.
             </summary>
             <remarks>
             NOTE: If the passed <paramref name="sFormIDNameOrIndex"/> is null or a null-string, the ID of the first HTML Form will be returned.
             </remarks>
             <param name="sFormIDNameOrIndex">String representing the HTML Form's ID, Name or Index.</param>
             <returns>String containing JavaScript code to determine the referenced HTML Form's ID.</returns>
            ############################################################
             <LastUpdated>November 23, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.JavaScript.DoGetScriptReferences(Cn.Web.JavaScript.enumJavaScriptFiles,System.Int32@,System.String,System.String,System.String,System.Boolean)">
            ############################################################
             <summary>
             Returns the requested JavaScript file references.
             </summary>
             <remarks>
             NOTE: <c>cnCnRendererComplexSorter</c> is not yet implemented.
             </remarks>
             <param name="eJavaScriptFile">Enumeration representing the JavaScript/DHTML code to return.</param>
             <param name="iRenderedJavaScriptFiles">Reference to an integer representing a bitwise value indicating which JavaScript file references have been rendered previously.</param>
             <param name="sEndUserMessagesLanguageCode">String representing the end user's ISO639 2-letter language code.</param>
             <param name="sPath">String representing the path from the web oRootDir to the JavaScript oFiles.</param>
             <param name="sCRLF">String representing the line break character(s) to be included in the return value.</param>
             <returns>String representing the required JavaScript file script block(s) for the referenced <paramref>eJavaScriptFile</paramref>.</returns>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eJavaScriptFile</paramref> is unreconized.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eJavaScriptFile</paramref> is <c>cnRenderAllJavaScript</c> and the passed <paramref>iRenderedJavaScriptFiles</paramref> signanifies that some or all of the JavaScript file script blocks have been rendered previously.</exception>
            ############################################################
             <LastUpdated>March 3, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Web.JavaScript.BlockStart">
            ############################################################
             <summary>
             Gets the start of a JavaScript code block.
             </summary>
            ############################################################
             <LastUpdated>May 15, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.JavaScript.BlockEnd">
            ############################################################
             <summary>
             Gets the end of a JavaScript code block.
             </summary>
            ############################################################
             <LastUpdated>May 15, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Web.JavaScript.ServerSideScriptFileExtension">
            ############################################################
             <summary>
             Gets the file extension of the defined server side scripting enviroment.
             </summary>
            ############################################################
             <LastUpdated>January 8, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Web.JavaScript.enumJavaScriptFiles">
            <summary>Renderer JavaScript functionality types.</summary>
        </member>
        <member name="F:Cn.Web.JavaScript.enumJavaScriptFiles.cnCn">
            <summary>Cn JavaScript namespace.</summary>
        </member>
        <member name="F:Cn.Web.JavaScript.enumJavaScriptFiles.cnCnTools">
            <summary>Cn.Tools JavaScript class.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Cn.Web.JavaScript.enumJavaScriptFiles.cnCnInputs" -->
        <!-- Badly formed XML comment ignored for member "F:Cn.Web.JavaScript.enumJavaScriptFiles.cnCnInputsValidation" -->
        <member name="F:Cn.Web.JavaScript.enumJavaScriptFiles.cnCnInputsDateTime">
            <summary>Cn.Inputs.DateTime JavaScript class.</summary>
        </member>
        <member name="F:Cn.Web.JavaScript.enumJavaScriptFiles.cnCnInputsComboBox">
            <summary>Cn.Inputs.ComboBox JavaScript class.</summary>
        </member>
        <member name="F:Cn.Web.JavaScript.enumJavaScriptFiles.cnCnInputsHTMLEditor">
            <summary>Cn.Renderer.Form.HTMLEditor JavaScript class.</summary>
        </member>
        <member name="F:Cn.Web.JavaScript.enumJavaScriptFiles.cnCnInputsMaxLength">
            <summary>Cn.Renderer.Form.MaxLength JavaScript class.</summary>
        </member>
        <member name="F:Cn.Web.JavaScript.enumJavaScriptFiles.cnCnInputsRadio">
            <summary>Cn.Web.Inputs.Radio JavaScript class.</summary>
        </member>
        <member name="F:Cn.Web.JavaScript.enumJavaScriptFiles.cnCnRendererForm">
            <summary>Cn.Renderer.Form JavaScript class.</summary>
        </member>
        <member name="F:Cn.Web.JavaScript.enumJavaScriptFiles.cnCnRendererComplexSorter">
            <summary>Cn.Renderer.ComplexSorter JavaScript class.</summary>
        </member>
        <member name="F:Cn.Web.JavaScript.enumJavaScriptFiles.cnCnRendererUserSelectedStack">
            <summary>Cn.Renderer.UserSelectedStack JavaScript class.</summary>
        </member>
        <member name="F:Cn.Web.JavaScript.enumJavaScriptFiles.cnYUI">
            <summary>YAHOO JavaScript namespace.</summary>
        </member>
        <member name="F:Cn.Web.JavaScript.enumJavaScriptFiles.cnYUICalendar">
            <summary>YAHOO.widget.Calendar_Core JavaScript class.</summary>
        </member>
        <member name="F:Cn.Web.JavaScript.enumJavaScriptFiles.cnYUIEvent">
            <summary>YAHOO.widget.Event JavaScript class.</summary>
        </member>
        <member name="F:Cn.Web.JavaScript.enumJavaScriptFiles.cnYUIDOM">
            <summary>YAHOO.utils.Dom JavaScript class.</summary>
        </member>
        <member name="F:Cn.Web.JavaScript.enumJavaScriptFiles.cnYUIRichTextEditor">
            <summary>FCKeditor Javascript functionality.</summary>
        </member>
        <member name="F:Cn.Web.JavaScript.enumJavaScriptFiles.cnRenderAllJavaScript">
            <summary>Renders all of the available JavaScript classes and namespaces.</summary>
        </member>
        <member name="F:Cn.Web.JavaScript.enumJavaScriptFiles.cnDisableJavaScriptRendering">
            <summary>Disables all JavaScript rendering from <see cref="T:Cn.Web.JavaScript">Renderer.JavaScript</see>.</summary>
        </member>
        <member name="T:Cn.Web.Inputs.enumInputTypes">
            <summary>Renderer Form input types.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumInputTypes.cnDefaultInput">
            <summary>Default input for this data type.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumInputTypes.cnText">
            <summary>XHTML-based text input.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumInputTypes.cnTextarea">
            <summary>XHTML-based textarea input.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumInputTypes.cnPassword">
            <summary>XHTML-based password input.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumInputTypes.cnDate">
            <summary>DHTML-based calendar date picker input.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumInputTypes.cnTime">
            <summary>DHTML-based time picker input.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumInputTypes.cnDateTime">
            <summary>DHTML-based calendar date/time picker input.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumInputTypes.cnOption">
            <summary>XHTML-based option group input.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumInputTypes.cnSelect">
            <summary>XHTML-based select input.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumInputTypes.cnComboBox">
            <summary>DHTML-based combobox input.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumInputTypes.cnFile">
            <summary>XHTML-based file input.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumInputTypes.cnHidden">
            <summary>XHTML-based hidden input.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumInputTypes.cnMultiSelect">
            <summary>XHTML-based multi-select input.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumInputTypes.cnCheckbox">
            <summary>XHTML-based checkbox input.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumInputTypes.cnCheckboxes">
            <summary>XHTML-based checkboxes group input.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumInputTypes.cnReadOnly">
            <summary>XHTML-based hidden input with value outputted to the screen.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumInputTypes.cnCheckedListBox">
            <summary>DHTML-based checked list box checkboxes group input.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumInputTypes.cnOptionListBox">
            <summary>DHTML-based option list box option group input.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumInputTypes.cnHTMLEditor">
            <summary>DHTML-based WYSIWYG HTML editor input.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumInputTypes.cnCustom">
            <summary>Specifies that this input will be rendered by the developer and not by the input collection.</summary>
        </member>
        <member name="T:Cn.Web.Inputs.enumUIHookTypes">
            <summary>Form programming "hook" types.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumUIHookTypes.cnFormAction">
            <summary>HTML form "action" attribute value for Renderer Form processing.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumUIHookTypes.cnFormDoSubmit">
            <summary>HTML button/submit "onclick" attribute value for Renderer Form client-side pre-processing.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumUIHookTypes.cnFormOnSubmit">
            <summary>HTML form "onsubmit" attribute value for Renderer Form client-side pre-processing.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumUIHookTypes.cnErrorMessagePopUp">
            <summary>HTML input "onfocus"/"onblur" atributes for the Renderer client-side error reporting.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumUIHookTypes.cnErrorMessageToolTip">
            <summary>HTML input "onmouseover"/"onmouseout" atributes for the Renderer client-side error reporting.</summary>
        </member>
        <member name="T:Cn.Web.Inputs.enumSaveTypes">
            <summary>Column validation/insertion descriptions.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumSaveTypes.cnID">
            <summary>Column is an ID (and is therefore implicitly required).</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumSaveTypes.cnRequired">
            <summary>Column value is required.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumSaveTypes.cnInsertIfPresent">
            <summary>Column is included within auto generated SQL statements if the user supplied value is non-blank. If the user supplied value is blank, the column is ignored.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumSaveTypes.cnInsertNullString">
            <summary>Column is included within auto generated SQL statements. If the user supplied value is blank, a null-string value is inserted into the column.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumSaveTypes.cnInsertNull">
            <summary>Column is included within auto generated SQL statements. If the user supplied value is blank, null is inserted into the column.</summary>
        </member>
        <member name="F:Cn.Web.Inputs.enumSaveTypes.cnIgnore">
            <summary>Column will not be included within auto generated SQL statements.</summary>
        </member>
        <member name="T:Cn.Web.Inputs.InputCollection">
            ########################################################################################################################
             <summary>
             Represents the collection of defined <c>Form</c> Inputs.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>November 26, 2009</LastFullCodeReview>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollection.#ctor">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
            ############################################################
             <LastUpdated>November 26, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollection.#ctor(Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
            ############################################################
             <LastUpdated>December 11, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollection.Reset">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
            ############################################################
             <LastUpdated>December 11, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollection.Reset(Cn.Web.Settings.Current)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="oSettings">Cn.Web.Settings.Current instance representing the current enviroment.</param>
            ############################################################
             <LastUpdated>December 11, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollection.GetFormIDJavaScript(System.String)">
            ############################################################
             <summary>
             Gets the HTML Form ID JavaScript code block.
             </summary>
             <param name="sInputAlias">String representing the HTML input's unique base name.</param>
             <returns>String representing the JavaScript code block to collect the HTML Form ID.</returns>
            ############################################################
             <LastUpdated>December 11, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollection.GetSetErrorJavaScript(Cn.Web.Inputs.InputData)">
            ############################################################
             <summary>
             Gets the Set error javascript code block
             </summary>
             <param name="oInputData">Object representing the InputData instance to deeply copy into this instance.</param>
             <returns>String representing the JavaScript code block to Set an error.</returns>
            ############################################################
             <LastUpdated>February 10, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Web.Inputs.InputCollection.GetIsRendererFormJavaScript">
            ############################################################
             <summary>
             Gets the IsRendererForm javascript code block
             </summary>
             <remarks>
             NORE: This is a very stupid little function, but it helps .GetValidationScript because this value is the only change between the base and Renderer.Form versions
             </remarks>
             <returns>String representing a JavaScript boolean value indicating if this is a Renderer.Form instance.</returns>
            ############################################################
             <LastUpdated>December 11, 2009</LastUpdated>
        </member>
        <member name="T:Cn.Web.Renderer.enumPageSections">
            <summary>Renderer List, Form and Report page sections.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.enumPageSections.cnPageHeader">
            <summary>Report page header section.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.enumPageSections.cnHeader">
            <summary>List/Form/Report header section.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.enumPageSections.cnDetailHeader">
            <summary>List/Form detail header section.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.enumPageSections.cnDetail">
            <summary>List/Form record detail section.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.enumPageSections.cnDetail_NewForm">
            <summary>Form new record detail section.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.enumPageSections.cnMissingRecord">
            <summary>List/Form missing record section.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.enumPageSections.cnDetailFooter">
            <summary>List/Form detail footer section.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.enumPageSections.cnNoResults">
            <summary>List/Form/Report no results returned section.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.enumPageSections.cnFooter">
            <summary>List/Form/Report footer section.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.enumPageSections.cnPageFooter">
            <summary>Report page footer section.</summary>
        </member>
        <member name="T:Cn.Web.Renderer.enumGeneralInputTypes">
            <summary>General Renderer input types.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.enumGeneralInputTypes.cnUserSelectedStackCheckbox">
            <summary>User selected stack checkbox input (and associated JavaScript code).</summary>
        </member>
        <member name="F:Cn.Web.Renderer.enumGeneralInputTypes.cnComplexSorter">
            <summary>DHTML complex column sorter.<para/>Allows the end user to define their own column sorting.</summary>
        </member>
        <member name="F:Cn.Web.Renderer.enumGeneralInputTypes.cnQuickSearch">
            <summary>RendererSearchForm quick search criteria form.</summary>
        </member>
        <member name="T:Cn.Data.Picklists">
            ########################################################################################################################
             <summary>
             Represents a collection of picklists.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>May 29, 2007</LastFullCodeReview>
        </member>
        <member name="M:Cn.Data.Picklists.#ctor(Cn.Collections.MultiArray)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oPicklistData"><c>MultiArray</c> representing the entire, self-referencing picklists structure.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklistData</paramref> is null or contains no <c>Rows</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklistData</paramref> does not contain the required column names as defined by <c>GetColumnNames</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklistData</paramref> contains one or more <c>Rows</c> with a non-numeric value in 'PicklistID'.</exception>
            ############################################################
             <LastUpdated>May 10, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.Reset(Cn.Collections.MultiArray)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="oPicklistData"><c>MultiArray</c> representing the entire, self-referencing picklists structure.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklistData</paramref> is null or contains no <c>Rows</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklistData</paramref> does not contain the required column names as defined by <c>GetColumnNames</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklistData</paramref> contains one or more <c>Rows</c> with a non-numeric value in 'PicklistID'.</exception>
            ############################################################
             <LastUpdated>May 10, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.DoReset(System.String,Cn.Collections.MultiArray)">
            ############################################################
             <summary>
             Resets the class to its initilized state while loading the provided picklist data into this instance.
             </summary>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="oPicklistData"><c>MultiArray</c> representing the entire, self-referencing picklists structure.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklistData</paramref> is null or contains no <c>Rows</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklistData</paramref> does not contain the required column names as defined by <c>GetColumnNames</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oPicklistData</paramref> contains one or more <c>Rows</c> with a non-numeric value in 'PicklistID'.</exception>
            ############################################################
             <LastUpdated>January 27, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.Exists(System.String)">
            ############################################################
             <summary>
             Determines if this instance contains the referenced picklist.
             </summary>
             <param name="sPicklistName">String representing the picklist name to locate.</param>
             <returns>Boolean value signaling the existance of the passed <paramref>sPicklistName</paramref>.<para/>Returns true if the passed <paramref>sPicklistName</paramref> is defined within this instance, or false if it is not present.</returns>
            ############################################################
             <LastUpdated>September 12, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.Exists(System.String,System.String)">
            ############################################################
             <summary>
             Determines if this instance contains the referenced picklist/decode value pair.
             </summary>
             <param name="sPicklistName">String representing the picklist name to locate.</param>
             <param name="sDecodeValue">String representing the value to locate.</param>
             <returns>Boolean value signaling the existance of the passed <paramref>sPicklistName</paramref>/<paramref>sDecodeValue</paramref> pair.<para/>Returns true if the <paramref>sPicklistName</paramref>/<paramref>sDecodeValue</paramref> pair is defined within this instance, or false if it is not present.</returns>
            ############################################################
             <LastUpdated>February 2, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.Exists(System.String,System.String[])">
            ############################################################
             <summary>
             Determines if this instance contains all of the passed decode values within the referenced picklist.
             </summary>
             <param name="sPicklistName">String representing the picklist name to locate.</param>
             <param name="a_sDecodeValues">String array representing the values to decode.</param>
             <returns>Boolean value signaling if all of the passed <paramref>a_sDecodeValues</paramref> are present within the <paramref>sPicklistName</paramref>.<para/>Returns true if all of the <paramref>a_sDecodeValues</paramref> were present within the <paramref>sPicklistName</paramref>, or false if one or more <paramref>a_sDecodeValues</paramref> were not present.</returns>
            ############################################################
             <LastUpdated>February 2, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.Exists(Cn.Collections.MultiArray,System.String,System.Boolean)">
            ############################################################
             <summary>
             Determines if the passed structure contains the referenced decode value.
             </summary>
             <param name="oPicklist">MultiArray representing the single picklist to search.</param>
             <param name="sDecodeValue">String representing the value to decode.</param>
             <param name="bStrictDecodes">Boolean value signaling if the decode process is strict.</param>
             <returns>Boolean value signaling the existance of the passed <paramref>sDecodeValue</paramref> within the passed <paramref>oPicklist</paramref>.<para/>Returns true if <paramref>sDecodeValue</paramref> is defined within <paramref>oPicklist</paramref>, or false if it is not present.</returns>
            ############################################################
             <LastUpdated>February 2, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.Exists(Cn.Collections.MultiArray,System.String[],System.Boolean)">
            ############################################################
             <summary>
             Determines if the passed structure contains all of the passed decode values within the referenced picklist.
             </summary>
             <param name="oPicklist">MultiArray representing the single picklist to search.</param>
             <param name="a_sDecodeValues">String array representing the values to decode.</param>
             <param name="bStrictDecodes">Boolean value signaling if the decode process is strict.</param>
             <returns>Boolean value signaling if all of the passed <paramref>a_sDecodeValues</paramref> are present within the <paramref>sPicklistName</paramref>.<para/>Returns true if all of the <paramref>a_sDecodeValues</paramref> were present within the <paramref>sPicklistName</paramref>, or false if one or more <paramref>a_sDecodeValues</paramref> were not present.</returns>
            ############################################################
             <LastUpdated>February 2, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.Encoder(System.String,System.String)">
            ############################################################
             <summary>
             Encodes a specific value utilizing the referenced picklist.
             </summary>
             <param name="sPicklistName">String representing the picklist name to query.</param>
             <param name="sEncodeValue">String representing the value to encode.</param>
             <returns>String value containing the encoded <paramref>sEncodeValue</paramref> as defined within the passed <paramref>sPicklistName</paramref>.</returns>
            ############################################################
             <LastUpdated>April 16, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.Encoder(System.String,System.String[])">
            ############################################################
             <summary>
             Encodes the provided values utilizing the referenced picklist.
             </summary>
             <param name="sPicklistName">String representing the picklist name to query.</param>
             <param name="a_sEncodeValues">String array representing the values to encode.</param>
             <returns>String array containing the encoded <paramref>a_sEncodeValues</paramref> as defined within the passed <paramref>sPicklistName</paramref>.</returns>
            ############################################################
             <LastUpdated>April 16, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.Encoder(Cn.Collections.MultiArray,System.String,System.Boolean)">
            ############################################################
             <summary>
             Encodes a specific value utilizing the passed structure (optionally utilizing a strict encode).
             </summary>
             <param name="oPicklist">MultiArray representing the single picklist to search.</param>
             <param name="sEncodeValue">String representing the value to encode.</param>
             <param name="bStrictEncodes">Boolean value signaling if the encode process is strict.</param>
             <returns>String value containing the encoded <paramref>sEncodeValue</paramref> as defined within the passed <paramref>sPicklistName</paramref> (optionally utilizing a strict encode).</returns>
            ############################################################
             <LastUpdated>April 16, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.Encoder(Cn.Collections.MultiArray,System.String[],System.Boolean)">
            ############################################################
             <summary>
             Encodes the provided values utilizing the passed structure (optionally utilizing strict encodes).
             </summary>
             <param name="oPicklist">MultiArray representing the single picklist to search.</param>
             <param name="a_sEncodeValues">String array representing the values to encode.</param>
             <param name="bStrictEncodes">Boolean value signaling if the encode process is strict.</param>
             <returns>String array containing the encoded <paramref>a_sEncodeValues</paramref> as defined within the passed <paramref>oPicklist</paramref> (optionally utilizing strict encodes).</returns>
            ############################################################
             <LastUpdated>April 16, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.Decoder(System.String,System.String)">
            ############################################################
             <summary>
             Decodes a specific value utilizing the referenced picklist.
             </summary>
             <param name="sPicklistName">String representing the picklist name to query.</param>
             <param name="sDecodeValue">String representing the value to decode.</param>
             <returns>String value containing the decoded <paramref>sDecodeValue</paramref> as defined within the passed <paramref>sPicklistName</paramref>.</returns>
            ############################################################
             <LastUpdated>February 2, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.Decoder(System.String,System.String[])">
            ############################################################
             <summary>
             Decodes the provided values utilizing the referenced picklist.
             </summary>
             <param name="sPicklistName">String representing the picklist name to query.</param>
             <param name="a_sDecodeValues">String array representing the values to decode.</param>
             <returns>String array containing the decoded <paramref>a_sDecodeValues</paramref> as defined within the passed <paramref>sPicklistName</paramref>.</returns>
            ############################################################
             <LastUpdated>February 2, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.Decoder(Cn.Collections.MultiArray,System.String,System.Boolean)">
            ############################################################
             <summary>
             Decodes a specific value utilizing the passed structure (optionally utilizing a strict decode).
             </summary>
             <param name="oPicklist">MultiArray representing the single picklist to search.</param>
             <param name="sDecodeValue">String representing the value to decode.</param>
             <param name="bStrictDecodes">Boolean value signaling if the decode process is strict.</param>
             <returns>String value containing the decoded <paramref>sDecodeValue</paramref> as defined within the passed <paramref>sPicklistName</paramref> (optionally utilizing a strict decode).</returns>
            ############################################################
             <LastUpdated>February 2, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.Decoder(Cn.Collections.MultiArray,System.String[],System.Boolean)">
            ############################################################
             <summary>
             Decodes the provided values utilizing the passed structure (optionally utilizing strict decodes).
             </summary>
             <param name="oPicklist">MultiArray representing the single picklist to search.</param>
             <param name="a_sDecodeValues">String array representing the values to decode.</param>
             <param name="bStrictDecodes">Boolean value signaling if the decode process is strict.</param>
             <returns>String array containing the decoded <paramref>a_sDecodeValues</paramref> as defined within the passed <paramref>oPicklist</paramref> (optionally utilizing strict decodes).</returns>
            ############################################################
             <LastUpdated>February 2, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.Items(System.String,System.String)">
            ############################################################
             <summary>
             Retrieves a structure containing the single entry for a specific decode value within the referenced picklist.
             </summary>
             <param name="sPicklistName">String representing the picklist name to locate.</param>
             <param name="sDecodeValue">String representing the value to locate.</param>
             <returns>MultiArray containing the single entry for the passed <paramref>sDecodeValue</paramref> within the passed <paramref>sPicklistName</paramref> defined within this instance, or null if it was not defined.</returns>
            ############################################################
             <LastUpdated>February 2, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.Items(System.String,System.String[])">
            ############################################################
             <summary>
             Retrieves a structure containing the entries for the provided decode values utilizing the referenced picklist.
             </summary>
             <param name="sPicklistName">String representing the picklist name to locate.</param>
             <param name="a_sDecodeValues">String array representing the values to locate.</param>
             <returns>MultiArray containing the entries for the passed <paramref>a_sDecodeValues</paramref> as defined within the passed <paramref>sPicklistName</paramref> defined within this instance, or null if it was not defined.</returns>
            ############################################################
             <LastUpdated>February 2, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.Items(Cn.Collections.MultiArray,System.String,System.Boolean)">
            ############################################################
             <summary>
             Retrieves a structure containing the single entry for a specific decode value within the passed structure.
             </summary>
             <param name="oPicklist">MultiArray representing the single picklist to search.</param>
             <param name="sDecodeValue">String representing the value to locate.</param>
             <param name="bStrictDecodes">Boolean value signaling if the decode process is strict.</param>
             <returns>MultiArray containing the single entry for the passed <paramref>sDecodeValue</paramref> within the passed <paramref>oPicklist</paramref>, or null if it was not defined.</returns>
            ############################################################
             <LastUpdated>February 5, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.Items(Cn.Collections.MultiArray,System.String[],System.Boolean)">
            ############################################################
             <summary>
             Retrieves a structure containing the entries for the provided decode values utilizing the passed structure.
             </summary>
             <param name="oPicklist">MultiArray representing the single picklist to search.</param>
             <param name="a_sDecodeValues">String array representing the values to locate.</param>
             <param name="bStrictDecodes">Boolean value signaling if the decode process is strict.</param>
             <returns>MultiArray containing the entries for the passed <paramref>a_sDecodeValues</paramref> as defined within the passed <paramref>oPicklist</paramref>, or null if it was not defined.</returns>
            ############################################################
             <LastUpdated>February 5, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.Picklist(System.String)">
            ############################################################
             <summary>
             Retrieves a structure containing the entries for the referenced picklist.
             </summary>
             <param name="sPicklistName">String representing the picklist name to locate.</param>
             <returns>MultiArray containing all the entries for the passed <paramref>sPicklistName</paramref> defined within this instance, or null if it was not defined.</returns>
            ############################################################
             <LastUpdated>February 2, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.Picklist(System.String[],System.String[])">
            ############################################################
             <summary>
             Retrieves a structure containing the passed collections of data and description values in a single picklist-like form.
             </summary>
             <param name="a_sDataValues">String array representing the encoded values.</param>
             <param name="a_sDescriptionValues">String array representing the decoded value equivalents.</param>
             <returns>
             MultiArray containing the passed <paramref>a_sDataValues</paramref>/<paramref>a_sDescriptionValues</paramref> paired entries in a virtual picklist.
             <para/>NOTE: The <paramref>a_sDataValues</paramref>/<paramref>a_sDescriptionValues</paramref> are paired off based on their related array indexes (i.e. <paramref>a_sDataValues[2]</paramref>paramref&gt; is paired up with <paramref>a_sDescriptionValues[2]</paramref>, etc.). 
             <para/>NOTE: The values for the 'ID', 'PicklistID', and 'DisplayOrder' columns are filled with junk data (hence being returned in a 'single picklist-like form'). The returned structure is in no way related to any loaded picklist collection.
             </returns>
             <exception cref="T:Cn.CnException">Thrown when <paramref>a_sDataValues</paramref> is null or empty.</exception>
             <exception cref="T:Cn.CnException">Thrown when <paramref>a_sDescriptionValues</paramref> is null or empty.</exception>
             <exception cref="T:Cn.CnException">Thrown when the dimensions of <paramref>a_sDataValues</paramref> and <paramref>a_sDescriptionValues</paramref> do not match.</exception>
            ############################################################
             <LastUpdated>January 27, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.GetPicklistID(System.String,System.Int32@)">
            ############################################################
             <summary>
             Returns the PicklistID of the referenced picklist from within the g_oData MultiArray
             </summary>
             <param name="sPicklistName">String representing the picklist name to locate.</param>
             <param name="i">Reference to an integer which is returned pre-incremented to the MultiArray 0-based Row index to begin any subsequent searches.</param>
             <returns>Integer representing the picklist id of the passed <paramref>sPicklistName</paramref>.</returns>
            ############################################################
             <LastUpdated>February 2, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.GetLogicalPicklist(System.String,System.Int32@,System.Int32@)">
            ############################################################
             <summary>
             Determines the starting index and count of picklist items of the referenced picklist within this instance's data.
             </summary>
             <param name="sPicklistName">String representing the picklist name to locate.</param>
             <param name="iStartingIndex">0-based integer representing the picklist items starting index (updated by reference).</param>
             <param name="iEndingIndex">0-based integer representing the picklist items ending index (updated by reference).</param>
            ############################################################
             <LastUpdated>February 3, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.ProcessPicklist(Cn.Collections.MultiArray,System.String[],System.Boolean,System.Int32,System.Int32,Cn.Data.Picklists.enumProcessPicklistModes,System.String[]@,Cn.Collections.MultiArray@)">
            ############################################################
             <summary>
             Processes the referenced picklist based on the provided mode.
             </summary>
             <param name="oPicklist">MultiArray representing the picklist data to search.</param>
             <param name="a_sDecodeValues">String array representing the values to decode.</param>
             <param name="bStrictDecodes">Boolean value signaling if the decode process is strict.</param>
             <param name="iStartingIndex">0-based integer representing the picklist items starting index.</param>
             <param name="iEndingIndex">0-based integer representing the picklist items ending index.</param>
             <param name="eMode">Enumeration representing the mode of processing to undertake against the provided picklist items.</param>
             <param name="a_sDecodedValues">String array representing the decoded values (updated by reference).</param>
             <param name="oGetItems">MultiArray representing the initilized picklist items collection (updated by reference).</param>
             <returns>Boolean value indicating if all of the passed <paramref>a_sDecodeValues</paramref> were found within the referenced picklist items.</returns>
            ############################################################
             <LastUpdated>April 19, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Data.Picklists.StrictDecodes">
            ############################################################
             <summary>
             Gets/sets a boolean value indicating if this instance utilizes strict decodes.
             </summary>
             <remarks>
             When "strict decodes" is enabled, only values present within the referenced picklist are returned from <c>Decode</c> calls.
             <para/>In "strict decodes" mode: If the passed value to decode is not within the referenced picklist, a null-string is returned.
             <para/>In non-"strict decodes" mode: If the passed value to decode is not within the referenced picklist, the passed value is returned.
             </remarks>
             <value>Boolean value signaling if this instance utilizes strict decodes by default.<para/>Returns true if this instance utilizes strict decodes by default, or false if it does not.</value>
            ############################################################
             <LastUpdated>August 25, 2005</LastUpdated>
        </member>
        <member name="P:Cn.Data.Picklists.GetData">
            ############################################################
             <summary>
             Assists in the collection of the underlying structure which defines this instance.
             </summary>
             <value>PicklistCollectionHelper instance configured to collect the underlying structure which defines this instance.</value>
            ############################################################
             <LastUpdated>January 14, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Data.Picklists.Data">
            ############################################################
             <summary>
             Gets a deep copy of the underlying structure which defines this instance.
             </summary>
             <value>Deep copy of the MultiArray which defines the picklists of this instance.</value>
            ############################################################
             <LastUpdated>December 18, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Data.Picklists.ColumnAssociationsPicklistName">
            ############################################################
             <summary>
             Gets the name of the column associations picklist, which defines the default column name to picklist relationships.
             </summary>
             <value>String representing the name of the column associations picklist.</value>
            ############################################################
             <LastUpdated>May 25, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Data.Picklists.MetaDataPicklistName">
            ############################################################
             <summary>
             Gets the name of the meta data picklist, which defines all other picklists within the collection.
             </summary>
             <value>String representing the name of the meta data picklist.</value>
            ############################################################
             <LastUpdated>May 25, 2007</LastUpdated>
        </member>
        <member name="T:Cn.Data.Picklists.PicklistCollectionHelper">
            ########################################################################################################################
             <summary>
             Assists in the collection of <c>Picklist</c> data.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>May 29, 2007</LastFullCodeReview>
        </member>
        <member name="M:Cn.Data.Picklists.PicklistCollectionHelper.#ctor(System.String[],System.String,System.String)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
            ############################################################
             <LastUpdated>December 24, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.Picklists.PicklistCollectionHelper.Data(Cn.Data.DBMS,Cn.Data.Picklists.PicklistCollectionHelper.structPicklistTable[])">
            ############################################################
             <summary>
             Retrieves the data for the parent type based on the provided information and data source.
             </summary>
             <param name="oDBMS"><c>DBMS</c> instance representing an active connection to the related data source.</param>
             <param name="a_oPicklistTables">Array of <c>structPicklistTables</c> representing the table (or stored procedure) information for where to collect the picklist definitions.</param>
             <returns><c>MultiArray</c> instance based on the provided information and data source.</returns>
            ############################################################
             <LastUpdated>December 24, 2009</LastUpdated>
        </member>
        <member name="T:Cn.Data.Picklists.PicklistCollectionHelper.structPicklistTable">
            <summary>Structure representing the table (or stored procedure) information for where to collect the picklist definitions.</summary>
        </member>
        <member name="F:Cn.Data.Picklists.PicklistCollectionHelper.structPicklistTable.PicklistName">
            <summary>Gets/sets a string value representing the name of this picklist.</summary>
        </member>
        <member name="F:Cn.Data.Picklists.PicklistCollectionHelper.structPicklistTable.TableName">
            <summary>Gets/sets a string value representing the table (or stored procedure) name where the picklist definition is represented.</summary>
        </member>
        <member name="F:Cn.Data.Picklists.PicklistCollectionHelper.structPicklistTable.DataColumnName">
            <summary>Gets/sets a string value representing the column name where the value that is saved by refering tables is represented (generally the primary key column).</summary>
        </member>
        <member name="F:Cn.Data.Picklists.PicklistCollectionHelper.structPicklistTable.DescriptionColumnName">
            <summary>Gets/sets a string value representing the column name where the value that is displayed is represented.</summary>
        </member>
        <member name="F:Cn.Data.Picklists.PicklistCollectionHelper.structPicklistTable.IsActiveColumnName">
            <summary>Gets/sets a string value representing the column name where the value indicating if this is an active entry is represented.</summary>
        </member>
        <member name="F:Cn.Data.Picklists.PicklistCollectionHelper.structPicklistTable.OrderByClause">
            <summary>Gets/sets a string value representing the SQL Order By clause to be used when collecting the picklist definition.</summary>
        </member>
        <member name="F:Cn.Data.Picklists.PicklistCollectionHelper.structPicklistTable.TableNameIsStoredProcedure">
            <summary>Gets/sets a boolean value signaling if the <c>TableName</c> field is actually the name of a stored procedure.</summary>
        </member>
        <member name="T:Cn.Data.Pagination">
            ########################################################################################################################
             <summary>
             Enables data source independant pagination logic utilizing a collection of 'ResultsStacks', each of which tracks a single 'tables' collection of 'IDs'.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>August 16, 2005</LastFullCodeReview>
        </member>
        <member name="M:Cn.Data.Pagination.#ctor">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
            ############################################################
             <LastUpdated>December 24, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.Reset">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
            ############################################################
             <LastUpdated>December 24, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.#ctor(System.String)">
            ############################################################
             <summary>
             Initializes the class based on the provided structure.
             </summary>
             <param name="sResultsStack">String representing an instance of a Pagination class.</param>
            ############################################################
             <LastUpdated>December 21, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.Reset(System.String)">
            ############################################################
             <summary>
             Resets the class based on the provided structure.
             </summary>
             <param name="sResultsStack">String representing an instance of a Pagination class.</param>
            ############################################################
             <LastUpdated>December 24, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            ############################################################
             <summary>
             Initializes the class based on the provided SerializationInfo.
             </summary>
             <param name="info">Standard SerializationInfo object.</param>
             <param name="ctxt">Standard StreamingContext object.</param>
            ############################################################
             <LastUpdated>December 21, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            ############################################################
             <summary>
             Stores the state of the class into the provided SerializationInfo.
             </summary>
             <param name="info">Standard SerializationInfo object.</param>
             <param name="ctxt">Standard StreamingContext object.</param>
            ############################################################
             <LastUpdated>December 21, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.Load(System.String)">
            ############################################################
             <summary>
             Loads the provided pagination data into this instance.
             </summary>
             <remarks>
             A properly formed string representation of a Pagination class looks something like this:
             <para/>OrderByClause:StartRecord|TableName1:IDColumn1:ID1:ID2:ID3|TableName2:IDColumn2:ID4:ID5
             <para/>Where:
             <para/>'|' represents the developer defined 'PrimaryDelimiter'.
             <para/>':' represents the developer defined 'SecondaryDelimiter'.
             <para/>'OrderByClause' represents the SQL compliant ordering statement.
             <para/>'StartRecord' represents the 1-based positive interger indicating the starting record number for this 'results window'.
             <para/>'TableName1'/'TableName2' represent 'table names' which signal to the developer the source of their associated 'IDs'. This value does not need to match the actual 'table name' within the underlying data source. This value is simply a signal to the developer indicating which underlying structure to use.
             <para/>'IDColumn1'/'IDColumn2' represent 'ID column names' which signal to the developer where the associated 'IDs' are held. This value does not need to match the actual 'ID column name' within the underlying data source. This value is simply a signal to the developer indicating which underlying structure to use.
             <para/>'ID1'...'ID5' represent the unique 'IDs' that individually identify a specific record within the associated 'table'.
             <para/>NOTE: Each 'TableName:IDColumn' pair must be unique within an instance. This data is used to uniquely identify each collection of 'IDs'.
             <para/>NOTE: Since this function is "foward facing" (meaning it deals with unscrubbed, user supplied data), errors are not raised. This function simply returns false if the passed <paramref>sResultsStack</paramref> is malformed.
             </remarks>
             <param name="sResultsStack">String representing an instance of a Pagination class.</param>
             <returns>Boolean value signaling if the data load was a success.<para/>Returns true if the passed <paramref>sResultsStack</paramref> was successfully loaded, or false if it was not.</returns>
            ############################################################
             <LastUpdated>January 12, 2006</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.Load(System.String,System.String,System.String)">
            ############################################################
             <summary>
             Loads the provided pagination data into this instance.
             </summary>
             <param name="sTableName">String representing the 'table name' within the underlying data source.</param>
             <param name="sIDColumn">String representing the 'ID column name' for the passed <paramref>sTableName</paramref> within the underlying data source.</param>
             <param name="sID">String representing the unique value that individually identifies a specific record.</param>
             <remarks>
             If the passed <paramref>sTableName</paramref>/<paramref>sIDColumn</paramref> pair is already present within this instance, its 'IDs' collection is replaced by the passed <paramref>sID</paramref> (e.g. any current 'IDs' for the <paramref>sTableName</paramref>/<paramref>sIDColumn</paramref> pair are lost).
             <para/>NOTE: Both <paramref>sTableName</paramref> and <paramref>sIDColumn</paramref> are compared as case insensitive.
             <para/>NOTE: Each <paramref>sTableName</paramref>/<paramref>sIDColumn</paramref> pair must be unique within an instance. This data is used to uniquely identify each collection of 'IDs'.
             </remarks>
            ############################################################
             <LastUpdated>June 27, 2006</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.Load(System.String,System.String,System.String[])">
            ############################################################
             <summary>
             Loads the provided pagination data into this instance.
             </summary>
             <param name="sTableName">String representing the 'table name' within the underlying data source.</param>
             <param name="sIDColumn">String representing the 'ID column name' for the passed <paramref>sTableName</paramref> within the underlying data source.</param>
             <param name="a_sIDs">String array representing the unique values that individually identify a specific records.</param>
             <remarks>
             If the passed <paramref>sTableName</paramref>/<paramref>sIDColumn</paramref> pair is already present within this instance, its 'IDs' collection is replaced by the passed <paramref>a_sIDs</paramref> (e.g. any current 'IDs' for the <paramref>sTableName</paramref>/<paramref>sIDColumn</paramref> pair are lost).
             <para/>NOTE: Both <paramref>sTableName</paramref> and <paramref>sIDColumn</paramref> are compared as case insensitive.
             <para/>NOTE: Each <paramref>sTableName</paramref>/<paramref>sIDColumn</paramref> pair must be unique within an instance. This data is used to uniquely identify each collection of 'IDs'.
             </remarks>
            ############################################################
             <LastUpdated>June 27, 2006</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.ToString">
            ############################################################
             <summary>
             Converts the data stored within this instance into its equivalent string representation.
             </summary>
             <returns>String representing this instance of a Pagaination class.</returns>
            ############################################################
             <LastUpdated>September 7, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.Table(System.Int32)">
            ############################################################
             <summary>
             Returns a structure that represents the stack element at the passed index.
             </summary>
             <param name="iIndex">0-based integer representing the desired 'table' element index.</param>
             <returns>PaginationTable class representing the 'table name', 'ID column name' and 'IDs' collection of the passed <paramref>iIndex</paramref>.</returns>
            ############################################################
             <LastUpdated>June 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.Table(System.String,System.String)">
            ############################################################
             <summary>
             Returns a structure that represents the stack element at the passed index.
             </summary>
             <param name="sTableName">String representing the 'table name' within the underlying data source.</param>
             <param name="sIDColumn">String representing the 'ID column name' for the passed <paramref>sTableName</paramref> within the underlying data source.</param>
             <returns>PaginationTable class representing the 'table name', 'ID column name' and 'IDs' collection of the passed <paramref>iIndex</paramref>.</returns>
            ############################################################
             <LastUpdated>April 21, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.Range(System.Int32,System.Int32)">
            ############################################################
             <summary>
             Retrieves a structure that represents the referenced range of 'IDs'.
             </summary>
             <param name="iStartRecord">1-based integer representing the starting 'ID' index.</param>
             <param name="iMaxReturnIDs">1-based integer representing the maximum number of 'IDs' to return.</param>
             <returns>Pagination class that represents the range of 'IDs' beginning with the passed <paramref>iStartRecord</paramref> up to a total of <paramref>iMaxReturnIDs</paramref>.</returns>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>iStartRecord</paramref> is outside the proper range (greater then or equal to zero).</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>iMaxReturnIDs</paramref> is outside the proper range (greater then zero).</exception>
            ############################################################
             <LastUpdated>August 23, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.RemoveTable(System.String,System.String)">
            ############################################################
             <summary>
             Removes the referenced 'table name'/'ID column name' pair from this instance.
             </summary>
             <remarks>
             NOTE: Both <paramref>sTableName</paramref> and <paramref>sIDColumn</paramref> are compared as case insensitive.
             </remarks>
             <param name="sTableName">String representing the desired table name.</param>
             <param name="sIDColumn">String representing the desired ID column name.</param>
            ############################################################
             <LastUpdated>May 31, 2004</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.RemoveTable(System.Int32)">
            ############################################################
             <summary>
             Removes the referenced 'table name'/'ID column name' pair from this instance.
             </summary>
             <param name="iIndex">0-based integer representing the desired 'table name'/'ID column name' pair's index.</param>
            ############################################################
             <LastUpdated>August 16, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.FindIndex(System.String,System.String)">
            ############################################################
             <summary>
             Returns the index of the referenced 'table name'/'ID column name' pair from this instance.
             </summary>
             <remarks>
             NOTE: Both <paramref>sTableName</paramref> and <paramref>sIDColumn</paramref> are compared as case insensitive.
             </remarks>
             <param name="sTableName">String representing the desired 'table name'.</param>
             <param name="sIDColumn">String representing the desired 'ID column name'.</param>
            ############################################################
             <LastUpdated>June 3, 2004</LastUpdated>
        </member>
        <member name="P:Cn.Data.Pagination.StartRecord">
            ############################################################
             <summary>
             Gets/sets the starting record number for the 'results window' that this instance represents.
             <para/>This functionality allows the developer to 'window' thru a large collection of 'tables'/'IDs' as smaller sets. It is up to the developer to utilize this property in conjunction with the <c>IDCount</c> property to determine if there are results on either side of the current 'window'.
             </summary>
             <value>1-based integer representing the starting record number within this instance.</value>
             <exception cref="T:Cn.CnException">Thrown when the passed integer is less then or equal to zero.</exception>
             <seealso cref="P:Cn.Data.Pagination.IDCount"/>
            ############################################################
             <LastUpdated>September 1, 2004</LastUpdated>
        </member>
        <member name="P:Cn.Data.Pagination.OrderedBy">
            ############################################################
             <summary>
             Gets the SQL Order By Clause used to order the 'IDs' within the this instance.
             </summary>
             <value>OrderByClause class reference representing the 'Order By' clause used to order the 'IDs' within this instance.</value>
            ############################################################
             <LastUpdated>May 11, 2004</LastUpdated>
        </member>
        <member name="P:Cn.Data.Pagination.DataIsLoaded">
            ############################################################
             <summary>
             Gets a value indicating if data has been loaded into this instance.
             </summary>
             <value>Boolean value signaling the presence of data within this instance.<para/>Returns true if data has been loaded within this instance, or false if no data is present.</value>
            ############################################################
             <LastUpdated>August 16, 2005</LastUpdated>
        </member>
        <member name="P:Cn.Data.Pagination.TableCount">
            ############################################################
             <summary>
             Gets the total count of 'tables' within this instance.
             </summary>
             <value>1-based integer representing the count of 'tables' within this instance.</value>
            ############################################################
             <LastUpdated>August 16, 2005</LastUpdated>
        </member>
        <member name="P:Cn.Data.Pagination.IDCount">
            ############################################################
             <summary>
             Gets the total count of 'IDs' within this instance.
             </summary>
             <value>1-based integer representing the count of 'IDs' within this instance.</value>
            ############################################################
             <LastUpdated>August 16, 2005</LastUpdated>
        </member>
        <member name="T:Cn.Data.Pagination.PaginationTable">
            ########################################################################################################################
             <summary>
             A child class of Pagination used to store a single 'table name'/'ID column name' entry from the parsed/loaded data.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>August 15, 2005</LastFullCodeReview>
        </member>
        <member name="M:Cn.Data.Pagination.PaginationTable.#ctor">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
            ############################################################
             <LastUpdated>June 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.PaginationTable.AddID(System.String)">
            ############################################################
             <summary>
             Adds the provided ID into the IDs collection.
             </summary>
             <remarks>
             This is a pseudo-parameterized property implimentation. The overloaded pair of methods serve the same function as a parameterized property would.
             </remarks>
             <param name="sID">String representing the desired ID to add.</param>
            ############################################################
             <LastUpdated>June 21, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.PaginationTable.CollectedID(System.Int32)">
            ############################################################
             <summary>
             Gets/sets the 'ID was collected' value present at the referenced index (pseudo-parameterized property).
             </summary>
             <remarks>
             This is a pseudo-parameterized property implimentation. The overloaded pair of methods serve the same function as a parameterized property would.
             </remarks>
             <param name="iIndex">0-based integer representing the desired 'ID was collected' index.</param>
             <value>Boolean value representing if the 'ID' at the passed <paramref>iIndex</paramref> was collected.</value>
            ############################################################
             <LastUpdated>January 4, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.PaginationTable.CollectedID(System.Int32,System.Boolean)">
            ############################################################
             <summary>
             Gets/sets the 'ID was collected' value present at the referenced index (pseudo-parameterized property).
             </summary>
             <remarks>
             This is a pseudo-parameterized property implimentation. The overloaded pair of methods serve the same function as a parameterized property would.
             </remarks>
             <param name="iIndex">0-based integer representing the desired 'ID was collected' index.</param>
             <param name="bNewValue">Boolean value representing the new value for the referenced index.</param>
            ############################################################
             <LastUpdated>January 4, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.PaginationTable.SetCollectedIDs">
            ############################################################
             <summary>
             Sets all of the IDs wihtin this instance as collected.
             </summary>
            ############################################################
             <LastUpdated>May 30, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.PaginationTable.SetCollectedIDs(System.String[])">
            ############################################################
             <summary>
             Sets the group of successfully collected 'IDs'.
             </summary>
             <param name="a_sIDs">String array where each index represents an 'ID' present within this instances collection of 'IDs'.</param>
            ############################################################
             <LastUpdated>May 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.PaginationTable.ErroredID(System.Int32)">
            ############################################################
             <summary>
             Gets/sets the 'errored ID' value present at the referenced index (pseudo-parameterized property).
             </summary>
             <remarks>
             This is a pseudo-parameterized property implimentation. The overloaded pair of methods serve the same function as a parameterized property would.
             </remarks>
             <param name="iIndex">0-based integer representing the desired 'errored ID' index.</param>
             <value>Boolean value representing if the 'ID' at the passed <paramref>iIndex</paramref> is errored.</value>
            ############################################################
             <LastUpdated>June 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.PaginationTable.ErroredID(System.Int32,System.Boolean)">
            ############################################################
             <summary>
             Gets/sets the 'errored ID' value present at the referenced index (pseudo-parameterized property).
             </summary>
             <remarks>
             This is a pseudo-parameterized property implimentation. The overloaded pair of methods serve the same function as a parameterized property would.
             </remarks>
             <param name="iIndex">0-based integer representing the desired 'errored ID' index.</param>
             <param name="bNewValue">Boolean value representing the new value for the referenced index.</param>
            ############################################################
             <LastUpdated>June 18, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.PaginationTable.GenerateSQLInClause">
            ############################################################
             <summary>
             Returns a SQL In Clause for the 'IDs' within this instance.
             </summary>
             <returns>String that represents a single SQL In Clause containing all of the 'IDs' present within this instance.</returns>
            ############################################################
             <LastUpdated>September 7, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.Pagination.PaginationTable.GenerateSQLInClause(System.Int32)">
            ############################################################
             <summary>
             Returns a collection of SQL In Clauses for the 'IDs' within this instance.
             </summary>
             <param name="iMaxIDCountPerClause">1-based integer representing the desired maximum number of 'IDs' per returned clause.</param>
             <returns>String array where each index represents a single SQL In Clause with no more then the passed <paramref>iMaxIDCountPerClause</paramref>, the total of which contain all of the 'IDs' present within this instance.</returns>
            ############################################################
             <LastUpdated>March 2, 2007</LastUpdated>
        </member>
        <member name="P:Cn.Data.Pagination.PaginationTable.IDs">
            ############################################################
             <summary>
             Gets/sets the collection of 'IDs' present within this instance.
             </summary>
             <value>String array where each index represents a unique 'ID' present within this instance.</value>
            ############################################################
             <LastUpdated>June 21, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Data.Pagination.PaginationTable.TableName">
            ############################################################
             <summary>
             Gets/sets the 'table name' of this instance.
             </summary>
             <value>String representing the 'table name'.</value>
            ############################################################
             <LastUpdated>May 12, 2004</LastUpdated>
        </member>
        <member name="P:Cn.Data.Pagination.PaginationTable.IDColumn">
            ############################################################
             <summary>
             Gets/sets the 'ID column name' of this instance.
             </summary>
             <value>String representing the 'ID column name'.</value>
            ############################################################
             <LastUpdated>May 12, 2004</LastUpdated>
        </member>
        <member name="P:Cn.Data.Pagination.PaginationTable.MissingIDCount">
            ############################################################
             <summary>
             Gets/sets the total count of missing 'IDs' within this instance.
             </summary>
             <value>1-based integer representing the count of missing 'IDs' within this instance.</value>
            ############################################################
             <LastUpdated>July 20, 2004</LastUpdated>
        </member>
        <member name="P:Cn.Data.Pagination.PaginationTable.IDCount">
            ############################################################
             <summary>
             Gets the total count of 'IDs' within this instance.
             </summary>
             <value>1-based integer representing the count of 'IDs' within this instance.</value>
            ############################################################
             <LastUpdated>June 21, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Dates.Math">
            ########################################################################################################################
             <summary>
             A collection of date calculation-related routines, including the calculation of Business Days based on the loaded holiday calculation data.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>August 10, 2005</LastFullCodeReview>
        </member>
        <member name="M:Cn.Dates.Math.#ctor(Cn.Collections.MultiArray)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="oHolidayCalculationsData">MultiArray representing the entire holiday calculations structure.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> is null or contains no <c>Rows</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> does not contain the required column names as defined by <c>GetColumnNames</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> with an unreconized value in 'DefinitionType'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> with an unreconized value in 'Frequency'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> defined as a <c>cnStatic</c> or <c>cnNthWeekDayInMonth</c> 'DefinitionType' with an invalid value in 'HolidayMonth'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> defined as a <c>cnStatic</c> 'DefinitionType' with an invalid value in 'MonthDay'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> defined as a <c>cnNthWeekDayInMonth</c> 'DefinitionType' with an invalid value in 'WeekInMonth'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> defined as a <c>cnNthWeekDayInMonth</c> 'DefinitionType' with an invalid value in 'WeekDay'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> defined as both a <c>cnCalculated</c> 'DefinitionType' and a non-<c>cnAnnually</c> 'Frequency'.</exception>
            ############################################################
             <LastUpdated>May 7, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Math.Reset(Cn.Collections.MultiArray)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="oHolidayCalculationsData">MultiArray representing the entire holiday calculations structure.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> is null or contains no <c>Rows</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> does not contain the required column names as defined by <c>GetColumnNames</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> with an unreconized value in 'DefinitionType'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> with an unreconized value in 'Frequency'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> defined as a <c>cnStatic</c> or <c>cnNthWeekDayInMonth</c> 'DefinitionType' with an invalid value in 'HolidayMonth'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> defined as a <c>cnStatic</c> 'DefinitionType' with an invalid value in 'MonthDay'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> defined as a <c>cnNthWeekDayInMonth</c> 'DefinitionType' with an invalid value in 'WeekInMonth'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> defined as a <c>cnNthWeekDayInMonth</c> 'DefinitionType' with an invalid value in 'WeekDay'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> defined as both a <c>cnCalculated</c> 'DefinitionType' and a non-<c>cnAnnually</c> 'Frequency'.</exception>
            ############################################################
             <LastUpdated>August 22, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Math.DoReset(System.String,Cn.Collections.MultiArray)">
            ############################################################
             <summary>
             Resets the class to its initilized state, while loading the provided holiday calculations data into this instance.
             </summary>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="oHolidayCalculationsData">MultiArray representing the entire holiday calculations structure.</param>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> is null or contains no <c>Rows</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> does not contain the required column names as defined by <c>GetColumnNames</c>.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> with an unreconized value in 'DefinitionType'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> with an unreconized value in 'Frequency'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> defined as a <c>cnStatic</c> or <c>cnNthWeekDayInMonth</c> 'DefinitionType' with an invalid value in 'HolidayMonth'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> defined as a <c>cnStatic</c> 'DefinitionType' with an invalid value in 'MonthDay'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> defined as a <c>cnNthWeekDayInMonth</c> 'DefinitionType' with an invalid value in 'WeekInMonth'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> defined as a <c>cnNthWeekDayInMonth</c> 'DefinitionType' with an invalid value in 'WeekDay'.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>oHolidayCalculationsData</paramref> contains one or more <c>Rows</c> defined as both a <c>cnCalculated</c> 'DefinitionType' and a non-<c>cnAnnually</c> 'Frequency'.</exception>
            ############################################################
             <LastUpdated>January 27, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Math.AddBusinessDays(System.DateTime,System.Int32,System.String,System.String,System.Boolean)">
            ############################################################
             <summary>
             Calculates the date that is the provided business days from the passed date based on the passed country/region pair.
             </summary>
             <param name="dDate">DateTime representing the date the calculation begins.</param>
             <param name="iBusinessDays">Integer representing the number of business days (positive or negetive) from the provided date.</param>
             <param name="sCountry">String representing the desired developer-defined country code.</param>
             <param name="sRegion">String representing the desired developer-defined region code.</param>
             <param name="bIncludeWeekends">Boolean value signaling if weekends are to be counted as business days within the calculation.</param>
             <returns>DateTime representing the the date that is the provided <paramref>iBusinessDays</paramref> from the passed <paramref>dDate</paramref> based on the provided <paramref>sCountry</paramref>/<paramref>sRegion</paramref> pair.</returns>
            ############################################################
             <LastUpdated>September 13, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Math.BusinessDaysDateDiff(System.DateTime,System.DateTime,System.String,System.String,System.Boolean)">
            ############################################################
             <summary>
             Calculates the number of business days between the provided dates based on the passed country/region pair.
             </summary>
             <remarks>
             NOTE: The passed <paramref>dDate1</paramref> does not need to be before the passed <paramref>dDate2</paramref> (or vise versa). The ordering of <paramref>dDate1</paramref> and <paramref>dDate2</paramref> is not important.
             </remarks>
             <param name="dDate1">DateTime representing the date the calculation begins.</param>
             <param name="dDate2">DateTime representing the date the calculation ends.</param>
             <param name="sCountry">String representing the desired developer-defined country code.</param>
             <param name="sRegion">String representing the desired developer-defined region code.</param>
             <param name="bIncludeWeekends">Boolean value signaling if weekends are to be counted as business days within the calculation.</param>
             <returns>Integer representing the number of business days between the provided <paramref>dDate1</paramref> and <paramref>dDate2</paramref> based on the provided <paramref>sCountry</paramref>/<paramref>sRegion</paramref> pair.</returns>
            ############################################################
             <LastUpdated>September 13, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Math.IsHoliday(System.DateTime,System.String,System.String)">
            ############################################################
             <summary>
             Determines if the passed date is a holiday based on the passed country/region pair.
             </summary>
             <param name="dDate">DateTime representing the date in question.</param>
             <param name="sCountry">String representing the desired developer-defined country code.</param>
             <param name="sRegion">String representing the desired developer-defined region code.</param>
             <returns>Boolean value indicating if the passed <paramref>dDate</paramref> is a holiday within the provided <paramref>sCountry</paramref>/<paramref>sRegion</paramref> pair.</returns>
            ############################################################
             <LastUpdated>September 13, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Math.CalculateFloatingHoliday(System.Int32,System.Int32)">
            ############################################################
             <summary>
             Calculates the referenced floating holiday within the provided year.
             </summary>
             <remarks>
             This function should be overridden by your own implementation which handles your additionally defined floating holidays.
             </remarks>
             <param name="iCalculationEnum">Enumeration representing the required floating holiday calculation.</param>
             <param name="iYear">Integer representing the required year.</param>
             <returns>DateTime representing the date of the floating holiday referenced by <paramref>iCalculationEnum</paramref> for the passed <paramref>iYear</paramref>.</returns>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>iCalculationEnum</paramref> is unreconized by this implementation.</exception>
            ############################################################
             <LastUpdated>August 24, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Math.GetYearsHolidays(System.Int32)">
            ############################################################
             <summary>
             Retrieves a HolidayYear class populated with the passed year's defined holidays.
             </summary>
             <param name="iYear">Integer representing the required year.</param>
             <returns>HolidayYear class populated with the passed <paramref>iYear</paramref>'s defined holidays.</returns>
            ############################################################
             <LastUpdated>October 7, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Math.EasterSunday(System.Int32)">
            ############################################################
             <summary>
             Retrieves the date for Easter Sunday
             </summary>
             <remarks>
             Got this from http://www.erlandsendata.no/english/index.php?d=enfunctionsdateeaster.
             </remarks>
             <param name="iYear">Integer representing the required year.</param>
             <returns>DateTime representing Easter Sunday for the passed <paramref>iYear</paramref>.</returns>
            ############################################################
             <LastUpdated>October 7, 2004</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Math.IsWeekend(System.DateTime,System.Boolean)">
            ############################################################
             <summary>
             Determines if the passed date is a weekend day, taking into account the passed bIncludeWeekends (which basicially tells us to always return false).
             </summary>
             <param name="dDate">DateTime representing the date in question.</param>
             <param name="bIncludeWeekends">Boolean value signaling if weekends are to be counted as business days within the calculation.</param>
             <returns>Boolean value representing if the passed <paramref>dDate</paramref> is considered as a weekend day.</returns>
            ############################################################
             <LastUpdated>June 22, 2004</LastUpdated>
        </member>
        <member name="P:Cn.Dates.Math.GetData">
            ############################################################
             <summary>
             Assists in the collection of the underlying structure which defines this instance.
             </summary>
             <value>CollectionHelper instance configured to collect the underlying structure which defines this instance.</value>
            ############################################################
             <LastUpdated>January 14, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Dates.Math.Data">
            ############################################################
             <summary>
             Gets a deep copy of the underlying structure which defines this instance.
             </summary>
             <value>Deep copy of the MultiArray which defines the metadata of this instance.</value>
            ############################################################
             <LastUpdated>December 18, 2009</LastUpdated>
        </member>
        <member name="T:Cn.Dates.Math.enumDefinitionTypes">
            <summary>Defined holiday definition types.</summary>
        </member>
        <member name="F:Cn.Dates.Math.enumDefinitionTypes.cnStatic">
            <summary>Defined holiday is static (i.e. - September 11, 2001).</summary>
        </member>
        <member name="F:Cn.Dates.Math.enumDefinitionTypes.cnNthWeekDayInMonth">
            <summary>Defined holiday represents an Nth week day in the month (i.e. - 2nd Wednesday of the month, last Monday of the month, etc.).</summary>
        </member>
        <member name="F:Cn.Dates.Math.enumDefinitionTypes.cnCalculated">
            <summary>Defined data is calculated by a referenced method (i.e. - Easter Sunday).</summary>
        </member>
        <member name="T:Cn.Dates.Math.enumFrequencies">
            <summary>Date recurrence frequencies.</summary>
        </member>
        <member name="F:Cn.Dates.Math.enumFrequencies.cnWeekly">
            <summary>Holiday recurs weekly.</summary>
        </member>
        <member name="F:Cn.Dates.Math.enumFrequencies.cnFortnightly">
            <summary>Holiday recurs every second week.</summary>
        </member>
        <member name="F:Cn.Dates.Math.enumFrequencies.cnMonthly">
            <summary>Holiday recurs monthly.</summary>
        </member>
        <member name="F:Cn.Dates.Math.enumFrequencies.cnQuarterly">
            <summary>Holiday recurs every three months.</summary>
        </member>
        <member name="F:Cn.Dates.Math.enumFrequencies.cnTriAnnually">
            <summary>Holiday recurs every four months.</summary>
        </member>
        <member name="F:Cn.Dates.Math.enumFrequencies.cnSemiAnnually">
            <summary>Holiday recurs every six months.</summary>
        </member>
        <member name="F:Cn.Dates.Math.enumFrequencies.cnAnnually">
            <summary>Holiday recurs once a year.</summary>
        </member>
        <member name="T:Cn.Dates.Math.enumCalculations">
            <summary>Defined holiday external calculations.</summary>
            <remarks>NOTE: Matching values are only required for calculations with a "Data" &lt; 1000. All other calculations are developer defined/handled.</remarks>
        </member>
        <member name="F:Cn.Dates.Math.enumCalculations.cnGoodFriday">
            <summary>Good Friday (Friday preceding Easter Sunday).</summary>
        </member>
        <member name="F:Cn.Dates.Math.enumCalculations.cnEaster">
            <summary>Easter Sunday.</summary>
        </member>
        <member name="F:Cn.Dates.Math.enumCalculations.cnEasterMonday">
            <summary>Easter Monday (Monday following Easter Sunday).</summary>
        </member>
        <member name="T:Cn.Dates.Math.HolidayYear">
            ########################################################################################################################
             <summary>
             A child class of DateMath used to store a single year's calculated holidays.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>August 10, 2005</LastFullCodeReview>
        </member>
        <member name="M:Cn.Dates.Math.HolidayYear.#ctor(System.Int32)">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
             <param name="iYear">Integer representing the required year.</param>
            ############################################################
             <LastUpdated>January 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Math.HolidayYear.Reset(System.Int32)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
            ############################################################
             <LastUpdated>January 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Math.HolidayYear.Localities(System.DateTime)">
            ############################################################
             <summary>
             Retrieves the collection of localities for the provided date.
             </summary>
             <param name="dDate">DateTime representing the date in question.</param>
             <returns>String array containing the localities for the passed <paramref>dDate</paramref> (i.e. - "CountryCode:RegionCode", where ":" is the defined SecondaryDelimiter).</returns>
            ############################################################
             <LastUpdated>August 11, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Math.HolidayYear.HasDate(System.DateTime)">
            ############################################################
             <summary>
             Determines if the provided date is considered a holiday in any country/region pair.
             </summary>
             <param name="dDate">DateTime representing the date in question.</param>
             <returns>Boolean value representing if the passed <paramref>dDate</paramref> is considered a holiday within this instance.</returns>
            ############################################################
             <LastUpdated>August 10, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Math.HolidayYear.HasDate(System.DateTime,System.String,System.String)">
            ############################################################
             <summary>
             Determines if the provided date is considered a holiday in the passed country/region pair.
             </summary>
             <param name="dDate">DateTime representing the date in question.</param>
             <param name="sCountry">String representing the desired developer-defined country code.</param>
             <param name="sRegion">String representing the desired developer-defined region code.</param>
             <returns></returns>
            ############################################################
             <LastUpdated>August 17, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Math.HolidayYear.AddLocality(System.DateTime,System.String,System.String)">
            ############################################################
             <summary>
             Sets the provided country/region pair as a locality for the passed date.
             </summary>
             <param name="dDate">DateTime representing the date in question.</param>
             <param name="sCountry">String representing the desired developer-defined country code.</param>
             <param name="sRegion">String representing the desired developer-defined region code.</param>
             <returns>Boolean value indicating if the <paramref>sCountry</paramref>/<paramref>sRegion</paramref> locality pair was successfully set for the passed <paramref>dDate</paramref>.</returns>
            ############################################################
             <LastUpdated>October 7, 2005</LastUpdated>
        </member>
        <member name="P:Cn.Dates.Math.HolidayYear.Year">
            ############################################################
             <summary>
             Gets an integer representing the year loaded into this instance.
             </summary>
             <value>Integer representing the year loaded into this instance.</value>
            ############################################################
             <LastUpdated>August 10, 2005</LastUpdated>
        </member>
        <member name="T:Cn.Data.SQL.enumValueOperators">
            <summary>Column value operators.</summary>
        </member>
        <member name="F:Cn.Data.SQL.enumValueOperators.cnIgnore">
            <summary>Designates that this column is not to be used in the statement at all.</summary>
        </member>
        <member name="F:Cn.Data.SQL.enumValueOperators.cnInsertIfPresent">
            <summary>If a value for the column is present, it is inserted/updated. If no value is present, this column is not to be used in the statement at all.<para/>NOTE: This column is never used within the WHERE clause.</summary>
        </member>
        <member name="F:Cn.Data.SQL.enumValueOperators.cnInsertNullString">
            <summary>Insert/update the column. If no value is present, insert a null-string.<para/>NOTE: This column is never used within the WHERE clause.</summary>
        </member>
        <member name="F:Cn.Data.SQL.enumValueOperators.cnInsertNull">
            <summary>Insert/update the column. If no value is present, insert null.<para/>NOTE: This column is never used within the WHERE clause.</summary>
        </member>
        <member name="F:Cn.Data.SQL.enumValueOperators.cnWhereEqualTo">
            <summary>Equal to the supplied value.</summary>
        </member>
        <member name="F:Cn.Data.SQL.enumValueOperators.cnWhereNotEqualTo">
            <summary>Not equal to the supplied value.</summary>
        </member>
        <member name="F:Cn.Data.SQL.enumValueOperators.cnWhereGreaterThen">
            <summary>Greater then the supplied value.</summary>
        </member>
        <member name="F:Cn.Data.SQL.enumValueOperators.cnWhereGreaterThenOrEqualTo">
            <summary>Greater then or equal to the supplied value.</summary>
        </member>
        <member name="F:Cn.Data.SQL.enumValueOperators.cnWhereLessThen">
            <summary>Less then to the supplied value.</summary>
        </member>
        <member name="F:Cn.Data.SQL.enumValueOperators.cnWhereLessThenOrEqualTo">
            <summary>Less then or equal to the supplied value.</summary>
        </member>
        <member name="F:Cn.Data.SQL.enumValueOperators.cnWhereIsNull">
            <summary>Column is NULL.</summary>
        </member>
        <member name="F:Cn.Data.SQL.enumValueOperators.cnWhereIsNotNull">
            <summary>Column is not NULL.</summary>
        </member>
        <member name="F:Cn.Data.SQL.enumValueOperators.cnWhereLike">
            <summary>Column is LIKE the supplied value.</summary>
        </member>
        <member name="F:Cn.Data.SQL.enumValueOperators.cnWhereNotLike">
            <summary>Column is not LIKE the supplied value.</summary>
        </member>
        <member name="T:Cn.Data.SQL.Statements">
            ########################################################################################################################
             <summary>
             General DataSource-related helper methods.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>July 29, 2005</LastFullCodeReview>
        </member>
        <member name="M:Cn.Data.SQL.Statements.IsUserDataSafe(System.String)">
            ############################################################
             <summary>
             Determines if the provided data contains macilicious SQL statements.
             </summary>
             <param name="sData">String representing the data to check.</param>
             <value>Boolean value signaling the if the provided <paramref>sData</paramref> contains macilicious SQL statements.<para/>Returns true if the <paramref>sData</paramref> is safe, or false if it contains macilicious SQL statements.</value>
            ############################################################
             <LastUpdated>May 15, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.Statements.FormatForSQL(System.String,System.Boolean)">
            ############################################################
             <summary>
             Formats the provided value for insertion within an SQL string, including escaping SQL control strings and optionally escaping SQL wildcard characters.
             </summary>
             <param name="sValue">String representing the value to format.</param>
             <param name="bPadSQLWildcards">Boolean value signaling if SQL wildcard characters also need to be escaped.</param>
             <returns>String representing the formatted data.</returns>
            ############################################################
             <LastUpdated>January 12, 2006</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.Statements.Insert(System.String,Cn.Data.SQL.ColumnDescription[])">
            ############################################################
             <summary>
             Creates a SQL INSERT statement based on the provided data.
             </summary>
             <param name="sTableName">String representing the table name to target.</param>
             <param name="a_oColumns">ColumnDescription array where each index represents a single column to be represented within the statement.</param>
             <returns>String value containing the requested SQL INSERT statement.</returns>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sTableName</paramref> contains macilicious SQL statements.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_oColumns</paramref> is null or contains no columns.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_oColumns</paramref> contains one or more <c>ColumnName</c>'s containing macilicious SQL statements.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_oColumns</paramref> contains no columns defined as insertable/updateable.</exception>
            ############################################################
             <LastUpdated>March 1, 2006</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.Statements.Update(System.String,Cn.Data.SQL.ColumnDescription[])">
            ############################################################
             <summary>
             Creates a SQL UPDATE statement based on the provided data.
             </summary>
             <param name="sTableName">String representing the table name to target.</param>
             <param name="a_oColumns">ColumnDescription array where each index represents a single column to be represented within the statement.</param>
             <returns>String value containing the requested SQL UPDATE statement.</returns>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sTableName</paramref> contains macilicious SQL statements.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_oColumns</paramref> is null or contains no columns.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_oColumns</paramref> contains one or more <c>ColumnName</c>'s containing macilicious SQL statements.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_oColumns</paramref> contains no columns defining the WHERE clause (columns defined as non-insertable/updateable).</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_oColumns</paramref> contains no columns defined as insertable/updateable.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_oColumns</paramref> contains one or more unreconized <c>Operator</c>s.</exception>
            ############################################################
             <LastUpdated>July 10, 2006</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.Statements.Delete(System.String,Cn.Data.SQL.ColumnDescription[])">
            ############################################################
             <summary>
             Creates a SQL DELETE statement based on the provided data.
             </summary>
             <param name="sTableName">String representing the table name to target.</param>
             <param name="a_oColumns">ColumnDescription array where each index represents a single column to be represented within the statement.</param>
             <returns>String value containing the requested SQL DELETE statement.</returns>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>sTableName</paramref> contains macilicious SQL statements.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_oColumns</paramref> is null or contains no columns.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_oColumns</paramref> contains one or more <c>ColumnName</c>s containing macilicious SQL statements.</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_oColumns</paramref> contains no columns defining the WHERE clause (columns defined as non-insertable/updateable).</exception>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>a_oColumns</paramref> contains one or more unreconized <c>Operator</c>s.</exception>
            ############################################################
             <LastUpdated>February 15, 2006</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.Statements.TranslateOperator(System.String,Cn.Data.SQL.enumValueOperators)">
            ############################################################
             <summary>
             Translates the provided comparison operator into the actual operator.
             </summary>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="eValueOperator">Enumeration representing the comparison operator.</param>
             <returns></returns>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>eValueOperator</paramref> is unreconized or defines a insertable/updateable column.</exception>
            ############################################################
             <LastUpdated>September 13, 2005</LastUpdated>
        </member>
        <member name="T:Cn.Data.SQL.ColumnDescription">
            ########################################################################################################################
             <summary>
             Represents a column as an object.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>September 12, 2005</LastFullCodeReview>
        </member>
        <member name="M:Cn.Data.SQL.ColumnDescription.#ctor">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
            ############################################################
             <LastUpdated>January 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.ColumnDescription.Reset">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
            ############################################################
             <LastUpdated>January 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.ColumnDescription.#ctor(Cn.Web.Inputs.InputData)">
            ############################################################
             <summary>
             Resets the class to its initilized state based on the provided data.
             </summary>
             <param name="oInputData">InputData representing the column's metadata.</param>
            ############################################################
             <LastUpdated>January 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.ColumnDescription.Reset(Cn.Web.Inputs.InputData)">
            ############################################################
             <summary>
             Initializes the class based on the provided data.
             </summary>
             <param name="oInputData">InputData representing the column's metadata.</param>
            ############################################################
             <LastUpdated>January 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.ColumnDescription.#ctor(System.String,System.String,System.Boolean,Cn.Data.SQL.enumValueOperators)">
            ############################################################
             <summary>
             Initializes the class based on the provided data.
             </summary>
             <param name="sColumnName">String representing the column name.</param>
             <param name="sValue">String representing the column value.</param>
             <param name="bQuoteValue">Boolean value signaling if the column value needs to be surrounded by quotes.</param>
             <param name="eValueOperator">Enumeration representing the comparison operator, which also signals if the column is insertable/updateable.</param>
            ############################################################
             <LastUpdated>January 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.ColumnDescription.Reset(System.String,System.String,System.Boolean,Cn.Data.SQL.enumValueOperators)">
            ############################################################
             <summary>
             Resets the class to its initilized state based on the provided data.
             </summary>
             <param name="sColumnName">String representing the column name.</param>
             <param name="sValue">String representing the column value.</param>
             <param name="bQuoteValue">Boolean value signaling if the column value needs to be surrounded by quotes.</param>
             <param name="eValueOperator">Enumeration representing the comparison operator, which also signals if the column is insertable/updateable.</param>
            ############################################################
             <LastUpdated>January 11, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Data.SQL.ColumnDescription.ColumnName">
            ############################################################
             <summary>
             Gets/sets the column name.
             </summary>
             <value>String representing the column name.</value>
            ############################################################
             <LastUpdated>February 15, 2006</LastUpdated>
        </member>
        <member name="P:Cn.Data.SQL.ColumnDescription.Value">
            ############################################################
             <summary>
             Gets/sets the column value.
             </summary>
             <value>String representing the column value.</value>
            ############################################################
             <LastUpdated>February 15, 2006</LastUpdated>
        </member>
        <member name="P:Cn.Data.SQL.ColumnDescription.Operator">
            ############################################################
             <summary>
             Gets/sets the comparison operator, which also signals if the column is insertable/updateable.
             </summary>
             <value>Enumeration representing the column's comprison operator, or signaling that the column is insertable/updateable.</value>
            ############################################################
             <LastUpdated>January 4, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Data.SQL.ColumnDescription.Quote">
            ############################################################
             <summary>
             Gets/sets a value indicating if column value needs to be surrounded by quotes.
             </summary>
             <value>Boolean value signaling if the value needs to be surrounded by quotes.<para/>Returns true if the column value needs to be surrounded by quotes, or false if it does not.</value>
            ############################################################
             <LastUpdated>January 4, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Data.SQL.ColumnDescription.IsInsertOrUpdateColumn">
            ############################################################
             <summary>
             Gets a value indicating if the column is insertable/updateable.
             </summary>
             <value>Boolean value signaling if the column is insertable/updateable or part of the WHERE clause.<para/>Returns true if the column is insertable/updateable, or false if the column is to be used in the WHERE clause only.</value>
            ############################################################
             <LastUpdated>January 4, 2010</LastUpdated>
        </member>
        <member name="P:Cn.Data.SQL.ColumnDescription.IsWhereClauseColumn">
            ############################################################
             <summary>
             Gets a value indicating if the column is to be used in the WHERE clause.
             </summary>
             <value>Boolean value signaling if the column is to be used in the WHERE clause or not.<para/>Returns true if the column is to be used in the WHERE clause, or false if the column is not.</value>
            ############################################################
             <LastUpdated>January 4, 2010</LastUpdated>
        </member>
        <member name="T:Cn.Data.SQL.OrderByClause">
            ########################################################################################################################
             <summary>
             Represents a SQL Order By clause as an object.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>August 12, 2005</LastFullCodeReview>
        </member>
        <member name="M:Cn.Data.SQL.OrderByClause.#ctor">
            ############################################################
             <summary>
             Initializes the class.
             </summary>
            ############################################################
             <LastUpdated>December 24, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.OrderByClause.Reset">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
            ############################################################
             <LastUpdated>December 24, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.OrderByClause.#ctor(System.String)">
            ############################################################
             <summary>
             Initializes the class based on the provided Order By clause.
             </summary>
             <param name="sOrderByClause">String representing a SQL Order By clause.</param>
            ############################################################
             <LastUpdated>December 24, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.OrderByClause.Reset(System.String)">
            ############################################################
             <summary>
             Resets the class to its initilized state.
             </summary>
             <param name="sOrderByClause">String representing a SQL Order By clause.</param>
            ############################################################
             <LastUpdated>December 24, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.OrderByClause.Load(System.String)">
            ############################################################
             <summary>
             Loads the provided Order By clause into this instance.
             </summary>
             <param name="sOrderByClause">String representing a SQL Order By clause.</param>
             <returns>Boolean value signaling if the data load was a success.<para/>Returns true if the passed <paramref>sOrderByClause</paramref> was successfully loaded, or false if it was not.</returns>
            ############################################################
             <LastUpdated>September 13, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.OrderByClause.ColumnName(System.Int32)">
            ############################################################
             <summary>
             Gets/sets the column name string value present at the referenced index.
             </summary>
             <param name="iIndex">0-based integer representing the desired column name index.</param>
             <returns>String representing the column name of the passed <paramref>iIndex</paramref>.</returns>
            ############################################################
             <LastUpdated>November 4, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.OrderByClause.RenameColumn(System.Int32,System.String)">
            ############################################################
             <summary>
             Gets/sets the column name string value present at the referenced index.
             </summary>
             <param name="iIndex">0-based integer representing the desired column name index.</param>
             <param name="sNewValue">String representing the new value for the referenced index.</param>
            ############################################################
             <LastUpdated>November 4, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.OrderByClause.SortAscending(System.Int32)">
            ############################################################
             <summary>
             Gets/sets the sort ascending boolean value present at the referenced index (pseudo-parameterized property).
             </summary>
             <remarks>
             This is a pseudo-parameterized property implimentation. The overloaded pair of methods serve the same function as a parameterized property would.
             </remarks>
             <param name="iIndex">0-based integer representing the desired sort ascending index.</param>
             <value>Boolean value signaling the if the column at the passed <paramref>iIndex</paramref> is sorted in ascending or descending order.<para/>Returns true if the column is sorted in ascending order, or false if it is sorted in descending order.</value>
            ############################################################
             <LastUpdated>November 4, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.OrderByClause.SortAscending(System.Int32,System.Boolean)">
            ############################################################
             <summary>
             Gets/sets the sort ascending boolean value present at the referenced index (pseudo-parameterized property).
             </summary>
             <remarks>
             This is a pseudo-parameterized property implimentation. The overloaded pair of methods serve the same function as a parameterized property would.
             </remarks>
             <param name="iIndex">0-based integer representing the desired sort ascending index.</param>
             <param name="bNewValue">Boolean value representing the new value for the referenced index.</param>
            ############################################################
             <LastUpdated>November 4, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.OrderByClause.Enabled(System.Int32)">
            ############################################################
             <summary>
             Gets/sets the column enabled boolean value present at the referenced index.
             </summary>
             <param name="iIndex">0-based integer representing the desired enabled index.</param>
             <value>Boolean value signaling the if the column at the passed <paramref>iIndex</paramref> is enabled.<para/>Returns true if the column is enabled, or false if it is not.</value>
            ############################################################
             <LastUpdated>November 4, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.OrderByClause.Enable(System.Int32,System.Boolean)">
            ############################################################
             <summary>
             Gets/sets the column enabled boolean value present at the referenced index.
             </summary>
             <param name="iIndex">0-based integer representing the desired enabled index.</param>
             <param name="bNewValue">Boolean value representing the new value for the referenced index.</param>
            ############################################################
             <LastUpdated>November 4, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.OrderByClause.EnableOnly(System.String)">
            ############################################################
             <summary>
             Enables the referenced columns that are present within this instance.
             </summary>
             <param name="sEnabledColumns">String representing the comma delimited column names to enable.</param>
            ############################################################
             <LastUpdated>August 12, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.OrderByClause.EnableAll">
            ############################################################
             <summary>
             Re-enables all of the columns present within this instance.
             </summary>
            ############################################################
             <LastUpdated>December 24, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.OrderByClause.InvertSortOrder">
            ############################################################
             <summary>
             Inverts the current sort ordering of this instance.
             </summary>
            ############################################################
             <LastUpdated>May 25, 2004</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.OrderByClause.ToString">
            ############################################################
             <summary>
             Retrieves a properly formatted SQL Order By clause based on the current instance's <c>Enabled</c> columns.
             </summary>
             <returns>String containing a SQL Order By clause based on the current instance, or a null-string if no clause has been defined.</returns>
            ############################################################
             <LastUpdated>December 24, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.OrderByClause.ToString(System.Boolean,System.Boolean)">
            ############################################################
             <summary>
             Retrieves a properly formatted SQL Order By clause based on the current instance.
             </summary>
             <param name="bReturnAllColumns">Boolean value signaling if all of columns present within this instance are to be returned.<para/>True returns all columns present within this instance, false returns only those columns currently set as <c>Enabled</c>.</param>
             <param name="bIncludeOrderBy">Boolean value signaling if the "ORDER BY" keywords are to be included within the return value.</param>
             <returns>String containing a SQL Order By clause based on the current instance, or a null-string if no clause has been defined.</returns>
            ############################################################
             <LastUpdated>December 24, 2009</LastUpdated>
        </member>
        <member name="M:Cn.Data.SQL.OrderByClause.SetCount(System.Int32)">
            ############################################################
             <summary>
             Redimensions the global arrays to the referenced dimension count.
             </summary>
             <param name="iColumnCount">1-based integer representing the desired array element count.</param>
            ############################################################
             <LastUpdated>December 24, 2009</LastUpdated>
        </member>
        <member name="P:Cn.Data.SQL.OrderByClause.ColumnCount">
            ############################################################
             <summary>
             Gets the column count within this instance.
             </summary>
             <value>1-based integer representing the count of columns within this instance.</value>
            ############################################################
             <LastUpdated>September 13, 2005</LastUpdated>
        </member>
        <member name="T:Cn.Dates.enumWeekDays">
            <summary>Days of the week.</summary>
        </member>
        <member name="F:Cn.Dates.enumWeekDays.cnSunday">
            <summary>Sunday.</summary>
        </member>
        <member name="F:Cn.Dates.enumWeekDays.cnMonday">
            <summary>Monday.</summary>
        </member>
        <member name="F:Cn.Dates.enumWeekDays.cnTuesday">
            <summary>Tuesday.</summary>
        </member>
        <member name="F:Cn.Dates.enumWeekDays.cnWednesday">
            <summary>Wednesday.</summary>
        </member>
        <member name="F:Cn.Dates.enumWeekDays.cnThursday">
            <summary>Thursday.</summary>
        </member>
        <member name="F:Cn.Dates.enumWeekDays.cnFriday">
            <summary>Friday.</summary>
        </member>
        <member name="F:Cn.Dates.enumWeekDays.cnSaturday">
            <summary>Saturday.</summary>
        </member>
        <member name="T:Cn.Dates.enumWeekOfYearCalculations">
            <summary>Defined week of year (week number) calculations.</summary>
        </member>
        <member name="F:Cn.Dates.enumWeekOfYearCalculations.cnDefault">
            <summary>Default week of year (week number) calculation, which logicially equates to <c>cnISO8601</c>.</summary>
        </member>
        <member name="F:Cn.Dates.enumWeekOfYearCalculations.cnISO8601">
            <summary>ISO 8601 week numbers (a.k.a. - the 4 day rule).</summary>
            <remarks>
            ISO 8601 defines the Week as always starting with Monday being Day 1 and finishing with Sunday being Day 7. Therefore, the days of a single ISO Week can be in two different Calendar Years; and, because a Calendar Year has one or two more than 52×7 days, an ISO Year has either 52 or 53 Weeks.
            <para/>Thus the ISO 8601 Week Numbers of a year are 01 to 52 or 53, which does not include zero. Part of Week 01 may be in the previous Calendar Year; part of Week 52 may be in the following Calendar Year; if a year has a Week 53, part of that week must be in the following Calendar Year. On average, six times out of seven, adjacent Dec 31st and Jan 1st are in the same Week. (quoted from: http://www.merlyn.demon.co.uk/weekinfo.htm#WkNo)
            </remarks>
        </member>
        <member name="F:Cn.Dates.enumWeekOfYearCalculations.cnAbsolute">
            <summary>Absolute week numbers (a.k.a - the Jan 1 rule).</summary>
            <remarks>
            An absolute week number is the 7 day period that a date falls within, based solely on the first day of the year, regardless of the day of the week.
            <para/>Week 1 is always Jan-1 to Jan-7, week 2 is always Jan-8 to Jan-14, and so on.  If the year begins on a Thursday, then each "week" is from Thursday to the following Wednesday. The absolute week number will always be between 1 and 53.   Week 53 will have either one or two days, depending on whether the year is a leap year.   If the year is a not a leap year, week 53 will consist of one day: Dec-31.  If the year is a leap year, week 53 will consist of two days: Dec-30 and Dec-31. (quoted from: http://www.cpearson.com/excel/weeknum.htm)
            </remarks>
        </member>
        <member name="F:Cn.Dates.enumWeekOfYearCalculations.cnSimple_Sunday">
            <summary>Simple week numbers, weeks beginning on Sunday.</summary>
            <remarks>
            January 1st is always within week 1, and there are either 53 or 54 weeks in a year. This functions just like Excel's WeekNum function.
            <para/>Week 1 is generally less than 7 days; and, about once per 28 years, there is a Week 54 consisting of Sunday Dec 31st, 2000 being one such year. (quoted from: http://www.merlyn.demon.co.uk/weekinfo.htm#WkNo)
            </remarks>
        </member>
        <member name="F:Cn.Dates.enumWeekOfYearCalculations.cnSimple_Monday">
            <summary>Simple week numbers, weeks beginning on Monday.</summary>
            <remarks>
            See the simple week number <see href="Cn.DateMath.enumWeekOfYearCalculations.cnSimple_Sunday">remarks</see>.
            </remarks>
        </member>
        <member name="F:Cn.Dates.enumWeekOfYearCalculations.cnSimple_Tuesday">
            <summary>Simple week numbers, weeks beginning on Tuesday.</summary>
            <remarks>
            See the simple week number <see href="Cn.DateMath.enumWeekOfYearCalculations.cnSimple_Sunday">remarks</see>.
            </remarks>
        </member>
        <member name="F:Cn.Dates.enumWeekOfYearCalculations.cnSimple_Wednesday">
            <summary>Simple week numbers, weeks beginning on Wednesday.</summary>
            <remarks>
            See the simple week number <see href="Cn.DateMath.enumWeekOfYearCalculations.cnSimple_Sunday">remarks</see>.
            </remarks>
        </member>
        <member name="F:Cn.Dates.enumWeekOfYearCalculations.cnSimple_Thursday">
            <summary>Simple week numbers, weeks beginning on Thurday.</summary>
            <remarks>
            See the simple week number <see href="Cn.DateMath.enumWeekOfYearCalculations.cnSimple_Sunday">remarks</see>.
            </remarks>
        </member>
        <member name="F:Cn.Dates.enumWeekOfYearCalculations.cnSimple_Friday">
            <summary>Simple week numbers, weeks beginning on Friday.</summary>
            <remarks>
            See the simple week number <see href="Cn.DateMath.enumWeekOfYearCalculations.cnSimple_Sunday">remarks</see>.
            </remarks>
        </member>
        <member name="F:Cn.Dates.enumWeekOfYearCalculations.cnSimple_Saturday">
            <summary>Simple week numbers, weeks beginning on Saturday.</summary>
            <remarks>
            See the simple week number <see href="Cn.DateMath.enumWeekOfYearCalculations.cnSimple_Sunday">remarks</see>.
            </remarks>
        </member>
        <member name="T:Cn.Dates.Tools">
            ########################################################################################################################
             <summary>
             A collection of date calculation-related routines, including the calculation of Business Days based on the loaded holiday calculation data.
             </summary>
            ########################################################################################################################
             <LastFullCodeReview>August 10, 2005</LastFullCodeReview>
        </member>
        <member name="M:Cn.Dates.Tools.FormatDateTime(System.String,System.String,Cn.Configuration.Internationalization)">
            ############################################################
             <summary>
             Formats the provided date based on the referenced format.
             </summary>
             <param name="sDate">String representing the date to format.</param>
             <param name="sFormat">String representing the format to apply to the provided date.</param>
             <param name="oInternationalization">Instance of a Cn.Configuration.Internationalization class that has been loaded with the revelent internationalization data.</param>
             <returns>String value containing the formatted <paramref>sDate</paramref> as defined within the passed <paramref>sFormat</paramref> and <paramref>sLanguageCode</paramref>.</returns>
            ############################################################
             <LastUpdated>January 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Tools.FormatDateTime(System.DateTime,System.String,Cn.Configuration.Internationalization)">
            ############################################################
             <summary>
             Formats the provided date based on the referenced format.
             </summary>
             <param name="dDate">DateTime representing the date to format.</param>
             <param name="sFormat">String representing the format to apply to the provided date.</param>
             <param name="oInternationalization">Instance of a Cn.Configuration.Internationalization class that has been loaded with the revelent internationalization data.</param>
             <returns>String value containing the formatted <paramref>dDate</paramref> as defined within the passed <paramref>sFormat</paramref> and <paramref>sLanguageCode</paramref>.</returns>
            ############################################################
             <LastUpdated>January 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Tools.FormatDateTime(System.String,System.String,Cn.Configuration.Internationalization,Cn.Dates.enumWeekOfYearCalculations)">
            ############################################################
             <summary>
             Formats the provided date based on the referenced format.
             </summary>
             <param name="sDate">String representing the date to format.</param>
             <param name="sFormat">String representing the format to apply to the provided date.</param>
             <param name="oInternationalization">Instance of a Cn.Configuration.Internationalization class that has been loaded with the revelent internationalization data.</param>
             <param name="eWeekOfYearCalculation">Enumeration representing which week of year (week number) calculation to utilize.</param>
             <returns>String value containing the formatted <paramref>sDate</paramref> as defined within the passed <paramref>sFormat</paramref> and <paramref>sLanguageCode</paramref>.</returns>
            ############################################################
             <LastUpdated>January 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Tools.FormatDateTime(System.DateTime,System.String,Cn.Configuration.Internationalization,Cn.Dates.enumWeekOfYearCalculations)">
            ############################################################
             <summary>
             Formats the provided date based on the referenced format.
             </summary>
             <param name="dDate">DateTime representing the date to format.</param>
             <param name="sFormat">String representing the format to apply to the provided date.</param>
             <param name="oInternationalization">Instance of a Cn.Configuration.Internationalization class that has been loaded with the revelent internationalization data.</param>
             <param name="eWeekOfYearCalculation">Enumeration representing which week of year (week number) calculation to utilize.</param>
             <returns>String value containing the formatted <paramref>dDate</paramref> as defined within the passed <paramref>sFormat</paramref> and <paramref>sLanguageCode</paramref>.</returns>
            ############################################################
             <LastUpdated>January 11, 2010</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Tools.NthWeekdayInMonth(System.Int32,System.Int32,System.Int32,Cn.Dates.enumWeekDays)">
            ############################################################
             <summary>
             Determines the Nth week day of the provided month/year.
             </summary>
             <remarks>
             Example #1: The second Wednesday in March - NthWeekdayInMonth(2005, 3, 2, enumWeekDays.cnWednesday)
             Example #2: The last Monday in June - NthWeekdayInMonth(2005, 6, -1, enumWeekDays.cnMonday)
             </remarks>
             <param name="iYear">Integer representing the required year.</param>
             <param name="iMonth">Integer representing the required month.</param>
             <param name="iNthWeek">Non-zero integer representing the required week.</param>
             <param name="eWeekday">Enumeration representing the required week day.</param>
             <returns>DateTime representing the the date of the <paramref>eWeekday</paramref> within the <paramref>iNthWeek</paramref> for the provided <paramref>iMonth</paramref>/<paramref>iYear</paramref>.</returns>
             <exception cref="T:Cn.CnException">Thrown when the passed <paramref>iNthWeek</paramref> is 0.</exception>
            ############################################################
             <LastUpdated>August 10, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Tools.DayOfWeek(System.DateTime)">
            ############################################################
             <summary>
             Determines the week day of the passed date.
             </summary>
             <remarks>
             NOTE: Required by C# as there is no "DatePart(.WeekDay)".
             </remarks>
             <param name="dDate">DateTime representing the date in question.</param>
             <returns>Enumeration representing the week day for the passed <paramref>dDate</paramref>.</returns>
            ############################################################
             <LastUpdated>December 2, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Tools.Timestamp">
            ############################################################
             <summary>
             Retrieves the current Unix-style EPOCH timestamp.
             </summary>
             <remarks>
             NOTE: Can debug output at http://www.argmax.com/mt_blog/archive/000328.php?ts=1058415153
             </remarks>
             <returns>Double representing the current Unix-style EPOCH timestamp.</returns>
            ############################################################
             <LastUpdated>December 2, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Tools.TimeZoneOffset">
            ############################################################
             <summary>
             Retrieves the current timezone offset (in seconds).
             </summary>
             <returns>Integer representing the the number of seconds between the current local time and the current GMT (UTC) time.</returns>
            ############################################################
             <LastUpdated>December 2, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Tools.DaysInMonth(System.Int32,System.Int32)">
            ############################################################
             <summary>
             Determines the number of days in the provided month for the passed year.
             </summary>
             <remarks>
             NOTE: This function returns 0 if the passed <paramref>iMonth</paramref> is unreconized. <paramref>iMonth</paramref> should be within the following range: 1-12.
             </remarks>
             <param name="iYear">Integer representing the required year.</param>
             <param name="iMonth">Integer representing the required month.</param>
             <returns>Integer representing the number of days within the passed <paramref>iMonth</paramref>/<paramref>iYear</paramref>.</returns>
            ############################################################
             <LastUpdated>December 2, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Tools.IsLeapYear(System.Int32)">
            ############################################################
             <summary>
             Determines if the passed year is a leap year.
             </summary>
             <remarks>
            	The three rules which the Gregorian calendar uses to determine leap year are as follows:
            		1) Years divisible by four are leap years, unless...
            		2) Years also divisible by 100 are not leap years, except...
            		3) Years divisible by 400 are leap years.
             </remarks>
             <param name="iYear">Integer representing the required year.</param>
             <returns>Boolean value indicating if the passed <paramref>iYear</paramref> is a leap year.</returns>
            ############################################################
             <LastUpdated>December 2, 2005</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Tools.WeekOfYear(System.DateTime,Cn.Dates.enumWeekOfYearCalculations)">
            ############################################################
             <summary>
             Determines the referenced week number for the given date.
             </summary>
             <param name="dDateTime">DateTime representing the date in question.</param>
             <param name="eCalculation">Enumeration representing which week of year (week number) calculation to utilize.</param>
             <returns>Array of 1-based integers where the first index represents the week number for the passed <paramref>dDateTime</paramref> and the second index represents the week number's associated year.</returns>
            ############################################################
             <LastUpdated>March 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Tools.DoFormatDateTime(System.String,System.DateTime,System.String,Cn.Configuration.Internationalization,Cn.Dates.enumWeekOfYearCalculations)">
            ############################################################
             <summary>
             Formats the provided date based on the referenced format.
             </summary>
             <remarks>
             The provided date format is specified using the constants listed below. The provided examples, which are presented directly after each constant in parenthesis, are based on the following date: "2005-January-5 14:45:05 GMT".
             <para/> * Year:
             <para/>     $YY (ex: 05)
             <para/>     $YYYY (ex: 2005)
             <para/> * Month:
             <para/>     $M (ex: 1)
             <para/>     $MM (ex: 01)
             <para/>     $MMM (ex: Jan)
             <para/>     $MMMM (ex: January)
             <para/> * Day:
             <para/>     $D (ex: 5)
             <para/>     $DD (ex: 5)
             <para/> * Day Suffix (i.e.: 1st, 2nd, 3rd):
             <para/>     $S (ex: th)
             <para/> * Day of Week (Sunday = 1 ... Saturday = 7):
             <para/>     $W (ex: 4)
             <para/>     $WWW (ex: Wed)
             <para/>     $WWWW (ex: Wednesday)
             <para/> * Day of Year:
             <para/>     $J (ex: 5)
             <para/>     $JJJ (ex: 005)
             <para/> * Week of Year (including its year, as required by ISO 8601 week numbers):
             <para/>     $w (ex: 1)
             <para/>     $ww (ex: 01)
             <para/>     $yy (ex: 05)
             <para/>     $yyyy (ex: 2005)
             <para/>         NOTE: These values are based on the week numbering scheme referenced by <paramref>eWeekOfYearCalculation</paramref>. There are a host of other week numbering schemes (see: http://www.merlyn.demon.co.uk/weekinfo.htm#WkNo, http://www.merlyn.demon.co.uk/weekcalc.htm#NIP and http://www.merlyn.demon.co.uk/js-dates.htm), many of which seem to be anything but "standard". If you require a different week numbering scheme, please contact Nick Campbeln via email: "renderer_weeknumbering@nick.campbeln.com".
             <para/> * UNIX Epoch Timestamp:
             <para/>     $E (ex: 1104936305)
             <para/> * 24 Hour:
             <para/>     $H (ex: 14)
             <para/>     $HH (ex: 14)
             <para/> * 12 Hour:
             <para/>     $h (ex: 2)
             <para/>     $hh (ex: 2)
             <para/> * Mederian (i.e.: am/pm):
             <para/>     $tt (ex: pm)
             <para/> * Minute:
             <para/>     $m (ex: 45)
             <para/>     $mm (ex: 45)
             <para/> * Second:
             <para/>     $s (ex: 5)
             <para/>     $ss (ex: 05)
             <para/> * Escaped dollar sign:
             <para/>     $$ (ex: $)
             </remarks>
             <param name="sFunction">String representing the calling function's name.</param>
             <param name="dDate">DateTime representing the date to format.</param>
             <param name="sFormat">String representing the format to apply to the provided date.</param>
             <param name="oInternationalization">Instance of a Cn.Configuration.Internationalization class that has been loaded with the revelent internationalization data.</param>
             <param name="eWeekOfYearCalculation">Enumeration representing which week of year (week number) calculation to utilize.</param>
             <returns>String value containing the formatted <paramref>dDate</paramref> as defined within the passed <paramref>sFormat</paramref> and <paramref>sLanguageCode</paramref>.</returns>
            ############################################################
             <LastUpdated>May 10, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Tools.WeekOfYear_Simple(System.DateTime,Cn.Dates.enumWeekDays)">
            ############################################################
             <summary>
             Determines the simple week number (functionally equivlent to Excel's WeekNum) for the given date.
             </summary>
             <param name="dDateTime">DateTime representing the date in question.</param>
             <param name="eStartOfWeek">Enumeration representing the starting day of the week.</param>
             <returns>1-based integer representing the simple week number for the passed <paramref>dDateTime</paramref> based on the provided <paramref>eStartOfWeek</paramref>.</returns>
            ############################################################
             <LastUpdated>March 2, 2007</LastUpdated>
        </member>
        <member name="M:Cn.Dates.Tools.WeekOfYear_ISO8601(System.DateTime)">
            ############################################################
             <summary>
             Determines the ISO 8601 week number (also known as the 4 day rule) for the given date.
             </summary>
             <remarks>
             Based on code written by Simen Sandelien and provided (without license) at "http://konsulent.sandelien.no/VB_help/Week/".
             <para/>The .NET GetWeekOfYear() method will NOT produce correct ISO 8601 week numbers regardless of culture or CalendarWeekRule settings. Here is an explanation of the problem, as well as a custom method that does the right calculation.
             <para/>I [Simen Sandelien] recently encountered a situation where I needed my C#.NET application to display the correct week number associated with a date. Knowing that the different countries of the world have different rules associated with their calendars I assumed that this would be the perfect situation to bring in the new culture features of .NET. Here in Norway, and apparently in many other parts of Europe we use the so called FirstFourDayWeek rule to determine which week (at the beginning of the year) is supposed to be week number 1. In the USA they use the so called FirstDay rule to determine the same thing.  
             </remarks>
             <param name="dDateTime">DateTime representing the date in question.</param>
             <returns>Array of 1-based integers where the first index represents the ISO week number (1-53) for the passed date and the second index represents the ISO week number's associated year.</returns>
            ############################################################
             <LastUpdated>March 2, 2007</LastUpdated>
        </member>
    </members>
</doc>
